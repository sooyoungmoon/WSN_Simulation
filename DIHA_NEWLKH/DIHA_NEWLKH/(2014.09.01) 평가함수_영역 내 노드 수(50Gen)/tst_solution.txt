level: 1, index = 0 { 24(402, 429) 8(416, 45) 146(432, 91) 76(226, 123) 201(94, 479) 12(38, 443) 54(220, 377) 15(494, 123) 68(110, 263) 247(76, 49) 31(182, 389) 277(498, 491) 113(494, 187) 168(318, 395) 228(316, 279) 6(330, 445) 45(266, 397) 151(162, 495) 102(328, 445) 37(276, 75) 282(212, 465) 17(268, 459) 49(494, 385) 11(98, 19) 132(320, 381) 205(260, 455) 225(52, 395) 26(208, 65) 287(356, 155) 196(12, 327) 82(408, 363) 245(470, 273) 224(312, 165) 81(452, 475) 7(86, 129) 298(136, 419) 235(456, 141) 203(86, 303) 110(226, 181) 213(194, 431) 167(252, 423) 215(176, 281) 3(286, 321) 22(442, 475) 10(106, 337) 112(236, 321) 119(394, 255) 100(104, 191) 292(108, 187) 35(480, 15) 230(42, 455) 191(64, 321) 278(340, 327) 195(64, 345) 93(84, 455) 263(262, 321) 27(174, 455) 20(322, 283) 214(304, 313) 120(330, 481) 177(150, 117) 266(230, 255) 123(254, 101) 2(432, 197) 174(330, 241) 61(84, 275) 192(300, 163) 279(288, 441) 197(380, 105) 53(266, 97) 152(318, 391) 84(426, 7) 208(416, 23) 255(482, 131) 57(480, 455) 14(348, 405) 154(132, 147) 78(324, 235) 147(88, 213) 126(214, 373) 72(330, 161) 40(106, 399) 238(232, 473) 65(172, 13) 222(208, 373) 265(80, 189) 51(86, 33) 142(444, 451) 16(306, 81) 136(30, 331) 9(266, 159) 163(260, 113) 133(454, 289) 274(230, 393) 128(438, 337) 36(36, 15) 258(438, 453) 289(76, 53) 188(222, 27) 297(390, 137) 101(60, 161) 88(30, 123) 172(118, 79) 198(222, 265) 148(32, 427) 52(442, 1) 13(264, 493) 157(296, 159) 260(406, 47) 242(400, 253) 71(298, 307) 200(218, 25) 39(96, 147) 272(48, 411) 25(188, 201) 166(306, 217) 42(208, 457) 0(448, 217) 180(406, 315) 220(304, 383) 80(316, 253) 19(456, 21) 90(318, 305) 21(394, 447) 233(154, 419) 73(268, 91) 210(436, 491) 268(10, 221) 94(4, 73) 211(250, 323) 209(292, 79) 246(232, 299) 252(226, 347) 109(360, 131) 216(318, 299) 149(182, 9) 262(306, 145) 1(388, 315) 229(192, 411) 67(56, 409) 156(208, 145) 144(36, 411) 236(424, 241) 140(400, 341) 169(356, 45) 143(356, 287) 96(336, 269) 28(446, 249) 176(22, 423) 186(242, 153) 253(176, 125)  } , COG: ( 258.609, 264.139), avg_dist: 186.471, std_deviation: 74.2415
,  numNodesWithinArea: 88
level: 1, index = 1 { 91(354, 471) 134(340, 11) 217(260, 369) 182(206, 295) 251(482, 211) 171(394, 179) 50(432, 181) 199(96, 213) 99(254, 441) 43(356, 497) 60(446, 431) 155(58, 321) 92(32, 415) 63(474, 419) 58(110, 233) 141(294, 389) 29(292, 255) 239(262, 39) 59(252, 7) 115(290, 19) 158(332, 113) 256(404, 411) 170(114, 107) 249(254, 169) 284(238, 223) 98(210, 477) 261(198, 23) 187(292, 33) 125(376, 449) 111(474, 417) 47(160, 493) 74(330, 103) 30(238, 451) 69(492, 95) 64(318, 61) 270(6, 481) 271(98, 117) 207(286, 241) 226(244, 477) 162(136, 49) 79(376, 461) 114(6, 183) 294(420, 175) 206(444, 163) 291(490, 201) 164(438, 47) 138(120, 249) 212(410, 139) 55(284, 39) 202(34, 57) 234(32, 157) 107(366, 453) 129(98, 91) 237(86, 393) 5(362, 201) 193(470, 51) 283(468, 409) 290(144, 241) 48(106, 289) 160(304, 99) 108(6, 125) 159(58, 345) 56(314, 489) 293(54, 481) 218(12, 73) 77(472, 161) 33(80, 181) 288(314, 185) 86(312, 45) 38(324, 39) 85(372, 37) 131(176, 65) 104(108, 465) 121(58, 179) 122(248, 159) 250(304, 143) 267(496, 409) 244(428, 231) 103(188, 195) 227(366, 195) 89(292, 159) 232(42, 113) 150(420, 387) 105(98, 265) 44(120, 485) 194(342, 5) 116(20, 333) 223(390, 81) 70(18, 175) 173(258, 487) 269(50, 83) 286(318, 17) 257(392, 449) 46(230, 491) 66(26, 159) 137(174, 313) 248(412, 327) 221(62, 191) 117(180, 429) 32(316, 253) 87(396, 495) 240(14, 413) 165(188, 331) 181(290, 279) 97(456, 161) 189(184, 141) 106(328, 333) 204(440, 141) 183(62, 111) 259(80, 217) 243(482, 107) 124(218, 335) 23(494, 343) 127(458, 329) 75(278, 143) 273(52, 167) 276(30, 139) 219(56, 413) 281(78, 471) 18(300, 315) 184(130, 151) 175(260, 205) 179(484, 7) 95(170, 461) 161(180, 1) 130(108, 103) 190(0, 355) 4(108, 185) 153(182, 101) 280(24, 21) 254(404, 285) 299(468, 47) 145(92, 99) 275(150, 79) 135(490, 21) 62(114, 437) 185(296, 85) 34(402, 69) 231(476, 323) 264(34, 117) 41(178, 425) 295(156, 83) 118(148, 21) 139(266, 235) 241(66, 185) 296(116, 185) 83(296, 135) 178(124, 211) 285(54, 283)  } , COG: ( 241.96, 229.443), avg_dist: 201.023, std_deviation: 71.0829
,  numNodesWithinArea: 65
level: 2, index = 0 { 24(402, 429) 8(416, 45) 146(432, 91) 76(226, 123) 201(94, 479) 12(38, 443) 54(220, 377) 15(494, 123) 68(110, 263) 247(76, 49) 31(182, 389) 277(498, 491) 113(494, 187) 168(318, 395) 228(316, 279) 6(330, 445) 45(266, 397) 151(162, 495) 102(328, 445) 37(276, 75) 282(212, 465) 17(268, 459) 49(494, 385) 11(98, 19) 132(320, 381) 205(260, 455) 225(52, 395) 26(208, 65) 287(356, 155) 196(12, 327) 82(408, 363) 245(470, 273) 224(312, 165) 81(452, 475) 7(86, 129) 298(136, 419) 235(456, 141) 203(86, 303) 110(226, 181) 213(194, 431) 167(252, 423) 215(176, 281) 3(286, 321) 22(442, 475) 10(106, 337) 112(236, 321) 119(394, 255) 100(104, 191) 292(108, 187) 35(480, 15) 230(42, 455) 191(64, 321) 278(340, 327) 195(64, 345) 93(84, 455) 263(262, 321) 27(174, 455) 20(322, 283) 214(304, 313) 120(330, 481) 177(150, 117) 266(230, 255) 123(254, 101) 2(432, 197) 174(330, 241) 61(84, 275) 192(300, 163) 279(288, 441) 197(380, 105) 53(266, 97) 152(318, 391) 84(426, 7) 208(416, 23) 255(482, 131) 57(480, 455) 14(348, 405) 154(132, 147) 78(324, 235) 147(88, 213) 126(214, 373)  } , COG: ( 266.2, 286.75), avg_dist: 184.064, std_deviation: 75.0914
,  numNodesWithinArea: 23
level: 2, index = 1 { 72(330, 161) 40(106, 399) 238(232, 473) 65(172, 13) 222(208, 373) 265(80, 189) 51(86, 33) 142(444, 451) 16(306, 81) 136(30, 331) 9(266, 159) 163(260, 113) 133(454, 289) 274(230, 393) 128(438, 337) 36(36, 15) 258(438, 453) 289(76, 53) 188(222, 27) 297(390, 137) 101(60, 161) 88(30, 123) 172(118, 79) 198(222, 265) 148(32, 427) 52(442, 1) 13(264, 493) 157(296, 159) 260(406, 47) 242(400, 253) 71(298, 307) 200(218, 25) 39(96, 147) 272(48, 411) 25(188, 201) 166(306, 217) 42(208, 457) 0(448, 217) 180(406, 315) 220(304, 383) 80(316, 253) 19(456, 21) 90(318, 305) 21(394, 447) 233(154, 419) 73(268, 91) 210(436, 491) 268(10, 221) 94(4, 73) 211(250, 323) 209(292, 79) 246(232, 299) 252(226, 347) 109(360, 131) 216(318, 299) 149(182, 9) 262(306, 145) 1(388, 315) 229(192, 411) 67(56, 409) 156(208, 145) 144(36, 411) 236(424, 241) 140(400, 341) 169(356, 45) 143(356, 287) 96(336, 269) 28(446, 249) 176(22, 423) 186(242, 153) 253(176, 125)  } , COG: ( 250.056, 238.662), avg_dist: 185.436, std_deviation: 73.4545
,  numNodesWithinArea: 21
level: 2, index = 2 { 91(354, 471) 134(340, 11) 217(260, 369) 182(206, 295) 251(482, 211) 171(394, 179) 50(432, 181) 199(96, 213) 99(254, 441) 43(356, 497) 60(446, 431) 155(58, 321) 92(32, 415) 63(474, 419) 58(110, 233) 141(294, 389) 29(292, 255) 239(262, 39) 59(252, 7) 115(290, 19) 158(332, 113) 256(404, 411) 170(114, 107) 249(254, 169) 284(238, 223) 98(210, 477) 261(198, 23) 187(292, 33) 125(376, 449) 111(474, 417) 47(160, 493) 74(330, 103) 30(238, 451) 69(492, 95) 64(318, 61) 270(6, 481) 271(98, 117) 207(286, 241) 226(244, 477) 162(136, 49) 79(376, 461) 114(6, 183) 294(420, 175) 206(444, 163) 291(490, 201) 164(438, 47) 138(120, 249) 212(410, 139) 55(284, 39) 202(34, 57) 234(32, 157) 107(366, 453) 129(98, 91) 237(86, 393) 5(362, 201) 193(470, 51) 283(468, 409) 290(144, 241) 48(106, 289) 160(304, 99) 108(6, 125) 159(58, 345) 56(314, 489) 293(54, 481) 218(12, 73) 77(472, 161) 33(80, 181) 288(314, 185) 86(312, 45) 38(324, 39) 85(372, 37) 131(176, 65) 104(108, 465) 121(58, 179) 122(248, 159) 250(304, 143) 267(496, 409) 244(428, 231) 103(188, 195) 227(366, 195)  } , COG: ( 262.9, 233.575), avg_dist: 201.756, std_deviation: 70.5877
,  numNodesWithinArea: 15
level: 2, index = 3 { 89(292, 159) 232(42, 113) 150(420, 387) 105(98, 265) 44(120, 485) 194(342, 5) 116(20, 333) 223(390, 81) 70(18, 175) 173(258, 487) 269(50, 83) 286(318, 17) 257(392, 449) 46(230, 491) 66(26, 159) 137(174, 313) 248(412, 327) 221(62, 191) 117(180, 429) 32(316, 253) 87(396, 495) 240(14, 413) 165(188, 331) 181(290, 279) 97(456, 161) 189(184, 141) 106(328, 333) 204(440, 141) 183(62, 111) 259(80, 217) 243(482, 107) 124(218, 335) 23(494, 343) 127(458, 329) 75(278, 143) 273(52, 167) 276(30, 139) 219(56, 413) 281(78, 471) 18(300, 315) 184(130, 151) 175(260, 205) 179(484, 7) 95(170, 461) 161(180, 1) 130(108, 103) 190(0, 355) 4(108, 185) 153(182, 101) 280(24, 21) 254(404, 285) 299(468, 47) 145(92, 99) 275(150, 79) 135(490, 21) 62(114, 437) 185(296, 85) 34(402, 69) 231(476, 323) 264(34, 117) 41(178, 425) 295(156, 83) 118(148, 21) 139(266, 235) 241(66, 185) 296(116, 185) 83(296, 135) 178(124, 211) 285(54, 283)  } , COG: ( 217.681, 224.652), avg_dist: 197.077, std_deviation: 72.2622
,  numNodesWithinArea: 19
level: 3, index = 0 { 24(402, 429) 8(416, 45) 146(432, 91) 76(226, 123) 201(94, 479) 12(38, 443) 54(220, 377) 15(494, 123) 68(110, 263) 247(76, 49) 31(182, 389) 277(498, 491) 113(494, 187) 168(318, 395) 228(316, 279) 6(330, 445) 45(266, 397) 151(162, 495) 102(328, 445) 37(276, 75) 282(212, 465) 17(268, 459) 49(494, 385) 11(98, 19) 132(320, 381) 205(260, 455) 225(52, 395) 26(208, 65) 287(356, 155) 196(12, 327) 82(408, 363) 245(470, 273) 224(312, 165) 81(452, 475) 7(86, 129) 298(136, 419) 235(456, 141) 203(86, 303) 110(226, 181) 213(194, 431)  } , COG: ( 269.6, 300.15), avg_dist: 198.574, std_deviation: 67.5861
,  numNodesWithinArea: 4
level: 3, index = 1 { 167(252, 423) 215(176, 281) 3(286, 321) 22(442, 475) 10(106, 337) 112(236, 321) 119(394, 255) 100(104, 191) 292(108, 187) 35(480, 15) 230(42, 455) 191(64, 321) 278(340, 327) 195(64, 345) 93(84, 455) 263(262, 321) 27(174, 455) 20(322, 283) 214(304, 313) 120(330, 481) 177(150, 117) 266(230, 255) 123(254, 101) 2(432, 197) 174(330, 241) 61(84, 275) 192(300, 163) 279(288, 441) 197(380, 105) 53(266, 97) 152(318, 391) 84(426, 7) 208(416, 23) 255(482, 131) 57(480, 455) 14(348, 405) 154(132, 147) 78(324, 235) 147(88, 213) 126(214, 373)  } , COG: ( 262.8, 273.35), avg_dist: 168.56, std_deviation: 79.0085
,  numNodesWithinArea: 10
level: 3, index = 2 { 72(330, 161) 40(106, 399) 238(232, 473) 65(172, 13) 222(208, 373) 265(80, 189) 51(86, 33) 142(444, 451) 16(306, 81) 136(30, 331) 9(266, 159) 163(260, 113) 133(454, 289) 274(230, 393) 128(438, 337) 36(36, 15) 258(438, 453) 289(76, 53) 188(222, 27) 297(390, 137) 101(60, 161) 88(30, 123) 172(118, 79) 198(222, 265) 148(32, 427) 52(442, 1) 13(264, 493) 157(296, 159) 260(406, 47) 242(400, 253) 71(298, 307) 200(218, 25) 39(96, 147) 272(48, 411) 25(188, 201) 166(306, 217) 42(208, 457) 0(448, 217) 180(406, 315) 220(304, 383)  } , COG: ( 239.85, 229.2), avg_dist: 193.611, std_deviation: 69.8584
,  numNodesWithinArea: 6
level: 3, index = 3 { 80(316, 253) 19(456, 21) 90(318, 305) 21(394, 447) 233(154, 419) 73(268, 91) 210(436, 491) 268(10, 221) 94(4, 73) 211(250, 323) 209(292, 79) 246(232, 299) 252(226, 347) 109(360, 131) 216(318, 299) 149(182, 9) 262(306, 145) 1(388, 315) 229(192, 411) 67(56, 409) 156(208, 145) 144(36, 411) 236(424, 241) 140(400, 341) 169(356, 45) 143(356, 287) 96(336, 269) 28(446, 249) 176(22, 423) 186(242, 153) 253(176, 125)  } , COG: ( 263.226, 250.871), avg_dist: 171.832, std_deviation: 79.6884
,  numNodesWithinArea: 7
level: 3, index = 4 { 91(354, 471) 134(340, 11) 217(260, 369) 182(206, 295) 251(482, 211) 171(394, 179) 50(432, 181) 199(96, 213) 99(254, 441) 43(356, 497) 60(446, 431) 155(58, 321) 92(32, 415) 63(474, 419) 58(110, 233) 141(294, 389) 29(292, 255) 239(262, 39) 59(252, 7) 115(290, 19) 158(332, 113) 256(404, 411) 170(114, 107) 249(254, 169) 284(238, 223) 98(210, 477) 261(198, 23) 187(292, 33) 125(376, 449) 111(474, 417) 47(160, 493) 74(330, 103) 30(238, 451) 69(492, 95) 64(318, 61) 270(6, 481) 271(98, 117) 207(286, 241) 226(244, 477) 162(136, 49)  } , COG: ( 272.1, 259.65), avg_dist: 198.129, std_deviation: 70.8153
,  numNodesWithinArea: 5
level: 3, index = 5 { 79(376, 461) 114(6, 183) 294(420, 175) 206(444, 163) 291(490, 201) 164(438, 47) 138(120, 249) 212(410, 139) 55(284, 39) 202(34, 57) 234(32, 157) 107(366, 453) 129(98, 91) 237(86, 393) 5(362, 201) 193(470, 51) 283(468, 409) 290(144, 241) 48(106, 289) 160(304, 99) 108(6, 125) 159(58, 345) 56(314, 489) 293(54, 481) 218(12, 73) 77(472, 161) 33(80, 181) 288(314, 185) 86(312, 45) 38(324, 39) 85(372, 37) 131(176, 65) 104(108, 465) 121(58, 179) 122(248, 159) 250(304, 143) 267(496, 409) 244(428, 231) 103(188, 195) 227(366, 195)  } , COG: ( 253.7, 207.5), avg_dist: 200.638, std_deviation: 72.9487
,  numNodesWithinArea: 4
level: 3, index = 6 { 89(292, 159) 232(42, 113) 150(420, 387) 105(98, 265) 44(120, 485) 194(342, 5) 116(20, 333) 223(390, 81) 70(18, 175) 173(258, 487) 269(50, 83) 286(318, 17) 257(392, 449) 46(230, 491) 66(26, 159) 137(174, 313) 248(412, 327) 221(62, 191) 117(180, 429) 32(316, 253) 87(396, 495) 240(14, 413) 165(188, 331) 181(290, 279) 97(456, 161) 189(184, 141) 106(328, 333) 204(440, 141) 183(62, 111) 259(80, 217) 243(482, 107) 124(218, 335) 23(494, 343) 127(458, 329) 75(278, 143) 273(52, 167) 276(30, 139) 219(56, 413) 281(78, 471) 18(300, 315)  } , COG: ( 226.1, 264.65), avg_dist: 198.33, std_deviation: 68.0669
,  numNodesWithinArea: 6
level: 3, index = 7 { 184(130, 151) 175(260, 205) 179(484, 7) 95(170, 461) 161(180, 1) 130(108, 103) 190(0, 355) 4(108, 185) 153(182, 101) 280(24, 21) 254(404, 285) 299(468, 47) 145(92, 99) 275(150, 79) 135(490, 21) 62(114, 437) 185(296, 85) 34(402, 69) 231(476, 323) 264(34, 117) 41(178, 425) 295(156, 83) 118(148, 21) 139(266, 235) 241(66, 185) 296(116, 185) 83(296, 135) 178(124, 211) 285(54, 283)  } , COG: ( 206.069, 169.483), avg_dist: 177.358, std_deviation: 85.1551
,  numNodesWithinArea: 8
level: 4, index = 0 { 24(402, 429) 8(416, 45) 146(432, 91) 76(226, 123) 201(94, 479) 12(38, 443) 54(220, 377) 15(494, 123) 68(110, 263) 247(76, 49) 31(182, 389) 277(498, 491) 113(494, 187) 168(318, 395) 228(316, 279) 6(330, 445) 45(266, 397) 151(162, 495) 102(328, 445) 37(276, 75)  } , COG: ( 283.9, 301), avg_dist: 199.176, std_deviation: 77.7403
,  numNodesWithinArea: 1
level: 4, index = 1 { 282(212, 465) 17(268, 459) 49(494, 385) 11(98, 19) 132(320, 381) 205(260, 455) 225(52, 395) 26(208, 65) 287(356, 155) 196(12, 327) 82(408, 363) 245(470, 273) 224(312, 165) 81(452, 475) 7(86, 129) 298(136, 419) 235(456, 141) 203(86, 303) 110(226, 181) 213(194, 431)  } , COG: ( 255.3, 299.3), avg_dist: 197.178, std_deviation: 54.7221
,  numNodesWithinArea: 0
level: 4, index = 2 { 167(252, 423) 215(176, 281) 3(286, 321) 22(442, 475) 10(106, 337) 112(236, 321) 119(394, 255) 100(104, 191) 292(108, 187) 35(480, 15) 230(42, 455) 191(64, 321) 278(340, 327) 195(64, 345) 93(84, 455) 263(262, 321) 27(174, 455) 20(322, 283) 214(304, 313) 120(330, 481)  } , COG: ( 228.5, 328.1), avg_dist: 148.395, std_deviation: 86.0102
,  numNodesWithinArea: 4
level: 4, index = 3 { 177(150, 117) 266(230, 255) 123(254, 101) 2(432, 197) 174(330, 241) 61(84, 275) 192(300, 163) 279(288, 441) 197(380, 105) 53(266, 97) 152(318, 391) 84(426, 7) 208(416, 23) 255(482, 131) 57(480, 455) 14(348, 405) 154(132, 147) 78(324, 235) 147(88, 213) 126(214, 373)  } , COG: ( 297.1, 218.6), avg_dist: 163.233, std_deviation: 69.9813
,  numNodesWithinArea: 3
level: 4, index = 4 { 72(330, 161) 40(106, 399) 238(232, 473) 65(172, 13) 222(208, 373) 265(80, 189) 51(86, 33) 142(444, 451) 16(306, 81) 136(30, 331) 9(266, 159) 163(260, 113) 133(454, 289) 274(230, 393) 128(438, 337) 36(36, 15) 258(438, 453) 289(76, 53) 188(222, 27) 297(390, 137)  } , COG: ( 240.2, 224), avg_dist: 203.377, std_deviation: 62.8167
,  numNodesWithinArea: 1
level: 4, index = 5 { 101(60, 161) 88(30, 123) 172(118, 79) 198(222, 265) 148(32, 427) 52(442, 1) 13(264, 493) 157(296, 159) 260(406, 47) 242(400, 253) 71(298, 307) 200(218, 25) 39(96, 147) 272(48, 411) 25(188, 201) 166(306, 217) 42(208, 457) 0(448, 217) 180(406, 315) 220(304, 383)  } , COG: ( 239.5, 234.4), avg_dist: 183.273, std_deviation: 76.0201
,  numNodesWithinArea: 3
level: 4, index = 6 { 80(316, 253) 19(456, 21) 90(318, 305) 21(394, 447) 233(154, 419) 73(268, 91) 210(436, 491) 268(10, 221) 94(4, 73) 211(250, 323) 209(292, 79) 246(232, 299) 252(226, 347) 109(360, 131) 216(318, 299) 149(182, 9) 262(306, 145) 1(388, 315) 229(192, 411) 67(56, 409)  } , COG: ( 257.9, 254.4), avg_dist: 173.584, std_deviation: 84.6117
,  numNodesWithinArea: 3
level: 4, index = 7 { 156(208, 145) 144(36, 411) 236(424, 241) 140(400, 341) 169(356, 45) 143(356, 287) 96(336, 269) 28(446, 249) 176(22, 423) 186(242, 153) 253(176, 125)  } , COG: ( 272.909, 244.455), avg_dist: 166.151, std_deviation: 74.0953
,  numNodesWithinArea: 1
level: 4, index = 8 { 91(354, 471) 134(340, 11) 217(260, 369) 182(206, 295) 251(482, 211) 171(394, 179) 50(432, 181) 199(96, 213) 99(254, 441) 43(356, 497) 60(446, 431) 155(58, 321) 92(32, 415) 63(474, 419) 58(110, 233) 141(294, 389) 29(292, 255) 239(262, 39) 59(252, 7) 115(290, 19)  } , COG: ( 284.2, 269.8), avg_dist: 192.328, std_deviation: 68.2194
,  numNodesWithinArea: 1
level: 4, index = 9 { 158(332, 113) 256(404, 411) 170(114, 107) 249(254, 169) 284(238, 223) 98(210, 477) 261(198, 23) 187(292, 33) 125(376, 449) 111(474, 417) 47(160, 493) 74(330, 103) 30(238, 451) 69(492, 95) 64(318, 61) 270(6, 481) 271(98, 117) 207(286, 241) 226(244, 477) 162(136, 49)  } , COG: ( 260, 249.5), avg_dist: 201.37, std_deviation: 76.4679
,  numNodesWithinArea: 2
level: 4, index = 10 { 79(376, 461) 114(6, 183) 294(420, 175) 206(444, 163) 291(490, 201) 164(438, 47) 138(120, 249) 212(410, 139) 55(284, 39) 202(34, 57) 234(32, 157) 107(366, 453) 129(98, 91) 237(86, 393) 5(362, 201) 193(470, 51) 283(468, 409) 290(144, 241) 48(106, 289) 160(304, 99)  } , COG: ( 272.9, 204.9), avg_dist: 205.572, std_deviation: 59.3113
,  numNodesWithinArea: 0
level: 4, index = 11 { 108(6, 125) 159(58, 345) 56(314, 489) 293(54, 481) 218(12, 73) 77(472, 161) 33(80, 181) 288(314, 185) 86(312, 45) 38(324, 39) 85(372, 37) 131(176, 65) 104(108, 465) 121(58, 179) 122(248, 159) 250(304, 143) 267(496, 409) 244(428, 231) 103(188, 195) 227(366, 195)  } , COG: ( 234.5, 210.1), avg_dist: 194.832, std_deviation: 81.6477
,  numNodesWithinArea: 2
level: 4, index = 12 { 89(292, 159) 232(42, 113) 150(420, 387) 105(98, 265) 44(120, 485) 194(342, 5) 116(20, 333) 223(390, 81) 70(18, 175) 173(258, 487) 269(50, 83) 286(318, 17) 257(392, 449) 46(230, 491) 66(26, 159) 137(174, 313) 248(412, 327) 221(62, 191) 117(180, 429) 32(316, 253)  } , COG: ( 208, 260.1), avg_dist: 203.207, std_deviation: 59.0303
,  numNodesWithinArea: 1
level: 4, index = 13 { 87(396, 495) 240(14, 413) 165(188, 331) 181(290, 279) 97(456, 161) 189(184, 141) 106(328, 333) 204(440, 141) 183(62, 111) 259(80, 217) 243(482, 107) 124(218, 335) 23(494, 343) 127(458, 329) 75(278, 143) 273(52, 167) 276(30, 139) 219(56, 413) 281(78, 471) 18(300, 315)  } , COG: ( 244.2, 269.2), avg_dist: 190.846, std_deviation: 77.7111
,  numNodesWithinArea: 1
level: 4, index = 14 { 184(130, 151) 175(260, 205) 179(484, 7) 95(170, 461) 161(180, 1) 130(108, 103) 190(0, 355) 4(108, 185) 153(182, 101) 280(24, 21) 254(404, 285) 299(468, 47) 145(92, 99) 275(150, 79) 135(490, 21) 62(114, 437) 185(296, 85) 34(402, 69) 231(476, 323) 264(34, 117)  } , COG: ( 228.6, 157.6), avg_dist: 196.498, std_deviation: 85.4339
,  numNodesWithinArea: 1
level: 4, index = 15 { 41(178, 425) 295(156, 83) 118(148, 21) 139(266, 235) 241(66, 185) 296(116, 185) 83(296, 135) 178(124, 211) 285(54, 283)  } , COG: ( 156, 195.889), avg_dist: 121.02, std_deviation: 58.3832
,  numNodesWithinArea: 2
level: 5, index = 0 { 24(402, 429) 8(416, 45) 146(432, 91) 76(226, 123) 201(94, 479)  } , COG: ( 314, 233.4), avg_dist: 216.914, std_deviation: 62.4461
,  numNodesWithinArea: 0
level: 5, index = 1 { 12(38, 443) 54(220, 377) 15(494, 123) 68(110, 263) 247(76, 49)  } , COG: ( 187.6, 251), avg_dist: 202.972, std_deviation: 89.2973
,  numNodesWithinArea: 0
level: 5, index = 2 { 31(182, 389) 277(498, 491) 113(494, 187) 168(318, 395) 228(316, 279)  } , COG: ( 361.6, 348.2), avg_dist: 147.418, std_deviation: 61.2068
,  numNodesWithinArea: 0
level: 5, index = 3 { 6(330, 445) 45(266, 397) 151(162, 495) 102(328, 445) 37(276, 75)  } , COG: ( 272.4, 371.4), avg_dist: 134.847, std_deviation: 92.0343
,  numNodesWithinArea: 1
level: 5, index = 4 { 282(212, 465) 17(268, 459) 49(494, 385) 11(98, 19) 132(320, 381)  } , COG: ( 278.4, 341.8), avg_dist: 180.89, std_deviation: 107.876
,  numNodesWithinArea: 0
level: 5, index = 5 { 205(260, 455) 225(52, 395) 26(208, 65) 287(356, 155) 196(12, 327)  } , COG: ( 177.6, 279.4), avg_dist: 194.202, std_deviation: 20.3635
,  numNodesWithinArea: 0
level: 5, index = 6 { 82(408, 363) 245(470, 273) 224(312, 165) 81(452, 475) 7(86, 129)  } , COG: ( 345.6, 281), avg_dist: 174.111, std_deviation: 75.6594
,  numNodesWithinArea: 0
level: 5, index = 7 { 298(136, 419) 235(456, 141) 203(86, 303) 110(226, 181) 213(194, 431)  } , COG: ( 219.6, 295), avg_dist: 163.619, std_deviation: 60.3523
,  numNodesWithinArea: 0
level: 5, index = 8 { 167(252, 423) 215(176, 281) 3(286, 321) 22(442, 475) 10(106, 337)  } , COG: ( 252.4, 367.4), avg_dist: 119.15, std_deviation: 60.9501
,  numNodesWithinArea: 0
level: 5, index = 9 { 112(236, 321) 119(394, 255) 100(104, 191) 292(108, 187) 35(480, 15)  } , COG: ( 264.4, 193.8), avg_dist: 174.144, std_deviation: 54.0236
,  numNodesWithinArea: 0
level: 5, index = 10 { 230(42, 455) 191(64, 321) 278(340, 327) 195(64, 345) 93(84, 455)  } , COG: ( 118.8, 380.6), avg_dist: 112.596, std_deviation: 59.0238
,  numNodesWithinArea: 0
level: 5, index = 11 { 263(262, 321) 27(174, 455) 20(322, 283) 214(304, 313) 120(330, 481)  } , COG: ( 278.4, 370.6), avg_dist: 93.8473, std_deviation: 31.9807
,  numNodesWithinArea: 0
level: 5, index = 12 { 177(150, 117) 266(230, 255) 123(254, 101) 2(432, 197) 174(330, 241)  } , COG: ( 279.2, 182.2), avg_dist: 109.765, std_deviation: 32.4209
,  numNodesWithinArea: 0
level: 5, index = 13 { 61(84, 275) 192(300, 163) 279(288, 441) 197(380, 105) 53(266, 97)  } , COG: ( 263.6, 216.2), avg_dist: 151.953, std_deviation: 55.9988
,  numNodesWithinArea: 0
level: 5, index = 14 { 152(318, 391) 84(426, 7) 208(416, 23) 255(482, 131) 57(480, 455)  } , COG: ( 424.4, 201.4), avg_dist: 188.201, std_deviation: 55.7511
,  numNodesWithinArea: 0
level: 5, index = 15 { 14(348, 405) 154(132, 147) 78(324, 235) 147(88, 213) 126(214, 373)  } , COG: ( 221.2, 274.6), avg_dist: 138.631, std_deviation: 30.4489
,  numNodesWithinArea: 0
level: 5, index = 16 { 72(330, 161) 40(106, 399) 238(232, 473) 65(172, 13) 222(208, 373)  } , COG: ( 209.6, 283.8), avg_dist: 176.009, std_deviation: 59.4794
,  numNodesWithinArea: 0
level: 5, index = 17 { 265(80, 189) 51(86, 33) 142(444, 451) 16(306, 81) 136(30, 331)  } , COG: ( 189.2, 217), avg_dist: 208.945, std_deviation: 76.2672
,  numNodesWithinArea: 0
level: 5, index = 18 { 9(266, 159) 163(260, 113) 133(454, 289) 274(230, 393) 128(438, 337)  } , COG: ( 329.6, 258.2), avg_dist: 141.726, std_deviation: 19.2676
,  numNodesWithinArea: 0
level: 5, index = 19 { 36(36, 15) 258(438, 453) 289(76, 53) 188(222, 27) 297(390, 137)  } , COG: ( 232.4, 137), avg_dist: 210.765, std_deviation: 91.6922
,  numNodesWithinArea: 0
level: 5, index = 20 { 101(60, 161) 88(30, 123) 172(118, 79) 198(222, 265) 148(32, 427)  } , COG: ( 92.4, 211), avg_dist: 133.321, std_deviation: 53.6863
,  numNodesWithinArea: 0
level: 5, index = 21 { 52(442, 1) 13(264, 493) 157(296, 159) 260(406, 47) 242(400, 253)  } , COG: ( 361.6, 190.6), avg_dist: 164.019, std_deviation: 91.7996
,  numNodesWithinArea: 0
level: 5, index = 22 { 71(298, 307) 200(218, 25) 39(96, 147) 272(48, 411) 25(188, 201)  } , COG: ( 169.6, 218.2), avg_dist: 142.164, std_deviation: 72.2039
,  numNodesWithinArea: 1
level: 5, index = 23 { 166(306, 217) 42(208, 457) 0(448, 217) 180(406, 315) 220(304, 383)  } , COG: ( 334.4, 317.8), avg_dist: 117.643, std_deviation: 45.8173
,  numNodesWithinArea: 0
level: 5, index = 24 { 80(316, 253) 19(456, 21) 90(318, 305) 21(394, 447) 233(154, 419)  } , COG: ( 327.6, 289), avg_dist: 148.384, std_deviation: 106.217
,  numNodesWithinArea: 1
level: 5, index = 25 { 73(268, 91) 210(436, 491) 268(10, 221) 94(4, 73) 211(250, 323)  } , COG: ( 193.6, 239.8), avg_dist: 210.61, std_deviation: 84.4859
,  numNodesWithinArea: 0
level: 5, index = 26 { 209(292, 79) 246(232, 299) 252(226, 347) 109(360, 131) 216(318, 299)  } , COG: ( 285.6, 231), avg_dist: 113.82, std_deviation: 28.5803
,  numNodesWithinArea: 0
level: 5, index = 27 { 149(182, 9) 262(306, 145) 1(388, 315) 229(192, 411) 67(56, 409)  } , COG: ( 224.8, 257.8), avg_dist: 189.533, std_deviation: 42.9991
,  numNodesWithinArea: 0
level: 5, index = 28 { 156(208, 145) 144(36, 411) 236(424, 241) 140(400, 341) 169(356, 45)  } , COG: ( 284.8, 236.6), avg_dist: 184.502, std_deviation: 65.949
,  numNodesWithinArea: 0
level: 5, index = 29 { 143(356, 287) 96(336, 269) 28(446, 249) 176(22, 423) 186(242, 153)  } , COG: ( 280.4, 276.2), avg_dist: 145.297, std_deviation: 85.5056
,  numNodesWithinArea: 0
level: 5, index = 30 { 253(176, 125)  } , COG: ( 176, 125), avg_dist: 0, std_deviation: 0
,  numNodesWithinArea: 1
level: 5, index = 31 {  } 
level: 5, index = 32 { 91(354, 471) 134(340, 11) 217(260, 369) 182(206, 295) 251(482, 211)  } , COG: ( 328.4, 271.4), avg_dist: 174.156, std_deviation: 52.4813
,  numNodesWithinArea: 0
level: 5, index = 33 { 171(394, 179) 50(432, 181) 199(96, 213) 99(254, 441) 43(356, 497)  } , COG: ( 306.4, 302.2), avg_dist: 180.723, std_deviation: 30.5154
,  numNodesWithinArea: 0
level: 5, index = 34 { 60(446, 431) 155(58, 321) 92(32, 415) 63(474, 419) 58(110, 233)  } , COG: ( 224, 363.8), avg_dist: 206.323, std_deviation: 33.103
,  numNodesWithinArea: 0
level: 5, index = 35 { 141(294, 389) 29(292, 255) 239(262, 39) 59(252, 7) 115(290, 19)  } , COG: ( 278, 141.8), avg_dist: 145.297, std_deviation: 52.3683
,  numNodesWithinArea: 0
level: 5, index = 36 { 158(332, 113) 256(404, 411) 170(114, 107) 249(254, 169) 284(238, 223)  } , COG: ( 268.4, 204.6), avg_dist: 123.014, std_deviation: 82.297
,  numNodesWithinArea: 0
level: 5, index = 37 { 98(210, 477) 261(198, 23) 187(292, 33) 125(376, 449) 111(474, 417)  } , COG: ( 310, 279.8), avg_dist: 228.832, std_deviation: 33.1535
,  numNodesWithinArea: 0
level: 5, index = 38 { 47(160, 493) 74(330, 103) 30(238, 451) 69(492, 95) 64(318, 61)  } , COG: ( 307.6, 240.6), avg_dist: 213.653, std_deviation: 51.7059
,  numNodesWithinArea: 0
level: 5, index = 39 { 270(6, 481) 271(98, 117) 207(286, 241) 226(244, 477) 162(136, 49)  } , COG: ( 154, 273), avg_dist: 200.909, std_deviation: 43.5489
,  numNodesWithinArea: 0
level: 5, index = 40 { 79(376, 461) 114(6, 183) 294(420, 175) 206(444, 163) 291(490, 201)  } , COG: ( 347.2, 236.6), avg_dist: 187.153, std_deviation: 90.4274
,  numNodesWithinArea: 0
level: 5, index = 41 { 164(438, 47) 138(120, 249) 212(410, 139) 55(284, 39) 202(34, 57)  } , COG: ( 257.2, 106.2), avg_dist: 169.092, std_deviation: 53.5627
,  numNodesWithinArea: 0
level: 5, index = 42 { 234(32, 157) 107(366, 453) 129(98, 91) 237(86, 393) 5(362, 201)  } , COG: ( 188.8, 259), avg_dist: 198.463, std_deviation: 32.9945
,  numNodesWithinArea: 0
level: 5, index = 43 { 193(470, 51) 283(468, 409) 290(144, 241) 48(106, 289) 160(304, 99)  } , COG: ( 298.4, 217.8), avg_dist: 195.021, std_deviation: 51.0556
,  numNodesWithinArea: 0
level: 5, index = 44 { 108(6, 125) 159(58, 345) 56(314, 489) 293(54, 481) 218(12, 73)  } , COG: ( 88.8, 302.6), avg_dist: 192.912, std_deviation: 80.2251
,  numNodesWithinArea: 0
level: 5, index = 45 { 77(472, 161) 33(80, 181) 288(314, 185) 86(312, 45) 38(324, 39)  } , COG: ( 300.4, 122.2), avg_dist: 126.569, std_deviation: 64.1707
,  numNodesWithinArea: 0
level: 5, index = 46 { 85(372, 37) 131(176, 65) 104(108, 465) 121(58, 179) 122(248, 159)  } , COG: ( 192.4, 181), avg_dist: 167.568, std_deviation: 84.5511
,  numNodesWithinArea: 0
level: 5, index = 47 { 250(304, 143) 267(496, 409) 244(428, 231) 103(188, 195) 227(366, 195)  } , COG: ( 356.4, 234.6), avg_dist: 122.87, std_deviation: 66.7549
,  numNodesWithinArea: 0
level: 5, index = 48 { 89(292, 159) 232(42, 113) 150(420, 387) 105(98, 265) 44(120, 485)  } , COG: ( 194.4, 281.8), avg_dist: 189.49, std_deviation: 55.0572
,  numNodesWithinArea: 0
level: 5, index = 49 { 194(342, 5) 116(20, 333) 223(390, 81) 70(18, 175) 173(258, 487)  } , COG: ( 205.6, 216.2), avg_dist: 233.452, std_deviation: 28.4743
,  numNodesWithinArea: 0
level: 5, index = 50 { 269(50, 83) 286(318, 17) 257(392, 449) 46(230, 491) 66(26, 159)  } , COG: ( 203.2, 239.8), avg_dist: 239.806, std_deviation: 29.9956
,  numNodesWithinArea: 0
level: 5, index = 51 { 137(174, 313) 248(412, 327) 221(62, 191) 117(180, 429) 32(316, 253)  } , COG: ( 228.8, 302.6), avg_dist: 135.42, std_deviation: 53.4328
,  numNodesWithinArea: 0
level: 5, index = 52 { 87(396, 495) 240(14, 413) 165(188, 331) 181(290, 279) 97(456, 161)  } , COG: ( 268.8, 335.8), avg_dist: 173.541, std_deviation: 86.7763
,  numNodesWithinArea: 0
level: 5, index = 53 { 189(184, 141) 106(328, 333) 204(440, 141) 183(62, 111) 259(80, 217)  } , COG: ( 218.8, 188.6), avg_dist: 156.579, std_deviation: 55.7541
,  numNodesWithinArea: 0
level: 5, index = 54 { 243(482, 107) 124(218, 335) 23(494, 343) 127(458, 329) 75(278, 143)  } , COG: ( 386, 251.4), avg_dist: 152.308, std_deviation: 28.1657
,  numNodesWithinArea: 0
level: 5, index = 55 { 273(52, 167) 276(30, 139) 219(56, 413) 281(78, 471) 18(300, 315)  } , COG: ( 103.2, 301), avg_dist: 162.383, std_deviation: 26.7292
,  numNodesWithinArea: 0
level: 5, index = 56 { 184(130, 151) 175(260, 205) 179(484, 7) 95(170, 461) 161(180, 1)  } , COG: ( 244.8, 165), avg_dist: 185.351, std_deviation: 99.9176
,  numNodesWithinArea: 0
level: 5, index = 57 { 130(108, 103) 190(0, 355) 4(108, 185) 153(182, 101) 280(24, 21)  } , COG: ( 84.4, 153), avg_dist: 113.945, std_deviation: 64.73
,  numNodesWithinArea: 0
level: 5, index = 58 { 254(404, 285) 299(468, 47) 145(92, 99) 275(150, 79) 135(490, 21)  } , COG: ( 320.8, 106.2), avg_dist: 189.435, std_deviation: 23.8238
,  numNodesWithinArea: 0
level: 5, index = 59 { 62(114, 437) 185(296, 85) 34(402, 69) 231(476, 323) 264(34, 117)  } , COG: ( 264.4, 206.2), avg_dist: 216.761, std_deviation: 52.6606
,  numNodesWithinArea: 0
level: 5, index = 60 { 41(178, 425) 295(156, 83) 118(148, 21) 139(266, 235) 241(66, 185)  } , COG: ( 162.8, 189.8), avg_dist: 144.348, std_deviation: 52.1929
,  numNodesWithinArea: 0
level: 5, index = 61 { 296(116, 185) 83(296, 135) 178(124, 211) 285(54, 283)  } , COG: ( 147.5, 203.5), avg_dist: 86.8664, std_deviation: 58.2386
,  numNodesWithinArea: 1
level: 5, index = 62 {  } 
level: 5, index = 63 {  } 
