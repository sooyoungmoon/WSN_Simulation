level: 1, index = 0 { 125(356, 155) 21(324, 39) 60(492, 95) 24(356, 45) 256(446, 431) 111(130, 151) 267(84, 455) 63(34, 117) 283(268, 459) 230(494, 385) 270(120, 485) 201(340, 327) 281(238, 451) 93(456, 141) 293(438, 453) 104(60, 161) 44(156, 83) 47(208, 65) 27(442, 1) 151(448, 217) 95(482, 131) 42(50, 83) 46(176, 65) 226(318, 395) 98(32, 157) 238(56, 413) 282(264, 493) 30(416, 23) 13(284, 39) 17(252, 7) 205(438, 337) 173(336, 269) 56(390, 81) 120(314, 185) 107(116, 185) 79(296, 135) 87(390, 137) 43(118, 79) 91(440, 141) 258(404, 411) 210(494, 343) 22(342, 5) 142(188, 201) 277(244, 477) 57(402, 69) 81(260, 113) 280(212, 465) 36(12, 73) 11(222, 27) 51(296, 85) 247(254, 441) 118(254, 169) 162(176, 281) 261(474, 419) 161(110, 263) 65(42, 113) 149(330, 241) 188(86, 303) 200(318, 305) 55(306, 81) 115(242, 153) 239(56, 409) 187(58, 321) 59(470, 51) 286(314, 489) 134(10, 221) 86(330, 103) 38(34, 57) 194(236, 321) 85(304, 143) 169(322, 283) 164(222, 265) 8(180, 1) 52(268, 91) 260(496, 409) 84(332, 113) 208(400, 341) 299(452, 475) 179(470, 273) 35(456, 21) 135(80, 217) 19(340, 11) 218(214, 373) 94(482, 107) 202(300, 315) 289(376, 461) 145(286, 241) 129(432, 197) 269(108, 465) 172(316, 253) 295(442, 475) 275(208, 457) 131(472, 161) 26(416, 45) 37(4, 73) 53(304, 99) 209(458, 329) 185(64, 345) 73(150, 117) 160(106, 289) 64(6, 125) 16(292, 33) 223(294, 389) 34(490, 21) 146(260, 205) 193(226, 347) 69(96, 147) 276(230, 491) 88(360, 131) 264(6, 481) 108(108, 187) 232(36, 411) 271(160, 493) 7(198, 23) 183(12, 327) 39(76, 53) 130(444, 163) 154(428, 231) 170(318, 299) 177(404, 285) 153(446, 249) 189(106, 337) 253(392, 449) 76(176, 125) 156(482, 211) 83(306, 145) 123(330, 161) 163(232, 299) 75(184, 141) 262(468, 409) 158(84, 275) 250(330, 445) 74(182, 101) 297(498, 491) 109(108, 185) 197(298, 307) 212(0, 355) 204(388, 315) 15(262, 39) 235(32, 427)  } , COG: ( 267.443, 234.529), avg_dist: 197.618, std_deviation: 72.9267
,  numNodesWithinArea: 68
level: 1, index = 1 { 33(480, 15) 221(260, 369) 101(52, 167) 241(114, 437) 265(94, 479) 296(444, 451) 292(354, 471) 4(76, 49) 100(58, 179) 184(64, 321) 103(62, 191) 110(104, 191) 122(312, 165) 186(58, 345) 9(172, 13) 89(380, 105) 249(252, 423) 157(98, 265) 288(366, 453) 192(218, 335) 224(318, 391) 72(114, 107) 171(316, 279) 287(330, 481) 227(304, 383) 294(436, 491) 50(292, 79) 2(98, 19) 206(412, 327) 77(226, 123) 97(18, 175) 113(226, 181) 268(54, 481) 259(474, 417) 147(324, 235) 199(304, 313) 138(120, 249) 290(396, 495) 58(432, 91) 178(400, 253) 25(438, 47) 284(260, 455) 139(144, 241) 207(406, 315) 175(394, 255) 78(208, 145) 166(206, 295) 174(316, 253) 5(148, 21) 0(24, 21) 236(38, 443) 28(406, 47) 244(178, 425) 291(356, 497) 251(348, 405) 105(66, 185) 61(30, 139) 285(258, 487) 48(276, 75) 68(62, 111) 215(106, 399) 246(154, 419) 198(250, 323) 266(78, 471) 182(20, 333) 181(30, 331) 29(426, 7) 20(312, 45) 216(182, 389) 228(408, 363) 32(484, 7) 96(6, 183) 80(254, 101) 119(296, 159) 143(238, 223) 254(376, 449) 242(192, 411) 245(180, 429) 133(494, 187) 136(88, 213) 116(266, 159) 196(286, 321) 191(188, 331) 195(262, 321) 159(54, 283) 155(490, 201) 203(328, 333) 10(182, 9) 137(96, 213) 165(230, 255) 124(394, 179) 252(328, 445) 112(188, 195) 263(42, 455) 3(86, 33) 71(132, 147) 211(476, 323) 214(52, 395) 90(410, 139) 278(210, 477) 18(318, 17) 106(80, 189) 1(36, 15) 128(432, 181) 248(288, 441) 180(454, 289) 140(110, 233) 127(420, 175) 23(372, 37) 231(32, 415) 190(174, 313) 237(22, 423) 225(320, 381) 40(92, 99) 31(468, 47) 274(170, 461) 126(366, 195) 222(266, 397) 54(318, 61) 217(230, 393) 45(150, 79) 141(124, 211) 152(424, 241) 132(456, 161) 168(292, 255) 220(220, 377) 82(278, 143) 150(362, 201) 49(266, 97) 92(494, 123) 144(266, 235) 272(174, 455) 240(136, 419) 148(306, 217) 12(218, 25) 176(356, 287) 219(208, 373) 67(86, 129) 298(480, 455) 62(30, 123) 229(420, 387) 213(86, 393) 41(98, 91) 117(292, 159) 233(48, 411) 99(26, 159) 279(232, 473) 167(290, 279) 6(136, 49) 14(290, 19) 102(80, 181) 257(402, 429) 243(194, 431) 255(394, 447) 114(248, 159) 70(108, 103) 234(14, 413) 66(98, 117) 121(300, 163) 273(162, 495)  } , COG: ( 235.375, 257.738), avg_dist: 191.04, std_deviation: 70.6871
,  numNodesWithinArea: 83
level: 2, index = 0 { 125(356, 155) 21(324, 39) 60(492, 95) 24(356, 45) 256(446, 431) 111(130, 151) 267(84, 455) 63(34, 117) 283(268, 459) 230(494, 385) 270(120, 485) 201(340, 327) 281(238, 451) 93(456, 141) 293(438, 453) 104(60, 161) 44(156, 83) 47(208, 65) 27(442, 1) 151(448, 217) 95(482, 131) 42(50, 83) 46(176, 65) 226(318, 395) 98(32, 157) 238(56, 413) 282(264, 493) 30(416, 23) 13(284, 39) 17(252, 7) 205(438, 337) 173(336, 269) 56(390, 81) 120(314, 185) 107(116, 185) 79(296, 135) 87(390, 137) 43(118, 79) 91(440, 141) 258(404, 411) 210(494, 343) 22(342, 5) 142(188, 201) 277(244, 477) 57(402, 69) 81(260, 113) 280(212, 465) 36(12, 73) 11(222, 27) 51(296, 85) 247(254, 441) 118(254, 169) 162(176, 281) 261(474, 419) 161(110, 263) 65(42, 113) 149(330, 241) 188(86, 303) 200(318, 305) 55(306, 81) 115(242, 153) 239(56, 409) 187(58, 321) 59(470, 51) 286(314, 489) 134(10, 221) 86(330, 103) 38(34, 57) 194(236, 321) 85(304, 143) 169(322, 283) 164(222, 265) 8(180, 1) 52(268, 91) 260(496, 409) 84(332, 113) 208(400, 341) 299(452, 475) 179(470, 273) 35(456, 21)  } , COG: ( 276.7, 218.7), avg_dist: 196.936, std_deviation: 72.4041
,  numNodesWithinArea: 22
level: 2, index = 1 { 135(80, 217) 19(340, 11) 218(214, 373) 94(482, 107) 202(300, 315) 289(376, 461) 145(286, 241) 129(432, 197) 269(108, 465) 172(316, 253) 295(442, 475) 275(208, 457) 131(472, 161) 26(416, 45) 37(4, 73) 53(304, 99) 209(458, 329) 185(64, 345) 73(150, 117) 160(106, 289) 64(6, 125) 16(292, 33) 223(294, 389) 34(490, 21) 146(260, 205) 193(226, 347) 69(96, 147) 276(230, 491) 88(360, 131) 264(6, 481) 108(108, 187) 232(36, 411) 271(160, 493) 7(198, 23) 183(12, 327) 39(76, 53) 130(444, 163) 154(428, 231) 170(318, 299) 177(404, 285) 153(446, 249) 189(106, 337) 253(392, 449) 76(176, 125) 156(482, 211) 83(306, 145) 123(330, 161) 163(232, 299) 75(184, 141) 262(468, 409) 158(84, 275) 250(330, 445) 74(182, 101) 297(498, 491) 109(108, 185) 197(298, 307) 212(0, 355) 204(388, 315) 15(262, 39) 235(32, 427)  } , COG: ( 255.1, 255.633), avg_dist: 195.466, std_deviation: 74.6855
,  numNodesWithinArea: 13
level: 2, index = 2 { 33(480, 15) 221(260, 369) 101(52, 167) 241(114, 437) 265(94, 479) 296(444, 451) 292(354, 471) 4(76, 49) 100(58, 179) 184(64, 321) 103(62, 191) 110(104, 191) 122(312, 165) 186(58, 345) 9(172, 13) 89(380, 105) 249(252, 423) 157(98, 265) 288(366, 453) 192(218, 335) 224(318, 391) 72(114, 107) 171(316, 279) 287(330, 481) 227(304, 383) 294(436, 491) 50(292, 79) 2(98, 19) 206(412, 327) 77(226, 123) 97(18, 175) 113(226, 181) 268(54, 481) 259(474, 417) 147(324, 235) 199(304, 313) 138(120, 249) 290(396, 495) 58(432, 91) 178(400, 253) 25(438, 47) 284(260, 455) 139(144, 241) 207(406, 315) 175(394, 255) 78(208, 145) 166(206, 295) 174(316, 253) 5(148, 21) 0(24, 21) 236(38, 443) 28(406, 47) 244(178, 425) 291(356, 497) 251(348, 405) 105(66, 185) 61(30, 139) 285(258, 487) 48(276, 75) 68(62, 111) 215(106, 399) 246(154, 419) 198(250, 323) 266(78, 471) 182(20, 333) 181(30, 331) 29(426, 7) 20(312, 45) 216(182, 389) 228(408, 363) 32(484, 7) 96(6, 183) 80(254, 101) 119(296, 159) 143(238, 223) 254(376, 449) 242(192, 411) 245(180, 429) 133(494, 187) 136(88, 213)  } , COG: ( 234.35, 266.225), avg_dist: 196.555, std_deviation: 72.1768
,  numNodesWithinArea: 18
level: 2, index = 3 { 116(266, 159) 196(286, 321) 191(188, 331) 195(262, 321) 159(54, 283) 155(490, 201) 203(328, 333) 10(182, 9) 137(96, 213) 165(230, 255) 124(394, 179) 252(328, 445) 112(188, 195) 263(42, 455) 3(86, 33) 71(132, 147) 211(476, 323) 214(52, 395) 90(410, 139) 278(210, 477) 18(318, 17) 106(80, 189) 1(36, 15) 128(432, 181) 248(288, 441) 180(454, 289) 140(110, 233) 127(420, 175) 23(372, 37) 231(32, 415) 190(174, 313) 237(22, 423) 225(320, 381) 40(92, 99) 31(468, 47) 274(170, 461) 126(366, 195) 222(266, 397) 54(318, 61) 217(230, 393) 45(150, 79) 141(124, 211) 152(424, 241) 132(456, 161) 168(292, 255) 220(220, 377) 82(278, 143) 150(362, 201) 49(266, 97) 92(494, 123) 144(266, 235) 272(174, 455) 240(136, 419) 148(306, 217) 12(218, 25) 176(356, 287) 219(208, 373) 67(86, 129) 298(480, 455) 62(30, 123) 229(420, 387) 213(86, 393) 41(98, 91) 117(292, 159) 233(48, 411) 99(26, 159) 279(232, 473) 167(290, 279) 6(136, 49) 14(290, 19) 102(80, 181) 257(402, 429) 243(194, 431) 255(394, 447) 114(248, 159) 70(108, 103) 234(14, 413) 66(98, 117) 121(300, 163) 273(162, 495)  } , COG: ( 236.4, 249.25), avg_dist: 184.934, std_deviation: 69.253
,  numNodesWithinArea: 23
level: 3, index = 0 { 125(356, 155) 21(324, 39) 60(492, 95) 24(356, 45) 256(446, 431) 111(130, 151) 267(84, 455) 63(34, 117) 283(268, 459) 230(494, 385) 270(120, 485) 201(340, 327) 281(238, 451) 93(456, 141) 293(438, 453) 104(60, 161) 44(156, 83) 47(208, 65) 27(442, 1) 151(448, 217) 95(482, 131) 42(50, 83) 46(176, 65) 226(318, 395) 98(32, 157) 238(56, 413) 282(264, 493) 30(416, 23) 13(284, 39) 17(252, 7) 205(438, 337) 173(336, 269) 56(390, 81) 120(314, 185) 107(116, 185) 79(296, 135) 87(390, 137) 43(118, 79) 91(440, 141) 258(404, 411)  } , COG: ( 286.55, 212.05), avg_dist: 204.277, std_deviation: 66.4118
,  numNodesWithinArea: 4
level: 3, index = 1 { 210(494, 343) 22(342, 5) 142(188, 201) 277(244, 477) 57(402, 69) 81(260, 113) 280(212, 465) 36(12, 73) 11(222, 27) 51(296, 85) 247(254, 441) 118(254, 169) 162(176, 281) 261(474, 419) 161(110, 263) 65(42, 113) 149(330, 241) 188(86, 303) 200(318, 305) 55(306, 81) 115(242, 153) 239(56, 409) 187(58, 321) 59(470, 51) 286(314, 489) 134(10, 221) 86(330, 103) 38(34, 57) 194(236, 321) 85(304, 143) 169(322, 283) 164(222, 265) 8(180, 1) 52(268, 91) 260(496, 409) 84(332, 113) 208(400, 341) 299(452, 475) 179(470, 273) 35(456, 21)  } , COG: ( 266.85, 225.35), avg_dist: 188.044, std_deviation: 79.1807
,  numNodesWithinArea: 8
level: 3, index = 2 { 135(80, 217) 19(340, 11) 218(214, 373) 94(482, 107) 202(300, 315) 289(376, 461) 145(286, 241) 129(432, 197) 269(108, 465) 172(316, 253) 295(442, 475) 275(208, 457) 131(472, 161) 26(416, 45) 37(4, 73) 53(304, 99) 209(458, 329) 185(64, 345) 73(150, 117) 160(106, 289) 64(6, 125) 16(292, 33) 223(294, 389) 34(490, 21) 146(260, 205) 193(226, 347) 69(96, 147) 276(230, 491) 88(360, 131) 264(6, 481) 108(108, 187) 232(36, 411) 271(160, 493) 7(198, 23) 183(12, 327) 39(76, 53) 130(444, 163) 154(428, 231) 170(318, 299) 177(404, 285)  } , COG: ( 250.05, 246.8), avg_dist: 200.833, std_deviation: 74.8904
,  numNodesWithinArea: 5
level: 3, index = 3 { 153(446, 249) 189(106, 337) 253(392, 449) 76(176, 125) 156(482, 211) 83(306, 145) 123(330, 161) 163(232, 299) 75(184, 141) 262(468, 409) 158(84, 275) 250(330, 445) 74(182, 101) 297(498, 491) 109(108, 185) 197(298, 307) 212(0, 355) 204(388, 315) 15(262, 39) 235(32, 427)  } , COG: ( 265.2, 273.3), avg_dist: 184.882, std_deviation: 68.3165
,  numNodesWithinArea: 2
level: 3, index = 4 { 33(480, 15) 221(260, 369) 101(52, 167) 241(114, 437) 265(94, 479) 296(444, 451) 292(354, 471) 4(76, 49) 100(58, 179) 184(64, 321) 103(62, 191) 110(104, 191) 122(312, 165) 186(58, 345) 9(172, 13) 89(380, 105) 249(252, 423) 157(98, 265) 288(366, 453) 192(218, 335) 224(318, 391) 72(114, 107) 171(316, 279) 287(330, 481) 227(304, 383) 294(436, 491) 50(292, 79) 2(98, 19) 206(412, 327) 77(226, 123) 97(18, 175) 113(226, 181) 268(54, 481) 259(474, 417) 147(324, 235) 199(304, 313) 138(120, 249) 290(396, 495) 58(432, 91) 178(400, 253)  } , COG: ( 240.3, 274.85), avg_dist: 195.143, std_deviation: 70.4047
,  numNodesWithinArea: 6
level: 3, index = 5 { 25(438, 47) 284(260, 455) 139(144, 241) 207(406, 315) 175(394, 255) 78(208, 145) 166(206, 295) 174(316, 253) 5(148, 21) 0(24, 21) 236(38, 443) 28(406, 47) 244(178, 425) 291(356, 497) 251(348, 405) 105(66, 185) 61(30, 139) 285(258, 487) 48(276, 75) 68(62, 111) 215(106, 399) 246(154, 419) 198(250, 323) 266(78, 471) 182(20, 333) 181(30, 331) 29(426, 7) 20(312, 45) 216(182, 389) 228(408, 363) 32(484, 7) 96(6, 183) 80(254, 101) 119(296, 159) 143(238, 223) 254(376, 449) 242(192, 411) 245(180, 429) 133(494, 187) 136(88, 213)  } , COG: ( 228.4, 257.6), avg_dist: 197.522, std_deviation: 73.5815
,  numNodesWithinArea: 5
level: 3, index = 6 { 116(266, 159) 196(286, 321) 191(188, 331) 195(262, 321) 159(54, 283) 155(490, 201) 203(328, 333) 10(182, 9) 137(96, 213) 165(230, 255) 124(394, 179) 252(328, 445) 112(188, 195) 263(42, 455) 3(86, 33) 71(132, 147) 211(476, 323) 214(52, 395) 90(410, 139) 278(210, 477) 18(318, 17) 106(80, 189) 1(36, 15) 128(432, 181) 248(288, 441) 180(454, 289) 140(110, 233) 127(420, 175) 23(372, 37) 231(32, 415) 190(174, 313) 237(22, 423) 225(320, 381) 40(92, 99) 31(468, 47) 274(170, 461) 126(366, 195) 222(266, 397) 54(318, 61) 217(230, 393)  } , COG: ( 241.7, 249.4), avg_dist: 187.155, std_deviation: 70.2046
,  numNodesWithinArea: 7
level: 3, index = 7 { 45(150, 79) 141(124, 211) 152(424, 241) 132(456, 161) 168(292, 255) 220(220, 377) 82(278, 143) 150(362, 201) 49(266, 97) 92(494, 123) 144(266, 235) 272(174, 455) 240(136, 419) 148(306, 217) 12(218, 25) 176(356, 287) 219(208, 373) 67(86, 129) 298(480, 455) 62(30, 123) 229(420, 387) 213(86, 393) 41(98, 91) 117(292, 159) 233(48, 411) 99(26, 159) 279(232, 473) 167(290, 279) 6(136, 49) 14(290, 19) 102(80, 181) 257(402, 429) 243(194, 431) 255(394, 447) 114(248, 159) 70(108, 103) 234(14, 413) 66(98, 117) 121(300, 163) 273(162, 495)  } , COG: ( 231.1, 249.1), avg_dist: 183.04, std_deviation: 66.9135
,  numNodesWithinArea: 5
level: 4, index = 0 { 125(356, 155) 21(324, 39) 60(492, 95) 24(356, 45) 256(446, 431) 111(130, 151) 267(84, 455) 63(34, 117) 283(268, 459) 230(494, 385) 270(120, 485) 201(340, 327) 281(238, 451) 93(456, 141) 293(438, 453) 104(60, 161) 44(156, 83) 47(208, 65) 27(442, 1) 151(448, 217)  } , COG: ( 294.5, 235.8), avg_dist: 219.591, std_deviation: 55.9474
,  numNodesWithinArea: 0
level: 4, index = 1 { 95(482, 131) 42(50, 83) 46(176, 65) 226(318, 395) 98(32, 157) 238(56, 413) 282(264, 493) 30(416, 23) 13(284, 39) 17(252, 7) 205(438, 337) 173(336, 269) 56(390, 81) 120(314, 185) 107(116, 185) 79(296, 135) 87(390, 137) 43(118, 79) 91(440, 141) 258(404, 411)  } , COG: ( 278.6, 188.3), avg_dist: 185.898, std_deviation: 71.5293
,  numNodesWithinArea: 2
level: 4, index = 2 { 210(494, 343) 22(342, 5) 142(188, 201) 277(244, 477) 57(402, 69) 81(260, 113) 280(212, 465) 36(12, 73) 11(222, 27) 51(296, 85) 247(254, 441) 118(254, 169) 162(176, 281) 261(474, 419) 161(110, 263) 65(42, 113) 149(330, 241) 188(86, 303) 200(318, 305) 55(306, 81)  } , COG: ( 251.1, 223.7), avg_dist: 179.744, std_deviation: 74.2565
,  numNodesWithinArea: 2
level: 4, index = 3 { 115(242, 153) 239(56, 409) 187(58, 321) 59(470, 51) 286(314, 489) 134(10, 221) 86(330, 103) 38(34, 57) 194(236, 321) 85(304, 143) 169(322, 283) 164(222, 265) 8(180, 1) 52(268, 91) 260(496, 409) 84(332, 113) 208(400, 341) 299(452, 475) 179(470, 273) 35(456, 21)  } , COG: ( 282.6, 227), avg_dist: 194.678, std_deviation: 83.8852
,  numNodesWithinArea: 1
level: 4, index = 4 { 135(80, 217) 19(340, 11) 218(214, 373) 94(482, 107) 202(300, 315) 289(376, 461) 145(286, 241) 129(432, 197) 269(108, 465) 172(316, 253) 295(442, 475) 275(208, 457) 131(472, 161) 26(416, 45) 37(4, 73) 53(304, 99) 209(458, 329) 185(64, 345) 73(150, 117) 160(106, 289)  } , COG: ( 277.9, 251.5), avg_dist: 192.626, std_deviation: 78.3932
,  numNodesWithinArea: 3
level: 4, index = 5 { 64(6, 125) 16(292, 33) 223(294, 389) 34(490, 21) 146(260, 205) 193(226, 347) 69(96, 147) 276(230, 491) 88(360, 131) 264(6, 481) 108(108, 187) 232(36, 411) 271(160, 493) 7(198, 23) 183(12, 327) 39(76, 53) 130(444, 163) 154(428, 231) 170(318, 299) 177(404, 285)  } , COG: ( 222.2, 242.1), avg_dist: 205.197, std_deviation: 70.2404
,  numNodesWithinArea: 1
level: 4, index = 6 { 153(446, 249) 189(106, 337) 253(392, 449) 76(176, 125) 156(482, 211) 83(306, 145) 123(330, 161) 163(232, 299) 75(184, 141) 262(468, 409) 158(84, 275) 250(330, 445) 74(182, 101) 297(498, 491) 109(108, 185) 197(298, 307) 212(0, 355) 204(388, 315) 15(262, 39) 235(32, 427)  } , COG: ( 265.2, 273.3), avg_dist: 184.882, std_deviation: 68.3165
,  numNodesWithinArea: 2
level: 4, index = 7 {  } 
level: 4, index = 8 { 33(480, 15) 221(260, 369) 101(52, 167) 241(114, 437) 265(94, 479) 296(444, 451) 292(354, 471) 4(76, 49) 100(58, 179) 184(64, 321) 103(62, 191) 110(104, 191) 122(312, 165) 186(58, 345) 9(172, 13) 89(380, 105) 249(252, 423) 157(98, 265) 288(366, 453) 192(218, 335)  } , COG: ( 200.9, 271.2), avg_dist: 195.01, std_deviation: 73.4117
,  numNodesWithinArea: 1
level: 4, index = 9 { 224(318, 391) 72(114, 107) 171(316, 279) 287(330, 481) 227(304, 383) 294(436, 491) 50(292, 79) 2(98, 19) 206(412, 327) 77(226, 123) 97(18, 175) 113(226, 181) 268(54, 481) 259(474, 417) 147(324, 235) 199(304, 313) 138(120, 249) 290(396, 495) 58(432, 91) 178(400, 253)  } , COG: ( 279.7, 278.5), avg_dist: 180.349, std_deviation: 83.6668
,  numNodesWithinArea: 3
level: 4, index = 10 { 25(438, 47) 284(260, 455) 139(144, 241) 207(406, 315) 175(394, 255) 78(208, 145) 166(206, 295) 174(316, 253) 5(148, 21) 0(24, 21) 236(38, 443) 28(406, 47) 244(178, 425) 291(356, 497) 251(348, 405) 105(66, 185) 61(30, 139) 285(258, 487) 48(276, 75) 68(62, 111)  } , COG: ( 228.1, 243.1), avg_dist: 198.52, std_deviation: 70.1664
,  numNodesWithinArea: 1
level: 4, index = 11 { 215(106, 399) 246(154, 419) 198(250, 323) 266(78, 471) 182(20, 333) 181(30, 331) 29(426, 7) 20(312, 45) 216(182, 389) 228(408, 363) 32(484, 7) 96(6, 183) 80(254, 101) 119(296, 159) 143(238, 223) 254(376, 449) 242(192, 411) 245(180, 429) 133(494, 187) 136(88, 213)  } , COG: ( 228.7, 272.1), avg_dist: 195.089, std_deviation: 77.7473
,  numNodesWithinArea: 2
level: 4, index = 12 { 116(266, 159) 196(286, 321) 191(188, 331) 195(262, 321) 159(54, 283) 155(490, 201) 203(328, 333) 10(182, 9) 137(96, 213) 165(230, 255) 124(394, 179) 252(328, 445) 112(188, 195) 263(42, 455) 3(86, 33) 71(132, 147) 211(476, 323) 214(52, 395) 90(410, 139) 278(210, 477)  } , COG: ( 235, 260.7), avg_dist: 169.097, std_deviation: 77.698
,  numNodesWithinArea: 2
level: 4, index = 13 { 18(318, 17) 106(80, 189) 1(36, 15) 128(432, 181) 248(288, 441) 180(454, 289) 140(110, 233) 127(420, 175) 23(372, 37) 231(32, 415) 190(174, 313) 237(22, 423) 225(320, 381) 40(92, 99) 31(468, 47) 274(170, 461) 126(366, 195) 222(266, 397) 54(318, 61) 217(230, 393)  } , COG: ( 248.4, 238.1), avg_dist: 204.437, std_deviation: 56.0448
,  numNodesWithinArea: 0
level: 4, index = 14 { 45(150, 79) 141(124, 211) 152(424, 241) 132(456, 161) 168(292, 255) 220(220, 377) 82(278, 143) 150(362, 201) 49(266, 97) 92(494, 123) 144(266, 235) 272(174, 455) 240(136, 419) 148(306, 217) 12(218, 25) 176(356, 287) 219(208, 373) 67(86, 129) 298(480, 455) 62(30, 123)  } , COG: ( 266.3, 230.3), avg_dist: 161.176, std_deviation: 79.4506
,  numNodesWithinArea: 3
level: 4, index = 15 { 229(420, 387) 213(86, 393) 41(98, 91) 117(292, 159) 233(48, 411) 99(26, 159) 279(232, 473) 167(290, 279) 6(136, 49) 14(290, 19) 102(80, 181) 257(402, 429) 243(194, 431) 255(394, 447) 114(248, 159) 70(108, 103) 234(14, 413) 66(98, 117) 121(300, 163) 273(162, 495)  } , COG: ( 195.9, 267.9), avg_dist: 195.277, std_deviation: 48.5147
,  numNodesWithinArea: 0
level: 5, index = 0 { 125(356, 155) 21(324, 39) 60(492, 95) 24(356, 45) 256(446, 431)  } , COG: ( 394.8, 153), avg_dist: 136.734, std_deviation: 79.9045
,  numNodesWithinArea: 0
level: 5, index = 1 { 111(130, 151) 267(84, 455) 63(34, 117) 283(268, 459) 230(494, 385)  } , COG: ( 202, 313.4), avg_dist: 216.186, std_deviation: 54.0256
,  numNodesWithinArea: 0
level: 5, index = 2 { 270(120, 485) 201(340, 327) 281(238, 451) 93(456, 141) 293(438, 453)  } , COG: ( 318.4, 371.4), avg_dist: 160.856, std_deviation: 78.8831
,  numNodesWithinArea: 0
level: 5, index = 3 { 104(60, 161) 44(156, 83) 47(208, 65) 27(442, 1) 151(448, 217)  } , COG: ( 262.8, 105.4), avg_dist: 162.222, std_deviation: 61.5605
,  numNodesWithinArea: 0
level: 5, index = 4 { 95(482, 131) 42(50, 83) 46(176, 65) 226(318, 395) 98(32, 157)  } , COG: ( 211.6, 166.2), avg_dist: 198.777, std_deviation: 58.9067
,  numNodesWithinArea: 0
level: 5, index = 5 { 238(56, 413) 282(264, 493) 30(416, 23) 13(284, 39) 17(252, 7)  } , COG: ( 254.4, 195), avg_dist: 235.145, std_deviation: 55.8173
,  numNodesWithinArea: 0
level: 5, index = 6 { 205(438, 337) 173(336, 269) 56(390, 81) 120(314, 185) 107(116, 185)  } , COG: ( 318.8, 211.4), avg_dist: 122.638, std_deviation: 67.8471
,  numNodesWithinArea: 1
level: 5, index = 7 { 79(296, 135) 87(390, 137) 43(118, 79) 91(440, 141) 258(404, 411)  } , COG: ( 329.6, 180.6), avg_dist: 145.053, std_deviation: 78.7766
,  numNodesWithinArea: 0
level: 5, index = 8 { 210(494, 343) 22(342, 5) 142(188, 201) 277(244, 477) 57(402, 69)  } , COG: ( 334, 219), avg_dist: 200.324, std_deviation: 43.8522
,  numNodesWithinArea: 0
level: 5, index = 9 { 81(260, 113) 280(212, 465) 36(12, 73) 11(222, 27) 51(296, 85)  } , COG: ( 200.4, 152.6), avg_dist: 166.645, std_deviation: 84.5895
,  numNodesWithinArea: 0
level: 5, index = 10 { 247(254, 441) 118(254, 169) 162(176, 281) 261(474, 419) 161(110, 263)  } , COG: ( 253.6, 314.6), avg_dist: 150.606, std_deviation: 52.2992
,  numNodesWithinArea: 0
level: 5, index = 11 { 65(42, 113) 149(330, 241) 188(86, 303) 200(318, 305) 55(306, 81)  } , COG: ( 216.4, 208.6), avg_dist: 154.794, std_deviation: 26.6268
,  numNodesWithinArea: 0
level: 5, index = 12 { 115(242, 153) 239(56, 409) 187(58, 321) 59(470, 51) 286(314, 489)  } , COG: ( 228, 284.6), avg_dist: 215.315, std_deviation: 68.2705
,  numNodesWithinArea: 0
level: 5, index = 13 { 134(10, 221) 86(330, 103) 38(34, 57) 194(236, 321) 85(304, 143)  } , COG: ( 182.8, 169), avg_dist: 162.602, std_deviation: 21.7943
,  numNodesWithinArea: 0
level: 5, index = 14 { 169(322, 283) 164(222, 265) 8(180, 1) 52(268, 91) 260(496, 409)  } , COG: ( 297.6, 209.8), avg_dist: 162.797, std_deviation: 82.0507
,  numNodesWithinArea: 0
level: 5, index = 15 { 84(332, 113) 208(400, 341) 299(452, 475) 179(470, 273) 35(456, 21)  } , COG: ( 422, 244.6), avg_dist: 154.52, std_deviation: 69.371
,  numNodesWithinArea: 0
level: 5, index = 16 { 135(80, 217) 19(340, 11) 218(214, 373) 94(482, 107) 202(300, 315)  } , COG: ( 283.2, 204.6), avg_dist: 184.108, std_deviation: 38.3083
,  numNodesWithinArea: 0
level: 5, index = 17 { 289(376, 461) 145(286, 241) 129(432, 197) 269(108, 465) 172(316, 253)  } , COG: ( 303.6, 323.4), avg_dist: 146.576, std_deviation: 62.8273
,  numNodesWithinArea: 0
level: 5, index = 18 { 295(442, 475) 275(208, 457) 131(472, 161) 26(416, 45) 37(4, 73)  } , COG: ( 308.4, 242.2), avg_dist: 252.214, std_deviation: 55.347
,  numNodesWithinArea: 0
level: 5, index = 19 { 53(304, 99) 209(458, 329) 185(64, 345) 73(150, 117) 160(106, 289)  } , COG: ( 216.4, 235.8), avg_dist: 173.506, std_deviation: 48.1975
,  numNodesWithinArea: 0
level: 5, index = 20 { 64(6, 125) 16(292, 33) 223(294, 389) 34(490, 21) 146(260, 205)  } , COG: ( 268.4, 154.6), avg_dist: 186.716, std_deviation: 84.7634
,  numNodesWithinArea: 0
level: 5, index = 21 { 193(226, 347) 69(96, 147) 276(230, 491) 88(360, 131) 264(6, 481)  } , COG: ( 183.6, 319.4), avg_dist: 183.989, std_deviation: 72.8882
,  numNodesWithinArea: 0
level: 5, index = 22 { 108(108, 187) 232(36, 411) 271(160, 493) 7(198, 23) 183(12, 327)  } , COG: ( 102.8, 288.2), avg_dist: 166.855, std_deviation: 70.6628
,  numNodesWithinArea: 0
level: 5, index = 23 { 39(76, 53) 130(444, 163) 154(428, 231) 170(318, 299) 177(404, 285)  } , COG: ( 334, 206.2), avg_dist: 143.005, std_deviation: 78.9649
,  numNodesWithinArea: 0
level: 5, index = 24 { 153(446, 249) 189(106, 337) 253(392, 449) 76(176, 125) 156(482, 211)  } , COG: ( 320.4, 274.2), avg_dist: 184.312, std_deviation: 32.7701
,  numNodesWithinArea: 0
level: 5, index = 25 { 83(306, 145) 123(330, 161) 163(232, 299) 75(184, 141) 262(468, 409)  } , COG: ( 304, 231), avg_dist: 130.353, std_deviation: 61.4893
,  numNodesWithinArea: 0
level: 5, index = 26 { 158(84, 275) 250(330, 445) 74(182, 101) 297(498, 491) 109(108, 185)  } , COG: ( 240.4, 299.4), avg_dist: 206.418, std_deviation: 59.4993
,  numNodesWithinArea: 0
level: 5, index = 27 { 197(298, 307) 212(0, 355) 204(388, 315) 15(262, 39) 235(32, 427)  } , COG: ( 196, 288.6), avg_dist: 195.433, std_deviation: 50.7229
,  numNodesWithinArea: 0
level: 5, index = 28 {  } 
level: 5, index = 29 {  } 
level: 5, index = 30 {  } 
level: 5, index = 31 {  } 
level: 5, index = 32 { 33(480, 15) 221(260, 369) 101(52, 167) 241(114, 437) 265(94, 479)  } , COG: ( 200, 293.4), avg_dist: 213.423, std_deviation: 99.0515
,  numNodesWithinArea: 0
level: 5, index = 33 { 296(444, 451) 292(354, 471) 4(76, 49) 100(58, 179) 184(64, 321)  } , COG: ( 199.2, 294.2), avg_dist: 224.035, std_deviation: 57.0653
,  numNodesWithinArea: 0
level: 5, index = 34 { 103(62, 191) 110(104, 191) 122(312, 165) 186(58, 345) 9(172, 13)  } , COG: ( 141.6, 181), avg_dist: 129.018, std_deviation: 58.3904
,  numNodesWithinArea: 0
level: 5, index = 35 { 89(380, 105) 249(252, 423) 157(98, 265) 288(366, 453) 192(218, 335)  } , COG: ( 262.8, 316.2), avg_dist: 148.28, std_deviation: 65.475
,  numNodesWithinArea: 0
level: 5, index = 36 { 224(318, 391) 72(114, 107) 171(316, 279) 287(330, 481) 227(304, 383)  } , COG: ( 276.4, 328.2), avg_dist: 127.237, std_deviation: 82.4687
,  numNodesWithinArea: 0
level: 5, index = 37 { 294(436, 491) 50(292, 79) 2(98, 19) 206(412, 327) 77(226, 123)  } , COG: ( 292.8, 207.8), avg_dist: 198.79, std_deviation: 81.6986
,  numNodesWithinArea: 0
level: 5, index = 38 { 97(18, 175) 113(226, 181) 268(54, 481) 259(474, 417) 147(324, 235)  } , COG: ( 219.2, 297.8), avg_dist: 200.575, std_deviation: 67.8374
,  numNodesWithinArea: 0
level: 5, index = 39 { 199(304, 313) 138(120, 249) 290(396, 495) 58(432, 91) 178(400, 253)  } , COG: ( 330.4, 280.2), avg_dist: 153.776, std_deviation: 78.6447
,  numNodesWithinArea: 0
level: 5, index = 40 { 25(438, 47) 284(260, 455) 139(144, 241) 207(406, 315) 175(394, 255)  } , COG: ( 328.4, 262.6), avg_dist: 158.278, std_deviation: 67.128
,  numNodesWithinArea: 0
level: 5, index = 41 { 78(208, 145) 166(206, 295) 174(316, 253) 5(148, 21) 0(24, 21)  } , COG: ( 180.4, 147), avg_dist: 136.185, std_deviation: 59.1264
,  numNodesWithinArea: 1
level: 5, index = 42 { 236(38, 443) 28(406, 47) 244(178, 425) 291(356, 497) 251(348, 405)  } , COG: ( 265.2, 363.4), avg_dist: 189.603, std_deviation: 94.0437
,  numNodesWithinArea: 0
level: 5, index = 43 { 105(66, 185) 61(30, 139) 285(258, 487) 48(276, 75) 68(62, 111)  } , COG: ( 138.4, 199.4), avg_dist: 162.345, std_deviation: 82.6407
,  numNodesWithinArea: 0
level: 5, index = 44 { 215(106, 399) 246(154, 419) 198(250, 323) 266(78, 471) 182(20, 333)  } , COG: ( 121.6, 389), avg_dist: 83.1875, std_deviation: 46.0835
,  numNodesWithinArea: 1
level: 5, index = 45 { 181(30, 331) 29(426, 7) 20(312, 45) 216(182, 389) 228(408, 363)  } , COG: ( 271.6, 227), avg_dist: 219.196, std_deviation: 38.2634
,  numNodesWithinArea: 0
level: 5, index = 46 { 32(484, 7) 96(6, 183) 80(254, 101) 119(296, 159) 143(238, 223)  } , COG: ( 255.6, 134.6), avg_dist: 137.369, std_deviation: 100.223
,  numNodesWithinArea: 1
level: 5, index = 47 { 254(376, 449) 242(192, 411) 245(180, 429) 133(494, 187) 136(88, 213)  } , COG: ( 266, 337.8), avg_dist: 175.321, std_deviation: 62.1444
,  numNodesWithinArea: 0
level: 5, index = 48 { 116(266, 159) 196(286, 321) 191(188, 331) 195(262, 321) 159(54, 283)  } , COG: ( 211.2, 283), avg_dist: 98.6842, std_deviation: 40.7528
,  numNodesWithinArea: 0
level: 5, index = 49 { 155(490, 201) 203(328, 333) 10(182, 9) 137(96, 213) 165(230, 255)  } , COG: ( 265.2, 202.2), avg_dist: 162.651, std_deviation: 57.155
,  numNodesWithinArea: 0
level: 5, index = 50 { 124(394, 179) 252(328, 445) 112(188, 195) 263(42, 455) 3(86, 33)  } , COG: ( 207.6, 261.4), avg_dist: 201.221, std_deviation: 69.1962
,  numNodesWithinArea: 0
level: 5, index = 51 { 71(132, 147) 211(476, 323) 214(52, 395) 90(410, 139) 278(210, 477)  } , COG: ( 256, 296.2), avg_dist: 209.783, std_deviation: 16.244
,  numNodesWithinArea: 0
level: 5, index = 52 { 18(318, 17) 106(80, 189) 1(36, 15) 128(432, 181) 248(288, 441)  } , COG: ( 230.8, 168.6), avg_dist: 211.012, std_deviation: 46.3947
,  numNodesWithinArea: 0
level: 5, index = 53 { 180(454, 289) 140(110, 233) 127(420, 175) 23(372, 37) 231(32, 415)  } , COG: ( 277.6, 229.8), avg_dist: 205.71, std_deviation: 54.9921
,  numNodesWithinArea: 0
level: 5, index = 54 { 190(174, 313) 237(22, 423) 225(320, 381) 40(92, 99) 31(468, 47)  } , COG: ( 215.2, 252.6), avg_dist: 203.844, std_deviation: 85.2843
,  numNodesWithinArea: 0
level: 5, index = 55 { 274(170, 461) 126(366, 195) 222(266, 397) 54(318, 61) 217(230, 393)  } , COG: ( 270, 301.4), avg_dist: 154.486, std_deviation: 56.4301
,  numNodesWithinArea: 0
level: 5, index = 56 { 45(150, 79) 141(124, 211) 152(424, 241) 132(456, 161) 168(292, 255)  } , COG: ( 289.2, 189.4), avg_dist: 144.694, std_deviation: 41.0227
,  numNodesWithinArea: 0
level: 5, index = 57 { 220(220, 377) 82(278, 143) 150(362, 201) 49(266, 97) 92(494, 123)  } , COG: ( 324, 188.2), avg_dist: 122.059, std_deviation: 67.1854
,  numNodesWithinArea: 0
level: 5, index = 58 { 144(266, 235) 272(174, 455) 240(136, 419) 148(306, 217) 12(218, 25)  } , COG: ( 220, 270.2), avg_dist: 153.113, std_deviation: 66.2633
,  numNodesWithinArea: 0
level: 5, index = 59 { 176(356, 287) 219(208, 373) 67(86, 129) 298(480, 455) 62(30, 123)  } , COG: ( 232, 273.4), avg_dist: 198.353, std_deviation: 76.6974
,  numNodesWithinArea: 0
level: 5, index = 60 { 229(420, 387) 213(86, 393) 41(98, 91) 117(292, 159) 233(48, 411)  } , COG: ( 188.8, 288.2), avg_dist: 193.502, std_deviation: 37.228
,  numNodesWithinArea: 0
level: 5, index = 61 { 99(26, 159) 279(232, 473) 167(290, 279) 6(136, 49) 14(290, 19)  } , COG: ( 194.8, 195.8), avg_dist: 187.564, std_deviation: 51.9296
,  numNodesWithinArea: 0
level: 5, index = 62 { 102(80, 181) 257(402, 429) 243(194, 431) 255(394, 447) 114(248, 159)  } , COG: ( 263.6, 329.4), avg_dist: 175.29, std_deviation: 35.9262
,  numNodesWithinArea: 0
level: 5, index = 63 { 70(108, 103) 234(14, 413) 66(98, 117) 121(300, 163) 273(162, 495)  } , COG: ( 136.4, 258.2), avg_dist: 185.782, std_deviation: 32.3491
,  numNodesWithinArea: 0
