level: 1, index = 0 { 34(364, 3) 193(252, 245) 69(202, 83) 88(4, 101) 276(388, 315) 300(214, 373) 108(234, 113) 264(218, 335) 232(336, 271) 383(264, 459) 7(98, 19) 183(120, 245) 39(406, 47) 271(340, 327) 311(496, 353) 170(424, 183) 130(20, 173) 154(226, 181) 253(78, 305) 189(238, 223) 153(242, 153) 353(6, 481) 177(456, 161) 156(248, 159) 76(276, 75) 356(54, 481) 75(292, 79) 163(312, 165) 123(410, 139) 83(402, 69) 74(296, 85) 250(64, 345) 158(254, 169) 262(194, 333) 393(444, 451) 197(314, 201) 377(264, 493) 109(278, 143) 297(182, 389) 204(398, 237) 212(42, 267) 255(58, 321) 15(172, 13) 235(322, 283) 363(120, 485) 343(382, 427) 243(408, 277) 394(442, 475) 66(156, 83) 114(304, 143) 70(264, 79) 322(56, 409) 234(300, 277) 241(404, 285) 33(312, 45) 265(226, 347) 221(206, 295) 273(318, 305) 101(176, 125) 121(390, 137) 184(124, 211) 100(132, 147) 292(106, 399) 296(186, 393) 308(320, 381) 316(32, 427) 4(80, 43) 103(182, 101) 375(208, 457) 378(260, 455) 186(120, 249) 110(260, 113) 358(50, 485) 122(440, 141) 157(296, 159) 249(12, 327) 89(6, 125) 9(96, 45) 288(0, 355) 324(56, 413) 224(276, 257) 72(274, 99) 192(266, 235) 287(458, 329) 227(256, 281) 171(444, 163) 347(404, 411) 330(192, 411) 206(424, 241) 294(122, 361) 2(24, 21) 50(34, 57) 113(330, 103) 77(306, 81) 97(82, 107) 268(250, 323) 147(106, 185) 199(346, 215) 259(188, 331) 379(268, 459) 374(232, 473) 178(10, 221) 290(86, 393) 138(80, 189) 58(92, 99) 25(252, 7) 284(434, 323) 207(446, 249) 319(38, 443) 139(62, 191) 339(348, 405) 391(438, 453) 303(260, 369) 175(494, 187) 398(498, 491) 370(224, 487) 314(8, 445) 166(356, 155) 78(318, 61) 174(432, 181) 329(154, 419) 309(408, 363) 5(86, 33) 236(322, 253) 28(324, 39) 244(400, 253) 0(34, 45) 251(64, 321) 291(52, 395) 354(42, 471) 61(112, 63) 369(210, 477) 285(476, 323) 105(150, 117) 68(208, 65) 48(484, 7) 215(54, 283) 266(224, 319) 182(82, 219) 198(320, 245) 246(470, 273) 389(396, 495) 181(80, 217) 29(340, 11) 381(276, 485) 96(98, 117) 228(336, 269) 80(392, 91) 216(98, 265) 332(194, 431) 32(318, 17) 360(78, 471) 20(222, 27) 364(142, 497) 119(372, 133) 143(130, 151) 359(60, 459) 310(420, 387) 254(58, 345) 346(434, 423) 318(32, 415) 242(448, 251) 133(18, 175) 245(454, 289) 116(306, 145) 136(66, 185) 196(260, 205) 195(270, 209) 191(256, 249) 203(384, 239) 367(170, 461) 159(292, 159) 155(224, 177) 366(160, 493) 302(294, 389) 10(148, 21) 165(300, 163) 385(330, 481) 137(80, 181) 317(22, 423) 112(296, 135) 124(482, 131) 252(86, 303) 340(392, 449) 71(268, 91) 211(490, 201) 3(38, 5) 263(236, 321) 278(438, 337) 214(52, 269) 90(34, 117) 106(208, 145) 18(200, 49) 1(36, 15) 333(288, 441) 128(486, 117) 140(52, 167) 180(96, 213) 248(30, 331) 304(266, 397) 336(254, 449) 344(402, 429) 231(318, 299) 23(292, 33) 127(450, 113) 190(286, 241) 386(356, 497) 237(394, 255) 225(290, 279) 40(428, 25) 396(464, 475) 376(238, 451) 352(42, 455) 335(254, 441) 31(342, 5) 274(328, 333)  } , COG: ( 239.519, 253.5), avg_dist: 190.504, std_deviation: 72.1874
,  numNodesWithinArea: 112
level: 1, index = 1 { 217(110, 263) 45(490, 21) 152(226, 151) 220(230, 255) 168(394, 179) 132(6, 183) 82(432, 91) 150(188, 195) 345(446, 431) 49(468, 47) 240(406, 299) 368(174, 455) 348(468, 409) 148(110, 193) 176(472, 161) 92(76, 115) 12(136, 49) 144(104, 191) 272(304, 313) 67(208, 53) 331(178, 425) 219(176, 281) 62(198, 63) 306(304, 383) 298(230, 393) 117(362, 137) 233(316, 253) 229(316, 279) 41(416, 45) 213(84, 275) 279(400, 341) 167(366, 195) 99(108, 103) 371(212, 465) 102(184, 141) 6(76, 49) 14(198, 23) 257(114, 337) 21(266, 45) 125(494, 123) 301(208, 373) 24(284, 39) 60(118, 79) 328(180, 429) 256(112, 339) 283(432, 343) 63(180, 79) 111(254, 101) 267(298, 307) 230(316, 253) 270(262, 321) 362(118, 469) 201(324, 235) 293(144, 389) 93(86, 129) 305(318, 391) 349(474, 419) 281(412, 327) 104(152, 115) 372(230, 491) 44(456, 21) 388(354, 471) 151(168, 169) 47(480, 15) 95(96, 147) 27(290, 19) 98(114, 107) 342(376, 449) 282(412, 317) 46(490, 5) 226(292, 255) 238(356, 287) 42(426, 7) 30(320, 27) 13(182, 9) 205(362, 201) 17(160, 47) 173(432, 197) 313(14, 413) 337(328, 445) 365(162, 495) 56(52, 67) 120(360, 131) 43(416, 23) 107(226, 123) 91(42, 113) 87(30, 139) 79(304, 99) 258(106, 337) 210(482, 211) 142(58, 179) 22(296, 3) 325(114, 437) 321(48, 411) 57(98, 91) 277(390, 301) 81(390, 81) 384(314, 489) 36(356, 45) 280(406, 315) 380(258, 487) 387(366, 453) 51(22, 55) 247(20, 333) 11(120, 7) 307(318, 395) 323(66, 419) 118(380, 105) 334(252, 423) 162(326, 191) 149(108, 185) 261(174, 313) 65(150, 79) 161(314, 185) 373(244, 477) 320(36, 411) 200(306, 217) 188(188, 201) 395(486, 465) 351(496, 409) 187(110, 233) 55(50, 83) 59(76, 53) 239(384, 291) 115(332, 113) 38(438, 47) 134(2, 173) 338(330, 445) 194(288, 229) 286(494, 343) 86(30, 123) 341(394, 447) 85(492, 95) 169(352, 175) 52(12, 73) 164(330, 161) 260(198, 339) 312(494, 385) 8(98, 33) 84(470, 51) 208(428, 231) 19(218, 25) 135(32, 157) 315(36, 409) 35(372, 37) 179(88, 213) 299(220, 377) 202(330, 241) 326(148, 435) 218(106, 289) 350(474, 417) 94(62, 111) 269(286, 321) 357(84, 455) 129(482, 107) 145(108, 187) 289(2, 353) 172(420, 175) 392(436, 491) 399(452, 475) 327(136, 419) 131(26, 159) 275(300, 315) 295(106, 381) 390(376, 461) 26(262, 39) 382(284, 465) 397(480, 455) 73(266, 97) 361(108, 465) 53(2, 97) 185(144, 241) 209(448, 217) 37(442, 1) 16(180, 1) 64(176, 65) 160(266, 159) 355(94, 479) 223(232, 299) 146(116, 185) 54(4, 73) 126(456, 141) 222(222, 265) 141(60, 161)  } , COG: ( 250.435, 231.435), avg_dist: 198.801, std_deviation: 71.333
,  numNodesWithinArea: 88
level: 2, index = 0 { 34(364, 3) 193(252, 245) 69(202, 83) 88(4, 101) 276(388, 315) 300(214, 373) 108(234, 113) 264(218, 335) 232(336, 271) 383(264, 459) 7(98, 19) 183(120, 245) 39(406, 47) 271(340, 327) 311(496, 353) 170(424, 183) 130(20, 173) 154(226, 181) 253(78, 305) 189(238, 223) 153(242, 153) 353(6, 481) 177(456, 161) 156(248, 159) 76(276, 75) 356(54, 481) 75(292, 79) 163(312, 165) 123(410, 139) 83(402, 69) 74(296, 85) 250(64, 345) 158(254, 169) 262(194, 333) 393(444, 451) 197(314, 201) 377(264, 493) 109(278, 143) 297(182, 389) 204(398, 237) 212(42, 267) 255(58, 321) 15(172, 13) 235(322, 283) 363(120, 485) 343(382, 427) 243(408, 277) 394(442, 475) 66(156, 83) 114(304, 143) 70(264, 79) 322(56, 409) 234(300, 277) 241(404, 285) 33(312, 45) 265(226, 347) 221(206, 295) 273(318, 305) 101(176, 125) 121(390, 137) 184(124, 211) 100(132, 147) 292(106, 399) 296(186, 393) 308(320, 381) 316(32, 427) 4(80, 43) 103(182, 101) 375(208, 457) 378(260, 455) 186(120, 249) 110(260, 113) 358(50, 485) 122(440, 141) 157(296, 159) 249(12, 327) 89(6, 125) 9(96, 45) 288(0, 355) 324(56, 413) 224(276, 257) 72(274, 99) 192(266, 235) 287(458, 329) 227(256, 281) 171(444, 163) 347(404, 411) 330(192, 411) 206(424, 241) 294(122, 361) 2(24, 21) 50(34, 57) 113(330, 103) 77(306, 81) 97(82, 107) 268(250, 323) 147(106, 185) 199(346, 215) 259(188, 331) 379(268, 459) 374(232, 473) 178(10, 221) 290(86, 393) 138(80, 189) 58(92, 99) 25(252, 7) 284(434, 323) 207(446, 249)  } , COG: ( 231.611, 243.426), avg_dist: 179.03, std_deviation: 70.6971
,  numNodesWithinArea: 35
level: 2, index = 1 { 319(38, 443) 139(62, 191) 339(348, 405) 391(438, 453) 303(260, 369) 175(494, 187) 398(498, 491) 370(224, 487) 314(8, 445) 166(356, 155) 78(318, 61) 174(432, 181) 329(154, 419) 309(408, 363) 5(86, 33) 236(322, 253) 28(324, 39) 244(400, 253) 0(34, 45) 251(64, 321) 291(52, 395) 354(42, 471) 61(112, 63) 369(210, 477) 285(476, 323) 105(150, 117) 68(208, 65) 48(484, 7) 215(54, 283) 266(224, 319) 182(82, 219) 198(320, 245) 246(470, 273) 389(396, 495) 181(80, 217) 29(340, 11) 381(276, 485) 96(98, 117) 228(336, 269) 80(392, 91) 216(98, 265) 332(194, 431) 32(318, 17) 360(78, 471) 20(222, 27) 364(142, 497) 119(372, 133) 143(130, 151) 359(60, 459) 310(420, 387) 254(58, 345) 346(434, 423) 318(32, 415) 242(448, 251) 133(18, 175) 245(454, 289) 116(306, 145) 136(66, 185) 196(260, 205) 195(270, 209) 191(256, 249) 203(384, 239) 367(170, 461) 159(292, 159) 155(224, 177) 366(160, 493) 302(294, 389) 10(148, 21) 165(300, 163) 385(330, 481) 137(80, 181) 317(22, 423) 112(296, 135) 124(482, 131) 252(86, 303) 340(392, 449) 71(268, 91) 211(490, 201) 3(38, 5) 263(236, 321) 278(438, 337) 214(52, 269) 90(34, 117) 106(208, 145) 18(200, 49) 1(36, 15) 333(288, 441) 128(486, 117) 140(52, 167) 180(96, 213) 248(30, 331) 304(266, 397) 336(254, 449) 344(402, 429) 231(318, 299) 23(292, 33) 127(450, 113) 190(286, 241) 386(356, 497) 237(394, 255) 225(290, 279) 40(428, 25) 396(464, 475) 376(238, 451) 352(42, 455) 335(254, 441) 31(342, 5) 274(328, 333)  } , COG: ( 247.426, 263.574), avg_dist: 201.251, std_deviation: 71.5928
,  numNodesWithinArea: 22
level: 2, index = 2 { 217(110, 263) 45(490, 21) 152(226, 151) 220(230, 255) 168(394, 179) 132(6, 183) 82(432, 91) 150(188, 195) 345(446, 431) 49(468, 47) 240(406, 299) 368(174, 455) 348(468, 409) 148(110, 193) 176(472, 161) 92(76, 115) 12(136, 49) 144(104, 191) 272(304, 313) 67(208, 53) 331(178, 425) 219(176, 281) 62(198, 63) 306(304, 383) 298(230, 393) 117(362, 137) 233(316, 253) 229(316, 279) 41(416, 45) 213(84, 275) 279(400, 341) 167(366, 195) 99(108, 103) 371(212, 465) 102(184, 141) 6(76, 49) 14(198, 23) 257(114, 337) 21(266, 45) 125(494, 123) 301(208, 373) 24(284, 39) 60(118, 79) 328(180, 429) 256(112, 339) 283(432, 343) 63(180, 79) 111(254, 101) 267(298, 307) 230(316, 253) 270(262, 321) 362(118, 469) 201(324, 235) 293(144, 389) 93(86, 129) 305(318, 391) 349(474, 419) 281(412, 327) 104(152, 115) 372(230, 491) 44(456, 21) 388(354, 471) 151(168, 169) 47(480, 15) 95(96, 147) 27(290, 19) 98(114, 107) 342(376, 449) 282(412, 317) 46(490, 5) 226(292, 255) 238(356, 287) 42(426, 7) 30(320, 27) 13(182, 9) 205(362, 201) 17(160, 47) 173(432, 197) 313(14, 413) 337(328, 445) 365(162, 495) 56(52, 67) 120(360, 131) 43(416, 23) 107(226, 123) 91(42, 113) 87(30, 139) 79(304, 99) 258(106, 337) 210(482, 211) 142(58, 179) 22(296, 3) 325(114, 437) 321(48, 411) 57(98, 91) 277(390, 301) 81(390, 81) 384(314, 489) 36(356, 45) 280(406, 315) 380(258, 487) 387(366, 453) 51(22, 55) 247(20, 333) 11(120, 7) 307(318, 395) 323(66, 419) 118(380, 105)  } , COG: ( 256.074, 222.13), avg_dist: 195.52, std_deviation: 65.8561
,  numNodesWithinArea: 22
level: 2, index = 3 { 334(252, 423) 162(326, 191) 149(108, 185) 261(174, 313) 65(150, 79) 161(314, 185) 373(244, 477) 320(36, 411) 200(306, 217) 188(188, 201) 395(486, 465) 351(496, 409) 187(110, 233) 55(50, 83) 59(76, 53) 239(384, 291) 115(332, 113) 38(438, 47) 134(2, 173) 338(330, 445) 194(288, 229) 286(494, 343) 86(30, 123) 341(394, 447) 85(492, 95) 169(352, 175) 52(12, 73) 164(330, 161) 260(198, 339) 312(494, 385) 8(98, 33) 84(470, 51) 208(428, 231) 19(218, 25) 135(32, 157) 315(36, 409) 35(372, 37) 179(88, 213) 299(220, 377) 202(330, 241) 326(148, 435) 218(106, 289) 350(474, 417) 94(62, 111) 269(286, 321) 357(84, 455) 129(482, 107) 145(108, 187) 289(2, 353) 172(420, 175) 392(436, 491) 399(452, 475) 327(136, 419) 131(26, 159) 275(300, 315) 295(106, 381) 390(376, 461) 26(262, 39) 382(284, 465) 397(480, 455) 73(266, 97) 361(108, 465) 53(2, 97) 185(144, 241) 209(448, 217) 37(442, 1) 16(180, 1) 64(176, 65) 160(266, 159) 355(94, 479) 223(232, 299) 146(116, 185) 54(4, 73) 126(456, 141) 222(222, 265) 141(60, 161)  } , COG: ( 242.421, 244.658), avg_dist: 202.665, std_deviation: 77.6952
,  numNodesWithinArea: 19
level: 3, index = 0 { 34(364, 3) 193(252, 245) 69(202, 83) 88(4, 101) 276(388, 315) 300(214, 373) 108(234, 113) 264(218, 335) 232(336, 271) 383(264, 459) 7(98, 19) 183(120, 245) 39(406, 47) 271(340, 327) 311(496, 353) 170(424, 183) 130(20, 173) 154(226, 181) 253(78, 305) 189(238, 223) 153(242, 153) 353(6, 481) 177(456, 161) 156(248, 159) 76(276, 75) 356(54, 481) 75(292, 79) 163(312, 165) 123(410, 139) 83(402, 69) 74(296, 85) 250(64, 345) 158(254, 169) 262(194, 333) 393(444, 451) 197(314, 201) 377(264, 493) 109(278, 143) 297(182, 389) 204(398, 237) 212(42, 267) 255(58, 321) 15(172, 13) 235(322, 283) 363(120, 485) 343(382, 427) 243(408, 277) 394(442, 475) 66(156, 83) 114(304, 143) 70(264, 79) 322(56, 409) 234(300, 277) 241(404, 285)  } , COG: ( 254.407, 240.481), avg_dist: 173.933, std_deviation: 78.615
,  numNodesWithinArea: 11
level: 3, index = 1 { 33(312, 45) 265(226, 347) 221(206, 295) 273(318, 305) 101(176, 125) 121(390, 137) 184(124, 211) 100(132, 147) 292(106, 399) 296(186, 393) 308(320, 381) 316(32, 427) 4(80, 43) 103(182, 101) 375(208, 457) 378(260, 455) 186(120, 249) 110(260, 113) 358(50, 485) 122(440, 141) 157(296, 159) 249(12, 327) 89(6, 125) 9(96, 45) 288(0, 355) 324(56, 413) 224(276, 257) 72(274, 99) 192(266, 235) 287(458, 329) 227(256, 281) 171(444, 163) 347(404, 411) 330(192, 411) 206(424, 241) 294(122, 361) 2(24, 21) 50(34, 57) 113(330, 103) 77(306, 81) 97(82, 107) 268(250, 323) 147(106, 185) 199(346, 215) 259(188, 331) 379(268, 459) 374(232, 473) 178(10, 221) 290(86, 393) 138(80, 189) 58(92, 99) 25(252, 7) 284(434, 323) 207(446, 249)  } , COG: ( 208.815, 246.37), avg_dist: 180.447, std_deviation: 63.6315
,  numNodesWithinArea: 8
level: 3, index = 2 { 319(38, 443) 139(62, 191) 339(348, 405) 391(438, 453) 303(260, 369) 175(494, 187) 398(498, 491) 370(224, 487) 314(8, 445) 166(356, 155) 78(318, 61) 174(432, 181) 329(154, 419) 309(408, 363) 5(86, 33) 236(322, 253) 28(324, 39) 244(400, 253) 0(34, 45) 251(64, 321) 291(52, 395) 354(42, 471) 61(112, 63) 369(210, 477) 285(476, 323) 105(150, 117) 68(208, 65) 48(484, 7) 215(54, 283) 266(224, 319) 182(82, 219) 198(320, 245) 246(470, 273) 389(396, 495) 181(80, 217) 29(340, 11) 381(276, 485) 96(98, 117) 228(336, 269) 80(392, 91) 216(98, 265) 332(194, 431) 32(318, 17) 360(78, 471) 20(222, 27) 364(142, 497) 119(372, 133) 143(130, 151) 359(60, 459) 310(420, 387) 254(58, 345) 346(434, 423) 318(32, 415) 242(448, 251)  } , COG: ( 242.148, 274.222), avg_dist: 213.592, std_deviation: 62.1825
,  numNodesWithinArea: 5
level: 3, index = 3 { 133(18, 175) 245(454, 289) 116(306, 145) 136(66, 185) 196(260, 205) 195(270, 209) 191(256, 249) 203(384, 239) 367(170, 461) 159(292, 159) 155(224, 177) 366(160, 493) 302(294, 389) 10(148, 21) 165(300, 163) 385(330, 481) 137(80, 181) 317(22, 423) 112(296, 135) 124(482, 131) 252(86, 303) 340(392, 449) 71(268, 91) 211(490, 201) 3(38, 5) 263(236, 321) 278(438, 337) 214(52, 269) 90(34, 117) 106(208, 145) 18(200, 49) 1(36, 15) 333(288, 441) 128(486, 117) 140(52, 167) 180(96, 213) 248(30, 331) 304(266, 397) 336(254, 449) 344(402, 429) 231(318, 299) 23(292, 33) 127(450, 113) 190(286, 241) 386(356, 497) 237(394, 255) 225(290, 279) 40(428, 25) 396(464, 475) 376(238, 451) 352(42, 455) 335(254, 441) 31(342, 5) 274(328, 333)  } , COG: ( 252.704, 252.926), avg_dist: 187.471, std_deviation: 79.6156
,  numNodesWithinArea: 8
level: 3, index = 4 { 217(110, 263) 45(490, 21) 152(226, 151) 220(230, 255) 168(394, 179) 132(6, 183) 82(432, 91) 150(188, 195) 345(446, 431) 49(468, 47) 240(406, 299) 368(174, 455) 348(468, 409) 148(110, 193) 176(472, 161) 92(76, 115) 12(136, 49) 144(104, 191) 272(304, 313) 67(208, 53) 331(178, 425) 219(176, 281) 62(198, 63) 306(304, 383) 298(230, 393) 117(362, 137) 233(316, 253) 229(316, 279) 41(416, 45) 213(84, 275) 279(400, 341) 167(366, 195) 99(108, 103) 371(212, 465) 102(184, 141) 6(76, 49) 14(198, 23) 257(114, 337) 21(266, 45) 125(494, 123) 301(208, 373) 24(284, 39) 60(118, 79) 328(180, 429) 256(112, 339) 283(432, 343) 63(180, 79) 111(254, 101) 267(298, 307) 230(316, 253) 270(262, 321) 362(118, 469) 201(324, 235) 293(144, 389)  } , COG: ( 253.259, 225.296), avg_dist: 175.101, std_deviation: 65.5255
,  numNodesWithinArea: 10
level: 3, index = 5 { 93(86, 129) 305(318, 391) 349(474, 419) 281(412, 327) 104(152, 115) 372(230, 491) 44(456, 21) 388(354, 471) 151(168, 169) 47(480, 15) 95(96, 147) 27(290, 19) 98(114, 107) 342(376, 449) 282(412, 317) 46(490, 5) 226(292, 255) 238(356, 287) 42(426, 7) 30(320, 27) 13(182, 9) 205(362, 201) 17(160, 47) 173(432, 197) 313(14, 413) 337(328, 445) 365(162, 495) 56(52, 67) 120(360, 131) 43(416, 23) 107(226, 123) 91(42, 113) 87(30, 139) 79(304, 99) 258(106, 337) 210(482, 211) 142(58, 179) 22(296, 3) 325(114, 437) 321(48, 411) 57(98, 91) 277(390, 301) 81(390, 81) 384(314, 489) 36(356, 45) 280(406, 315) 380(258, 487) 387(366, 453) 51(22, 55) 247(20, 333) 11(120, 7) 307(318, 395) 323(66, 419) 118(380, 105)  } , COG: ( 258.889, 218.963), avg_dist: 215.538, std_deviation: 60.6952
,  numNodesWithinArea: 1
level: 3, index = 6 { 334(252, 423) 162(326, 191) 149(108, 185) 261(174, 313) 65(150, 79) 161(314, 185) 373(244, 477) 320(36, 411) 200(306, 217) 188(188, 201) 395(486, 465) 351(496, 409) 187(110, 233) 55(50, 83) 59(76, 53) 239(384, 291) 115(332, 113) 38(438, 47) 134(2, 173) 338(330, 445) 194(288, 229) 286(494, 343) 86(30, 123) 341(394, 447) 85(492, 95) 169(352, 175) 52(12, 73) 164(330, 161) 260(198, 339) 312(494, 385) 8(98, 33) 84(470, 51) 208(428, 231) 19(218, 25) 135(32, 157) 315(36, 409) 35(372, 37) 179(88, 213) 299(220, 377) 202(330, 241) 326(148, 435) 218(106, 289) 350(474, 417) 94(62, 111) 269(286, 321) 357(84, 455) 129(482, 107) 145(108, 187) 289(2, 353) 172(420, 175) 392(436, 491) 399(452, 475) 327(136, 419) 131(26, 159)  } , COG: ( 248.148, 250.593), avg_dist: 204.409, std_deviation: 75.1438
,  numNodesWithinArea: 8
level: 3, index = 7 { 275(300, 315) 295(106, 381) 390(376, 461) 26(262, 39) 382(284, 465) 397(480, 455) 73(266, 97) 361(108, 465) 53(2, 97) 185(144, 241) 209(448, 217) 37(442, 1) 16(180, 1) 64(176, 65) 160(266, 159) 355(94, 479) 223(232, 299) 146(116, 185) 54(4, 73) 126(456, 141) 222(222, 265) 141(60, 161)  } , COG: ( 228.364, 230.091), avg_dist: 196.914, std_deviation: 83.4969
,  numNodesWithinArea: 4
level: 4, index = 0 { 34(364, 3) 193(252, 245) 69(202, 83) 88(4, 101) 276(388, 315) 300(214, 373) 108(234, 113) 264(218, 335) 232(336, 271) 383(264, 459) 7(98, 19) 183(120, 245) 39(406, 47) 271(340, 327) 311(496, 353) 170(424, 183) 130(20, 173) 154(226, 181)  } , COG: ( 255.889, 212.556), avg_dist: 171.091, std_deviation: 72.9872
,  numNodesWithinArea: 2
level: 4, index = 1 { 253(78, 305) 189(238, 223) 153(242, 153) 353(6, 481) 177(456, 161) 156(248, 159) 76(276, 75) 356(54, 481) 75(292, 79) 163(312, 165) 123(410, 139) 83(402, 69) 74(296, 85) 250(64, 345) 158(254, 169) 262(194, 333) 393(444, 451) 197(314, 201)  } , COG: ( 254.444, 226.333), avg_dist: 163.175, std_deviation: 93.6365
,  numNodesWithinArea: 2
level: 4, index = 2 { 377(264, 493) 109(278, 143) 297(182, 389) 204(398, 237) 212(42, 267) 255(58, 321) 15(172, 13) 235(322, 283) 363(120, 485) 343(382, 427) 243(408, 277) 394(442, 475) 66(156, 83) 114(304, 143) 70(264, 79) 322(56, 409) 234(300, 277) 241(404, 285)  } , COG: ( 252.889, 282.556), avg_dist: 181.165, std_deviation: 61.0805
,  numNodesWithinArea: 1
level: 4, index = 3 { 33(312, 45) 265(226, 347) 221(206, 295) 273(318, 305) 101(176, 125) 121(390, 137) 184(124, 211) 100(132, 147) 292(106, 399) 296(186, 393) 308(320, 381) 316(32, 427) 4(80, 43) 103(182, 101) 375(208, 457) 378(260, 455) 186(120, 249) 110(260, 113)  } , COG: ( 202.111, 257.222), avg_dist: 157.872, std_deviation: 58.4521
,  numNodesWithinArea: 1
level: 4, index = 4 { 358(50, 485) 122(440, 141) 157(296, 159) 249(12, 327) 89(6, 125) 9(96, 45) 288(0, 355) 324(56, 413) 224(276, 257) 72(274, 99) 192(266, 235) 287(458, 329) 227(256, 281) 171(444, 163) 347(404, 411) 330(192, 411) 206(424, 241) 294(122, 361)  } , COG: ( 226.222, 268.778), avg_dist: 187.416, std_deviation: 76.1259
,  numNodesWithinArea: 3
level: 4, index = 5 { 2(24, 21) 50(34, 57) 113(330, 103) 77(306, 81) 97(82, 107) 268(250, 323) 147(106, 185) 199(346, 215) 259(188, 331) 379(268, 459) 374(232, 473) 178(10, 221) 290(86, 393) 138(80, 189) 58(92, 99) 25(252, 7) 284(434, 323) 207(446, 249)  } , COG: ( 198.111, 213.111), avg_dist: 188.198, std_deviation: 54.4311
,  numNodesWithinArea: 0
level: 4, index = 6 { 319(38, 443) 139(62, 191) 339(348, 405) 391(438, 453) 303(260, 369) 175(494, 187) 398(498, 491) 370(224, 487) 314(8, 445) 166(356, 155) 78(318, 61) 174(432, 181) 329(154, 419) 309(408, 363) 5(86, 33) 236(322, 253) 28(324, 39) 244(400, 253)  } , COG: ( 287.222, 290.444), avg_dist: 203.469, std_deviation: 77.4924
,  numNodesWithinArea: 1
level: 4, index = 7 { 0(34, 45) 251(64, 321) 291(52, 395) 354(42, 471) 61(112, 63) 369(210, 477) 285(476, 323) 105(150, 117) 68(208, 65) 48(484, 7) 215(54, 283) 266(224, 319) 182(82, 219) 198(320, 245) 246(470, 273) 389(396, 495) 181(80, 217) 29(340, 11)  } , COG: ( 211, 241.444), avg_dist: 210.147, std_deviation: 75.4996
,  numNodesWithinArea: 0
level: 4, index = 8 { 381(276, 485) 96(98, 117) 228(336, 269) 80(392, 91) 216(98, 265) 332(194, 431) 32(318, 17) 360(78, 471) 20(222, 27) 364(142, 497) 119(372, 133) 143(130, 151) 359(60, 459) 310(420, 387) 254(58, 345) 346(434, 423) 318(32, 415) 242(448, 251)  } , COG: ( 228.222, 290.778), avg_dist: 210.458, std_deviation: 45.8018
,  numNodesWithinArea: 0
level: 4, index = 9 { 133(18, 175) 245(454, 289) 116(306, 145) 136(66, 185) 196(260, 205) 195(270, 209) 191(256, 249) 203(384, 239) 367(170, 461) 159(292, 159) 155(224, 177) 366(160, 493) 302(294, 389) 10(148, 21) 165(300, 163) 385(330, 481) 137(80, 181) 317(22, 423)  } , COG: ( 224.111, 258), avg_dist: 163.224, std_deviation: 69.9214
,  numNodesWithinArea: 1
level: 4, index = 10 { 112(296, 135) 124(482, 131) 252(86, 303) 340(392, 449) 71(268, 91) 211(490, 201) 3(38, 5) 263(236, 321) 278(438, 337) 214(52, 269) 90(34, 117) 106(208, 145) 18(200, 49) 1(36, 15) 333(288, 441) 128(486, 117) 140(52, 167) 180(96, 213)  } , COG: ( 232.111, 194.778), avg_dist: 197.73, std_deviation: 70.7998
,  numNodesWithinArea: 1
level: 4, index = 11 { 248(30, 331) 304(266, 397) 336(254, 449) 344(402, 429) 231(318, 299) 23(292, 33) 127(450, 113) 190(286, 241) 386(356, 497) 237(394, 255) 225(290, 279) 40(428, 25) 396(464, 475) 376(238, 451) 352(42, 455) 335(254, 441) 31(342, 5) 274(328, 333)  } , COG: ( 301.889, 306), avg_dist: 172.176, std_deviation: 96.3404
,  numNodesWithinArea: 3
level: 4, index = 12 { 217(110, 263) 45(490, 21) 152(226, 151) 220(230, 255) 168(394, 179) 132(6, 183) 82(432, 91) 150(188, 195) 345(446, 431) 49(468, 47) 240(406, 299) 368(174, 455) 348(468, 409) 148(110, 193) 176(472, 161) 92(76, 115) 12(136, 49) 144(104, 191)  } , COG: ( 274.222, 204.889), avg_dist: 193.369, std_deviation: 70.4933
,  numNodesWithinArea: 0
level: 4, index = 13 { 272(304, 313) 67(208, 53) 331(178, 425) 219(176, 281) 62(198, 63) 306(304, 383) 298(230, 393) 117(362, 137) 233(316, 253) 229(316, 279) 41(416, 45) 213(84, 275) 279(400, 341) 167(366, 195) 99(108, 103) 371(212, 465) 102(184, 141) 6(76, 49)  } , COG: ( 246.556, 233), avg_dist: 160.913, std_deviation: 54.5682
,  numNodesWithinArea: 0
level: 4, index = 14 { 14(198, 23) 257(114, 337) 21(266, 45) 125(494, 123) 301(208, 373) 24(284, 39) 60(118, 79) 328(180, 429) 256(112, 339) 283(432, 343) 63(180, 79) 111(254, 101) 267(298, 307) 230(316, 253) 270(262, 321) 362(118, 469) 201(324, 235) 293(144, 389)  } , COG: ( 239, 238), avg_dist: 170.231, std_deviation: 57.675
,  numNodesWithinArea: 0
level: 4, index = 15 { 93(86, 129) 305(318, 391) 349(474, 419) 281(412, 327) 104(152, 115) 372(230, 491) 44(456, 21) 388(354, 471) 151(168, 169) 47(480, 15) 95(96, 147) 27(290, 19) 98(114, 107) 342(376, 449) 282(412, 317) 46(490, 5) 226(292, 255) 238(356, 287)  } , COG: ( 308.667, 229.667), avg_dist: 201.281, std_deviation: 69.5293
,  numNodesWithinArea: 1
level: 4, index = 16 { 42(426, 7) 30(320, 27) 13(182, 9) 205(362, 201) 17(160, 47) 173(432, 197) 313(14, 413) 337(328, 445) 365(162, 495) 56(52, 67) 120(360, 131) 43(416, 23) 107(226, 123) 91(42, 113) 87(30, 139) 79(304, 99) 258(106, 337) 210(482, 211)  } , COG: ( 244.667, 171.333), avg_dist: 199.678, std_deviation: 74.1491
,  numNodesWithinArea: 1
level: 4, index = 17 { 142(58, 179) 22(296, 3) 325(114, 437) 321(48, 411) 57(98, 91) 277(390, 301) 81(390, 81) 384(314, 489) 36(356, 45) 280(406, 315) 380(258, 487) 387(366, 453) 51(22, 55) 247(20, 333) 11(120, 7) 307(318, 395) 323(66, 419) 118(380, 105)  } , COG: ( 223.333, 255.889), avg_dist: 225.807, std_deviation: 31.9876
,  numNodesWithinArea: 0
level: 4, index = 18 { 334(252, 423) 162(326, 191) 149(108, 185) 261(174, 313) 65(150, 79) 161(314, 185) 373(244, 477) 320(36, 411) 200(306, 217) 188(188, 201) 395(486, 465) 351(496, 409) 187(110, 233) 55(50, 83) 59(76, 53) 239(384, 291) 115(332, 113) 38(438, 47)  } , COG: ( 248.333, 243.111), avg_dist: 182.927, std_deviation: 80.8552
,  numNodesWithinArea: 0
level: 4, index = 19 { 134(2, 173) 338(330, 445) 194(288, 229) 286(494, 343) 86(30, 123) 341(394, 447) 85(492, 95) 169(352, 175) 52(12, 73) 164(330, 161) 260(198, 339) 312(494, 385) 8(98, 33) 84(470, 51) 208(428, 231) 19(218, 25) 135(32, 157) 315(36, 409)  } , COG: ( 261, 216.333), avg_dist: 215.688, std_deviation: 76.1846
,  numNodesWithinArea: 1
level: 4, index = 20 { 35(372, 37) 179(88, 213) 299(220, 377) 202(330, 241) 326(148, 435) 218(106, 289) 350(474, 417) 94(62, 111) 269(286, 321) 357(84, 455) 129(482, 107) 145(108, 187) 289(2, 353) 172(420, 175) 392(436, 491) 399(452, 475) 327(136, 419) 131(26, 159)  } , COG: ( 235.111, 292.333), avg_dist: 203.124, std_deviation: 73.4697
,  numNodesWithinArea: 0
level: 4, index = 21 { 275(300, 315) 295(106, 381) 390(376, 461) 26(262, 39) 382(284, 465) 397(480, 455) 73(266, 97) 361(108, 465) 53(2, 97) 185(144, 241) 209(448, 217) 37(442, 1) 16(180, 1) 64(176, 65) 160(266, 159) 355(94, 479) 223(232, 299) 146(116, 185)  } , COG: ( 237.889, 245.667), avg_dist: 199.85, std_deviation: 79.0053
,  numNodesWithinArea: 1
level: 4, index = 22 { 54(4, 73) 126(456, 141) 222(222, 265) 141(60, 161)  } , COG: ( 185.5, 160), avg_dist: 177.277, std_deviation: 64.1143
,  numNodesWithinArea: 0
level: 4, index = 23 {  } 
level: 5, index = 0 { 34(364, 3) 193(252, 245) 69(202, 83) 88(4, 101) 276(388, 315) 300(214, 373)  } , COG: ( 237.333, 186.667), avg_dist: 171.174, std_deviation: 65.5805
CH ID = 193
,  numNodesWithinArea: 0
level: 5, index = 1 { 108(234, 113) 264(218, 335) 232(336, 271) 383(264, 459) 7(98, 19) 183(120, 245)  } , COG: ( 211.667, 240.333), avg_dist: 152.943, std_deviation: 61.4435
CH ID = 183
,  numNodesWithinArea: 0
level: 5, index = 2 { 39(406, 47) 271(340, 327) 311(496, 353) 170(424, 183) 130(20, 173) 154(226, 181)  } , COG: ( 318.667, 210.667), avg_dist: 173.068, std_deviation: 73.4173
CH ID = 154
,  numNodesWithinArea: 0
level: 5, index = 3 { 253(78, 305) 189(238, 223) 153(242, 153) 353(6, 481) 177(456, 161) 156(248, 159)  } , COG: ( 211.333, 247), avg_dist: 157.691, std_deviation: 96.8426
CH ID = 189
,  numNodesWithinArea: 0
level: 5, index = 4 { 76(276, 75) 356(54, 481) 75(292, 79) 163(312, 165) 123(410, 139) 83(402, 69)  } , COG: ( 291, 168), avg_dist: 144.707, std_deviation: 117.521
CH ID = 163
,  numNodesWithinArea: 1
level: 5, index = 5 { 74(296, 85) 250(64, 345) 158(254, 169) 262(194, 333) 393(444, 451) 197(314, 201)  } , COG: ( 261, 264), avg_dist: 155.133, std_deviation: 68.066
CH ID = 197
,  numNodesWithinArea: 0
level: 5, index = 6 { 377(264, 493) 109(278, 143) 297(182, 389) 204(398, 237) 212(42, 267) 255(58, 321)  } , COG: ( 203.667, 308.333), avg_dist: 163.195, std_deviation: 40.5413
CH ID = 297
,  numNodesWithinArea: 0
level: 5, index = 7 { 15(172, 13) 235(322, 283) 363(120, 485) 343(382, 427) 243(408, 277) 394(442, 475)  } , COG: ( 307.667, 326.667), avg_dist: 178.364, std_deviation: 97.0252
CH ID = 235
,  numNodesWithinArea: 0
level: 5, index = 8 { 66(156, 83) 114(304, 143) 70(264, 79) 322(56, 409) 234(300, 277) 241(404, 285)  } , COG: ( 247.333, 212.667), avg_dist: 152.159, std_deviation: 63.6325
CH ID = 234
,  numNodesWithinArea: 0
level: 5, index = 9 { 33(312, 45) 265(226, 347) 221(206, 295) 273(318, 305) 101(176, 125) 121(390, 137)  } , COG: ( 271.333, 209), avg_dist: 132.471, std_deviation: 21.7004
CH ID = 273
,  numNodesWithinArea: 0
level: 5, index = 10 { 184(124, 211) 100(132, 147) 292(106, 399) 296(186, 393) 308(320, 381) 316(32, 427)  } , COG: ( 150, 326.333), avg_dist: 132.143, std_deviation: 42.022
CH ID = 296
,  numNodesWithinArea: 0
level: 5, index = 11 { 4(80, 43) 103(182, 101) 375(208, 457) 378(260, 455) 186(120, 249) 110(260, 113)  } , COG: ( 185, 236.333), avg_dist: 169.829, std_deviation: 59.9435
CH ID = 186
,  numNodesWithinArea: 0
level: 5, index = 12 { 358(50, 485) 122(440, 141) 157(296, 159) 249(12, 327) 89(6, 125) 9(96, 45)  } , COG: ( 150, 213.667), avg_dist: 211.47, std_deviation: 58.9344
CH ID = 157
,  numNodesWithinArea: 0
level: 5, index = 13 { 288(0, 355) 324(56, 413) 224(276, 257) 72(274, 99) 192(266, 235) 287(458, 329)  } , COG: ( 221.667, 281.333), avg_dist: 166.609, std_deviation: 75.895
CH ID = 224
,  numNodesWithinArea: 0
level: 5, index = 14 { 227(256, 281) 171(444, 163) 347(404, 411) 330(192, 411) 206(424, 241) 294(122, 361)  } , COG: ( 307, 311.333), avg_dist: 146.763, std_deviation: 46.3406
CH ID = 227
,  numNodesWithinArea: 0
level: 5, index = 15 { 2(24, 21) 50(34, 57) 113(330, 103) 77(306, 81) 97(82, 107) 268(250, 323)  } , COG: ( 171, 115.333), avg_dist: 155.653, std_deviation: 39.805
CH ID = 97
,  numNodesWithinArea: 0
level: 5, index = 16 { 147(106, 185) 199(346, 215) 259(188, 331) 379(268, 459) 374(232, 473) 178(10, 221)  } , COG: ( 191.667, 314), avg_dist: 147.932, std_deviation: 60.5674
CH ID = 259
,  numNodesWithinArea: 1
level: 5, index = 17 { 290(86, 393) 138(80, 189) 58(92, 99) 25(252, 7) 284(434, 323) 207(446, 249)  } , COG: ( 231.667, 210), avg_dist: 203.172, std_deviation: 29.144
CH ID = 138
,  numNodesWithinArea: 0
level: 5, index = 18 { 319(38, 443) 139(62, 191) 339(348, 405) 391(438, 453) 303(260, 369) 175(494, 187)  } , COG: ( 273.333, 341.333), avg_dist: 185.464, std_deviation: 90.6167
CH ID = 303
,  numNodesWithinArea: 1
level: 5, index = 19 { 398(498, 491) 370(224, 487) 314(8, 445) 166(356, 155) 78(318, 61) 174(432, 181)  } , COG: ( 306, 303.333), avg_dist: 229.061, std_deviation: 58.8993
CH ID = 166
,  numNodesWithinArea: 0
level: 5, index = 20 { 329(154, 419) 309(408, 363) 5(86, 33) 236(322, 253) 28(324, 39) 244(400, 253)  } , COG: ( 282.333, 226.667), avg_dist: 175.473, std_deviation: 74.0613
CH ID = 236
,  numNodesWithinArea: 0
level: 5, index = 21 { 0(34, 45) 251(64, 321) 291(52, 395) 354(42, 471) 61(112, 63) 369(210, 477)  } , COG: ( 85.6667, 295.333), avg_dist: 171.562, std_deviation: 78.3473
CH ID = 251
,  numNodesWithinArea: 0
level: 5, index = 22 { 285(476, 323) 105(150, 117) 68(208, 65) 48(484, 7) 215(54, 283) 266(224, 319)  } , COG: ( 266, 185.667), avg_dist: 195.755, std_deviation: 61.2928
CH ID = 68
,  numNodesWithinArea: 0
level: 5, index = 23 { 182(82, 219) 198(320, 245) 246(470, 273) 389(396, 495) 181(80, 217) 29(340, 11)  } , COG: ( 281.333, 243.333), avg_dist: 191.622, std_deviation: 74.2949
CH ID = 198
,  numNodesWithinArea: 0
level: 5, index = 24 { 381(276, 485) 96(98, 117) 228(336, 269) 80(392, 91) 216(98, 265) 332(194, 431)  } , COG: ( 232.333, 276.333), avg_dist: 177.383, std_deviation: 48.8187
CH ID = 228
,  numNodesWithinArea: 0
level: 5, index = 25 { 32(318, 17) 360(78, 471) 20(222, 27) 364(142, 497) 119(372, 133) 143(130, 151)  } , COG: ( 210.333, 216), avg_dist: 212.861, std_deviation: 64.6307
CH ID = 143
,  numNodesWithinArea: 0
level: 5, index = 26 { 359(60, 459) 310(420, 387) 254(58, 345) 346(434, 423) 318(32, 415) 242(448, 251)  } , COG: ( 242, 380), avg_dist: 202.759, std_deviation: 20.9243
CH ID = 310
,  numNodesWithinArea: 0
level: 5, index = 27 { 133(18, 175) 245(454, 289) 116(306, 145) 136(66, 185) 196(260, 205) 195(270, 209)  } , COG: ( 229, 201.333), avg_dist: 131.044, std_deviation: 80.7699
CH ID = 196
,  numNodesWithinArea: 1
level: 5, index = 28 { 191(256, 249) 203(384, 239) 367(170, 461) 159(292, 159) 155(224, 177) 366(160, 493)  } , COG: ( 247.667, 296.333), avg_dist: 143.219, std_deviation: 52.0426
CH ID = 191
,  numNodesWithinArea: 0
level: 5, index = 29 { 302(294, 389) 10(148, 21) 165(300, 163) 385(330, 481) 137(80, 181) 317(22, 423)  } , COG: ( 195.667, 276.333), avg_dist: 197.558, std_deviation: 47.3579
CH ID = 302
,  numNodesWithinArea: 0
level: 5, index = 30 { 112(296, 135) 124(482, 131) 252(86, 303) 340(392, 449) 71(268, 91) 211(490, 201)  } , COG: ( 335.667, 218.333), avg_dist: 177.214, std_deviation: 57.6254
CH ID = 112
,  numNodesWithinArea: 0
level: 5, index = 31 { 3(38, 5) 263(236, 321) 278(438, 337) 214(52, 269) 90(34, 117) 106(208, 145)  } , COG: ( 167.667, 199), avg_dist: 172.685, std_deviation: 75.9587
CH ID = 106
,  numNodesWithinArea: 0
level: 5, index = 32 { 18(200, 49) 1(36, 15) 333(288, 441) 128(486, 117) 140(52, 167) 180(96, 213)  } , COG: ( 193, 167), avg_dist: 195.387, std_deviation: 78.0222
CH ID = 180
,  numNodesWithinArea: 0
level: 5, index = 33 { 248(30, 331) 304(266, 397) 336(254, 449) 344(402, 429) 231(318, 299) 23(292, 33)  } , COG: ( 260.333, 323), avg_dist: 160.328, std_deviation: 82.2814
CH ID = 231
,  numNodesWithinArea: 0
level: 5, index = 34 { 127(450, 113) 190(286, 241) 386(356, 497) 237(394, 255) 225(290, 279) 40(428, 25)  } , COG: ( 367.333, 235), avg_dist: 138.677, std_deviation: 80.1674
CH ID = 237
,  numNodesWithinArea: 0
level: 5, index = 35 { 396(464, 475) 376(238, 451) 352(42, 455) 335(254, 441) 31(342, 5) 274(328, 333)  } , COG: ( 278, 360), avg_dist: 179.086, std_deviation: 108.382
CH ID = 274
,  numNodesWithinArea: 0
level: 5, index = 36 { 217(110, 263) 45(490, 21) 152(226, 151) 220(230, 255) 168(394, 179) 132(6, 183)  } , COG: ( 242.667, 175.333), avg_dist: 158.147, std_deviation: 88.1083
CH ID = 152
,  numNodesWithinArea: 1
level: 5, index = 37 { 82(432, 91) 150(188, 195) 345(446, 431) 49(468, 47) 240(406, 299) 368(174, 455)  } , COG: ( 352.333, 253), avg_dist: 188.721, std_deviation: 62.1028
CH ID = 240
,  numNodesWithinArea: 0
level: 5, index = 38 { 348(468, 409) 148(110, 193) 176(472, 161) 92(76, 115) 12(136, 49) 144(104, 191)  } , COG: ( 227.667, 186.333), avg_dist: 191.267, std_deviation: 73.8718
CH ID = 148
,  numNodesWithinArea: 0
level: 5, index = 39 { 272(304, 313) 67(208, 53) 331(178, 425) 219(176, 281) 62(198, 63) 306(304, 383)  } , COG: ( 228, 253), avg_dist: 146.491, std_deviation: 52.0678
CH ID = 219
,  numNodesWithinArea: 0
level: 5, index = 40 { 298(230, 393) 117(362, 137) 233(316, 253) 229(316, 279) 41(416, 45) 213(84, 275)  } , COG: ( 287.333, 230.333), avg_dist: 136.471, std_deviation: 71.9449
CH ID = 233
,  numNodesWithinArea: 0
level: 5, index = 41 { 279(400, 341) 167(366, 195) 99(108, 103) 371(212, 465) 102(184, 141) 6(76, 49)  } , COG: ( 224.333, 215.667), avg_dist: 179.754, std_deviation: 55.8611
CH ID = 102
,  numNodesWithinArea: 0
level: 5, index = 42 { 14(198, 23) 257(114, 337) 21(266, 45) 125(494, 123) 301(208, 373) 24(284, 39)  } , COG: ( 260.667, 156.667), avg_dist: 178.371, std_deviation: 53.1774
CH ID = 21
,  numNodesWithinArea: 0
level: 5, index = 43 { 60(118, 79) 328(180, 429) 256(112, 339) 283(432, 343) 63(180, 79) 111(254, 101)  } , COG: ( 212.667, 228.333), avg_dist: 177.326, std_deviation: 38.4157
CH ID = 111
,  numNodesWithinArea: 0
level: 5, index = 44 { 267(298, 307) 230(316, 253) 270(262, 321) 362(118, 469) 201(324, 235) 293(144, 389)  } , COG: ( 243.667, 329), avg_dist: 101.942, std_deviation: 52.7671
CH ID = 270
,  numNodesWithinArea: 1
level: 5, index = 45 { 93(86, 129) 305(318, 391) 349(474, 419) 281(412, 327) 104(152, 115) 372(230, 491)  } , COG: ( 278.667, 312), avg_dist: 188.429, std_deviation: 60.8743
CH ID = 305
,  numNodesWithinArea: 0
level: 5, index = 46 { 44(456, 21) 388(354, 471) 151(168, 169) 47(480, 15) 95(96, 147) 27(290, 19)  } , COG: ( 307.333, 140.333), avg_dist: 202.366, std_deviation: 67.8666
CH ID = 27
,  numNodesWithinArea: 0
level: 5, index = 47 { 98(114, 107) 342(376, 449) 282(412, 317) 46(490, 5) 226(292, 255) 238(356, 287)  } , COG: ( 340, 236.667), avg_dist: 160.664, std_deviation: 93.6576
CH ID = 226
,  numNodesWithinArea: 0
level: 5, index = 48 { 42(426, 7) 30(320, 27) 13(182, 9) 205(362, 201) 17(160, 47) 173(432, 197)  } , COG: ( 313.667, 81.3333), avg_dist: 131.936, std_deviation: 36.7236
CH ID = 30
,  numNodesWithinArea: 0
level: 5, index = 49 { 313(14, 413) 337(328, 445) 365(162, 495) 56(52, 67) 120(360, 131) 43(416, 23)  } , COG: ( 222, 262.333), avg_dist: 244.308, std_deviation: 37.5195
CH ID = 120
,  numNodesWithinArea: 0
level: 5, index = 50 { 107(226, 123) 91(42, 113) 87(30, 139) 79(304, 99) 258(106, 337) 210(482, 211)  } , COG: ( 198.333, 170.333), avg_dist: 166.193, std_deviation: 69.5321
CH ID = 107
,  numNodesWithinArea: 0
level: 5, index = 51 { 142(58, 179) 22(296, 3) 325(114, 437) 321(48, 411) 57(98, 91) 277(390, 301)  } , COG: ( 167.333, 237), avg_dist: 200.349, std_deviation: 46.4605
CH ID = 142
,  numNodesWithinArea: 0
level: 5, index = 52 { 81(390, 81) 384(314, 489) 36(356, 45) 280(406, 315) 380(258, 487) 387(366, 453)  } , COG: ( 348.333, 311.667), avg_dist: 179.872, std_deviation: 67.2558
CH ID = 280
,  numNodesWithinArea: 0
level: 5, index = 53 { 51(22, 55) 247(20, 333) 11(120, 7) 307(318, 395) 323(66, 419) 118(380, 105)  } , COG: ( 154.333, 219), avg_dist: 218.914, std_deviation: 24.218
CH ID = 247
,  numNodesWithinArea: 0
level: 5, index = 54 { 334(252, 423) 162(326, 191) 149(108, 185) 261(174, 313) 65(150, 79) 161(314, 185)  } , COG: ( 220.667, 229.333), avg_dist: 132.432, std_deviation: 36.3559
CH ID = 261
,  numNodesWithinArea: 0
level: 5, index = 55 { 373(244, 477) 320(36, 411) 200(306, 217) 188(188, 201) 395(486, 465) 351(496, 409)  } , COG: ( 292.667, 363.333), avg_dist: 191.938, std_deviation: 45.5343
CH ID = 373
,  numNodesWithinArea: 0
level: 5, index = 56 { 187(110, 233) 55(50, 83) 59(76, 53) 239(384, 291) 115(332, 113) 38(438, 47)  } , COG: ( 231.667, 136.667), avg_dist: 177.709, std_deviation: 40.7843
CH ID = 115
,  numNodesWithinArea: 0
level: 5, index = 57 { 134(2, 173) 338(330, 445) 194(288, 229) 286(494, 343) 86(30, 123) 341(394, 447)  } , COG: ( 256.333, 293.333), avg_dist: 209.01, std_deviation: 73.4656
CH ID = 194
,  numNodesWithinArea: 0
level: 5, index = 58 { 85(492, 95) 169(352, 175) 52(12, 73) 164(330, 161) 260(198, 339) 312(494, 385)  } , COG: ( 313, 204.667), avg_dist: 177.776, std_deviation: 102.897
CH ID = 164
,  numNodesWithinArea: 0
level: 5, index = 59 { 8(98, 33) 84(470, 51) 208(428, 231) 19(218, 25) 135(32, 157) 315(36, 409)  } , COG: ( 213.667, 151), avg_dist: 215.043, std_deviation: 64.486
CH ID = 19
,  numNodesWithinArea: 0
level: 5, index = 60 { 35(372, 37) 179(88, 213) 299(220, 377) 202(330, 241) 326(148, 435) 218(106, 289)  } , COG: ( 210.667, 265.333), avg_dist: 155.828, std_deviation: 60.3805
CH ID = 218
,  numNodesWithinArea: 0
level: 5, index = 61 { 350(474, 417) 94(62, 111) 269(286, 321) 357(84, 455) 129(482, 107) 145(108, 187)  } , COG: ( 249.333, 266.333), avg_dist: 212.437, std_deviation: 76.02
CH ID = 269
,  numNodesWithinArea: 0
level: 5, index = 62 { 289(2, 353) 172(420, 175) 392(436, 491) 399(452, 475) 327(136, 419) 131(26, 159)  } , COG: ( 245.333, 345.333), avg_dist: 231.83, std_deviation: 47.657
CH ID = 327
,  numNodesWithinArea: 0
level: 5, index = 63 { 275(300, 315) 295(106, 381) 390(376, 461) 26(262, 39) 382(284, 465) 397(480, 455)  } , COG: ( 301.333, 352.667), avg_dist: 167.054, std_deviation: 87.0771
CH ID = 275
,  numNodesWithinArea: 0
level: 5, index = 64 { 73(266, 97) 361(108, 465) 53(2, 97) 185(144, 241) 209(448, 217) 37(442, 1)  } , COG: ( 235, 186.333), avg_dist: 208.256, std_deviation: 81.1862
CH ID = 73
,  numNodesWithinArea: 0
level: 5, index = 65 { 16(180, 1) 64(176, 65) 160(266, 159) 355(94, 479) 223(232, 299) 146(116, 185)  } , COG: ( 177.333, 198), avg_dist: 149.588, std_deviation: 76.0002
CH ID = 146
,  numNodesWithinArea: 0
level: 5, index = 66 { 54(4, 73) 126(456, 141) 222(222, 265) 141(60, 161)  } , COG: ( 185.5, 160), avg_dist: 177.277, std_deviation: 64.1143
CH ID = 222
,  numNodesWithinArea: 0
level: 5, index = 67 {  } 
level: 5, index = 68 {  } 
level: 5, index = 69 {  } 
level: 5, index = 70 {  } 
level: 5, index = 71 {  } 
