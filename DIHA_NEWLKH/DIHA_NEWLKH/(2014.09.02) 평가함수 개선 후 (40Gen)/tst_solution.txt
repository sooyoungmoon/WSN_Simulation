level: 1, index = 0 { 18(300, 315) 164(438, 47) 258(438, 453) 233(154, 419) 20(322, 283) 5(362, 201) 30(238, 451) 282(212, 465) 219(56, 413) 144(36, 411) 187(292, 33) 98(210, 477) 293(54, 481) 72(330, 161) 43(356, 497) 34(402, 69) 48(106, 289) 146(432, 91) 84(426, 7) 156(208, 145) 232(42, 113) 186(242, 153) 90(318, 305) 231(476, 323) 149(182, 9) 260(406, 47) 53(266, 97) 19(456, 21) 199(96, 213) 216(318, 299) 63(474, 419) 166(306, 217) 94(4, 73) 196(12, 327) 223(390, 81) 100(104, 191) 87(396, 495) 176(22, 423) 0(448, 217) 120(330, 481) 7(86, 129) 9(266, 159) 252(226, 347) 207(286, 241) 228(316, 279) 40(106, 399) 256(404, 411) 28(446, 249) 181(290, 279) 284(238, 223) 6(330, 445) 96(336, 269) 212(410, 139) 86(312, 45) 36(36, 15) 270(6, 481) 11(98, 19) 21(394, 447) 128(438, 337) 255(482, 131) 201(94, 479) 1(388, 315) 280(24, 21) 81(452, 475) 14(348, 405) 225(52, 395) 121(58, 179) 47(160, 493) 35(480, 15) 263(262, 321) 23(494, 343) 33(80, 181) 41(178, 425) 257(392, 449) 60(446, 431) 222(208, 373) 50(432, 181) 45(266, 397) 114(6, 183) 75(278, 143) 31(182, 389) 42(208, 457) 107(366, 453) 245(470, 273) 51(86, 33) 17(268, 459) 163(260, 113) 226(244, 477) 239(262, 39) 10(106, 337) 213(194, 431) 130(108, 103) 218(12, 73) 211(250, 323) 80(316, 253) 106(328, 333) 299(468, 47) 208(416, 23) 134(340, 11) 191(64, 321) 220(304, 383) 165(188, 331) 168(318, 395) 44(120, 485) 99(254, 441) 240(14, 413) 157(296, 159) 279(288, 441) 230(42, 455) 152(318, 391) 54(220, 377) 62(114, 437) 210(436, 491) 138(120, 249) 190(0, 355) 221(62, 191) 71(298, 307) 237(86, 393) 206(444, 163) 251(482, 211) 104(108, 465) 290(144, 241) 13(264, 493) 200(218, 25) 110(226, 181) 117(180, 429) 253(176, 125) 264(34, 117) 135(490, 21) 93(84, 455) 70(18, 175) 158(332, 113) 289(76, 53) 127(458, 329) 25(188, 201) 294(420, 175) 103(188, 195) 151(162, 495) 179(484, 7) 12(38, 443) 112(236, 321) 16(306, 81) 136(30, 331) 119(394, 255) 2(432, 197) 148(32, 427) 177(150, 117) 57(480, 455) 29(292, 255) 49(494, 385) 141(294, 389)  } , COG: ( 251.947, 274.351), avg_dist: 199.216, std_deviation: 77.4652
,  numNodesWithinArea: 69
level: 1, index = 1 { 271(98, 117) 92(32, 415) 276(30, 139) 295(156, 83) 183(62, 111) 265(80, 189) 261(198, 23) 101(60, 161) 184(130, 151) 39(96, 147) 55(284, 39) 140(400, 341) 292(108, 187) 118(148, 21) 173(258, 487) 58(110, 233) 73(268, 91) 88(30, 123) 132(320, 381) 175(260, 205) 95(170, 461) 123(254, 101) 46(230, 491) 189(184, 141) 116(20, 333) 113(494, 187) 194(342, 5) 250(304, 143) 274(230, 393) 298(136, 419) 67(56, 409) 56(314, 489) 161(180, 1) 38(324, 39) 155(58, 321) 143(356, 287) 109(360, 131) 4(108, 185) 124(218, 335) 69(492, 95) 122(248, 159) 105(98, 265) 188(222, 27) 246(232, 299) 203(86, 303) 275(150, 79) 241(66, 185) 182(206, 295) 77(472, 161) 193(470, 51) 197(380, 105) 162(136, 49) 97(456, 161) 76(226, 123) 145(92, 99) 111(474, 417) 247(76, 49) 79(376, 461) 129(98, 91) 27(174, 455) 91(354, 471) 150(420, 387) 22(442, 475) 192(300, 163) 215(176, 281) 24(402, 429) 202(34, 57) 174(330, 241) 159(58, 345) 286(318, 17) 266(230, 255) 125(376, 449) 3(286, 321) 61(84, 275) 249(254, 169) 133(454, 289) 288(314, 185) 236(424, 241) 65(172, 13) 137(174, 313) 287(356, 155) 254(404, 285) 291(490, 201) 26(208, 65) 115(290, 19) 238(232, 473) 262(306, 145) 242(400, 253) 102(328, 445) 172(118, 79) 74(330, 103) 248(412, 327) 85(372, 37) 37(276, 75) 205(260, 455) 8(416, 45) 59(252, 7) 224(312, 165) 267(496, 409) 243(482, 107) 198(222, 265) 82(408, 363) 160(304, 99) 227(366, 195) 66(26, 159) 204(440, 141) 64(318, 61) 142(444, 451) 78(324, 235) 235(456, 141) 170(114, 107) 209(292, 79) 195(64, 345) 273(52, 167) 180(406, 315) 269(50, 83) 234(32, 157) 281(78, 471) 52(442, 1) 15(494, 123) 171(394, 179) 108(6, 125) 154(132, 147) 68(110, 263) 89(292, 159) 285(54, 283) 83(296, 135) 296(116, 185) 169(356, 45) 277(498, 491) 32(316, 253) 153(182, 101) 229(192, 411) 126(214, 373) 167(252, 423) 283(468, 409) 131(176, 65) 214(304, 313) 272(48, 411) 185(296, 85) 268(10, 221) 244(428, 231) 147(88, 213) 259(80, 217) 297(390, 137) 139(266, 235) 278(340, 327) 178(124, 211) 217(260, 369)  } , COG: ( 248.711, 219.094), avg_dist: 185.93, std_deviation: 67.9624
,  numNodesWithinArea: 82
level: 2, index = 0 { 18(300, 315) 164(438, 47) 258(438, 453) 233(154, 419) 20(322, 283) 5(362, 201) 30(238, 451) 282(212, 465) 219(56, 413) 144(36, 411) 187(292, 33) 98(210, 477) 293(54, 481) 72(330, 161) 43(356, 497) 34(402, 69) 48(106, 289) 146(432, 91) 84(426, 7) 156(208, 145) 232(42, 113) 186(242, 153) 90(318, 305) 231(476, 323) 149(182, 9) 260(406, 47) 53(266, 97) 19(456, 21) 199(96, 213) 216(318, 299) 63(474, 419) 166(306, 217) 94(4, 73) 196(12, 327) 223(390, 81) 100(104, 191) 87(396, 495) 176(22, 423) 0(448, 217) 120(330, 481) 7(86, 129) 9(266, 159) 252(226, 347) 207(286, 241) 228(316, 279) 40(106, 399) 256(404, 411) 28(446, 249) 181(290, 279) 284(238, 223) 6(330, 445) 96(336, 269) 212(410, 139) 86(312, 45) 36(36, 15) 270(6, 481) 11(98, 19) 21(394, 447) 128(438, 337) 255(482, 131) 201(94, 479) 1(388, 315) 280(24, 21) 81(452, 475) 14(348, 405) 225(52, 395) 121(58, 179) 47(160, 493) 35(480, 15) 263(262, 321) 23(494, 343) 33(80, 181) 41(178, 425) 257(392, 449) 60(446, 431) 222(208, 373) 50(432, 181) 45(266, 397) 114(6, 183) 75(278, 143)  } , COG: ( 265.8, 268.25), avg_dist: 199.956, std_deviation: 81.8509
,  numNodesWithinArea: 21
level: 2, index = 1 { 31(182, 389) 42(208, 457) 107(366, 453) 245(470, 273) 51(86, 33) 17(268, 459) 163(260, 113) 226(244, 477) 239(262, 39) 10(106, 337) 213(194, 431) 130(108, 103) 218(12, 73) 211(250, 323) 80(316, 253) 106(328, 333) 299(468, 47) 208(416, 23) 134(340, 11) 191(64, 321) 220(304, 383) 165(188, 331) 168(318, 395) 44(120, 485) 99(254, 441) 240(14, 413) 157(296, 159) 279(288, 441) 230(42, 455) 152(318, 391) 54(220, 377) 62(114, 437) 210(436, 491) 138(120, 249) 190(0, 355) 221(62, 191) 71(298, 307) 237(86, 393) 206(444, 163) 251(482, 211) 104(108, 465) 290(144, 241) 13(264, 493) 200(218, 25) 110(226, 181) 117(180, 429) 253(176, 125) 264(34, 117) 135(490, 21) 93(84, 455) 70(18, 175) 158(332, 113) 289(76, 53) 127(458, 329) 25(188, 201) 294(420, 175) 103(188, 195) 151(162, 495) 179(484, 7) 12(38, 443) 112(236, 321) 16(306, 81) 136(30, 331) 119(394, 255) 2(432, 197) 148(32, 427) 177(150, 117) 57(480, 455) 29(292, 255) 49(494, 385) 141(294, 389)  } , COG: ( 236.338, 281.225), avg_dist: 195.628, std_deviation: 75.8178
,  numNodesWithinArea: 19
level: 2, index = 2 { 271(98, 117) 92(32, 415) 276(30, 139) 295(156, 83) 183(62, 111) 265(80, 189) 261(198, 23) 101(60, 161) 184(130, 151) 39(96, 147) 55(284, 39) 140(400, 341) 292(108, 187) 118(148, 21) 173(258, 487) 58(110, 233) 73(268, 91) 88(30, 123) 132(320, 381) 175(260, 205) 95(170, 461) 123(254, 101) 46(230, 491) 189(184, 141) 116(20, 333) 113(494, 187) 194(342, 5) 250(304, 143) 274(230, 393) 298(136, 419) 67(56, 409) 56(314, 489) 161(180, 1) 38(324, 39) 155(58, 321) 143(356, 287) 109(360, 131) 4(108, 185) 124(218, 335) 69(492, 95) 122(248, 159) 105(98, 265) 188(222, 27) 246(232, 299) 203(86, 303) 275(150, 79) 241(66, 185) 182(206, 295) 77(472, 161) 193(470, 51) 197(380, 105) 162(136, 49) 97(456, 161) 76(226, 123) 145(92, 99) 111(474, 417) 247(76, 49) 79(376, 461) 129(98, 91) 27(174, 455) 91(354, 471) 150(420, 387) 22(442, 475) 192(300, 163) 215(176, 281) 24(402, 429) 202(34, 57) 174(330, 241) 159(58, 345) 286(318, 17) 266(230, 255) 125(376, 449) 3(286, 321) 61(84, 275) 249(254, 169) 133(454, 289) 288(314, 185) 236(424, 241) 65(172, 13) 137(174, 313)  } , COG: ( 228.725, 222.75), avg_dist: 185.384, std_deviation: 69.3146
,  numNodesWithinArea: 23
level: 2, index = 3 { 287(356, 155) 254(404, 285) 291(490, 201) 26(208, 65) 115(290, 19) 238(232, 473) 262(306, 145) 242(400, 253) 102(328, 445) 172(118, 79) 74(330, 103) 248(412, 327) 85(372, 37) 37(276, 75) 205(260, 455) 8(416, 45) 59(252, 7) 224(312, 165) 267(496, 409) 243(482, 107) 198(222, 265) 82(408, 363) 160(304, 99) 227(366, 195) 66(26, 159) 204(440, 141) 64(318, 61) 142(444, 451) 78(324, 235) 235(456, 141) 170(114, 107) 209(292, 79) 195(64, 345) 273(52, 167) 180(406, 315) 269(50, 83) 234(32, 157) 281(78, 471) 52(442, 1) 15(494, 123) 171(394, 179) 108(6, 125) 154(132, 147) 68(110, 263) 89(292, 159) 285(54, 283) 83(296, 135) 296(116, 185) 169(356, 45) 277(498, 491) 32(316, 253) 153(182, 101) 229(192, 411) 126(214, 373) 167(252, 423) 283(468, 409) 131(176, 65) 214(304, 313) 272(48, 411) 185(296, 85) 268(10, 221) 244(428, 231) 147(88, 213) 259(80, 217) 297(390, 137) 139(266, 235) 278(340, 327) 178(124, 211) 217(260, 369)  } , COG: ( 271.884, 214.855), avg_dist: 182.32, std_deviation: 70.2492
,  numNodesWithinArea: 19
level: 3, index = 0 { 18(300, 315) 164(438, 47) 258(438, 453) 233(154, 419) 20(322, 283) 5(362, 201) 30(238, 451) 282(212, 465) 219(56, 413) 144(36, 411) 187(292, 33) 98(210, 477) 293(54, 481) 72(330, 161) 43(356, 497) 34(402, 69) 48(106, 289) 146(432, 91) 84(426, 7) 156(208, 145) 232(42, 113) 186(242, 153) 90(318, 305) 231(476, 323) 149(182, 9) 260(406, 47) 53(266, 97) 19(456, 21) 199(96, 213) 216(318, 299) 63(474, 419) 166(306, 217) 94(4, 73) 196(12, 327) 223(390, 81) 100(104, 191) 87(396, 495) 176(22, 423) 0(448, 217) 120(330, 481)  } , COG: ( 266.5, 255.3), avg_dist: 206.622, std_deviation: 75.9959
,  numNodesWithinArea: 5
level: 3, index = 1 { 7(86, 129) 9(266, 159) 252(226, 347) 207(286, 241) 228(316, 279) 40(106, 399) 256(404, 411) 28(446, 249) 181(290, 279) 284(238, 223) 6(330, 445) 96(336, 269) 212(410, 139) 86(312, 45) 36(36, 15) 270(6, 481) 11(98, 19) 21(394, 447) 128(438, 337) 255(482, 131) 201(94, 479) 1(388, 315) 280(24, 21) 81(452, 475) 14(348, 405) 225(52, 395) 121(58, 179) 47(160, 493) 35(480, 15) 263(262, 321) 23(494, 343) 33(80, 181) 41(178, 425) 257(392, 449) 60(446, 431) 222(208, 373) 50(432, 181) 45(266, 397) 114(6, 183) 75(278, 143)  } , COG: ( 265.1, 281.2), avg_dist: 191.906, std_deviation: 87.931
,  numNodesWithinArea: 7
level: 3, index = 2 { 31(182, 389) 42(208, 457) 107(366, 453) 245(470, 273) 51(86, 33) 17(268, 459) 163(260, 113) 226(244, 477) 239(262, 39) 10(106, 337) 213(194, 431) 130(108, 103) 218(12, 73) 211(250, 323) 80(316, 253) 106(328, 333) 299(468, 47) 208(416, 23) 134(340, 11) 191(64, 321) 220(304, 383) 165(188, 331) 168(318, 395) 44(120, 485) 99(254, 441) 240(14, 413) 157(296, 159) 279(288, 441) 230(42, 455) 152(318, 391) 54(220, 377) 62(114, 437) 210(436, 491) 138(120, 249) 190(0, 355) 221(62, 191) 71(298, 307) 237(86, 393) 206(444, 163) 251(482, 211)  } , COG: ( 233.8, 300.4), avg_dist: 185.719, std_deviation: 79.7331
,  numNodesWithinArea: 6
level: 3, index = 3 { 104(108, 465) 290(144, 241) 13(264, 493) 200(218, 25) 110(226, 181) 117(180, 429) 253(176, 125) 264(34, 117) 135(490, 21) 93(84, 455) 70(18, 175) 158(332, 113) 289(76, 53) 127(458, 329) 25(188, 201) 294(420, 175) 103(188, 195) 151(162, 495) 179(484, 7) 12(38, 443) 112(236, 321) 16(306, 81) 136(30, 331) 119(394, 255) 2(432, 197) 148(32, 427) 177(150, 117) 57(480, 455) 29(292, 255) 49(494, 385) 141(294, 389)  } , COG: ( 239.613, 256.484), avg_dist: 201.531, std_deviation: 79.9287
,  numNodesWithinArea: 6
level: 3, index = 4 { 271(98, 117) 92(32, 415) 276(30, 139) 295(156, 83) 183(62, 111) 265(80, 189) 261(198, 23) 101(60, 161) 184(130, 151) 39(96, 147) 55(284, 39) 140(400, 341) 292(108, 187) 118(148, 21) 173(258, 487) 58(110, 233) 73(268, 91) 88(30, 123) 132(320, 381) 175(260, 205) 95(170, 461) 123(254, 101) 46(230, 491) 189(184, 141) 116(20, 333) 113(494, 187) 194(342, 5) 250(304, 143) 274(230, 393) 298(136, 419) 67(56, 409) 56(314, 489) 161(180, 1) 38(324, 39) 155(58, 321) 143(356, 287) 109(360, 131) 4(108, 185) 124(218, 335) 69(492, 95)  } , COG: ( 198.95, 215.25), avg_dist: 183.13, std_deviation: 65.2602
,  numNodesWithinArea: 6
level: 3, index = 5 { 122(248, 159) 105(98, 265) 188(222, 27) 246(232, 299) 203(86, 303) 275(150, 79) 241(66, 185) 182(206, 295) 77(472, 161) 193(470, 51) 197(380, 105) 162(136, 49) 97(456, 161) 76(226, 123) 145(92, 99) 111(474, 417) 247(76, 49) 79(376, 461) 129(98, 91) 27(174, 455) 91(354, 471) 150(420, 387) 22(442, 475) 192(300, 163) 215(176, 281) 24(402, 429) 202(34, 57) 174(330, 241) 159(58, 345) 286(318, 17) 266(230, 255) 125(376, 449) 3(286, 321) 61(84, 275) 249(254, 169) 133(454, 289) 288(314, 185) 236(424, 241) 65(172, 13) 137(174, 313)  } , COG: ( 258.5, 230.25), avg_dist: 182.213, std_deviation: 73.8957
,  numNodesWithinArea: 10
level: 3, index = 6 { 287(356, 155) 254(404, 285) 291(490, 201) 26(208, 65) 115(290, 19) 238(232, 473) 262(306, 145) 242(400, 253) 102(328, 445) 172(118, 79) 74(330, 103) 248(412, 327) 85(372, 37) 37(276, 75) 205(260, 455) 8(416, 45) 59(252, 7) 224(312, 165) 267(496, 409) 243(482, 107) 198(222, 265) 82(408, 363) 160(304, 99) 227(366, 195) 66(26, 159) 204(440, 141) 64(318, 61) 142(444, 451) 78(324, 235) 235(456, 141) 170(114, 107) 209(292, 79) 195(64, 345) 273(52, 167) 180(406, 315) 269(50, 83) 234(32, 157) 281(78, 471) 52(442, 1) 15(494, 123)  } , COG: ( 301.8, 195.2), avg_dist: 181.808, std_deviation: 78.8497
,  numNodesWithinArea: 7
level: 3, index = 7 { 171(394, 179) 108(6, 125) 154(132, 147) 68(110, 263) 89(292, 159) 285(54, 283) 83(296, 135) 296(116, 185) 169(356, 45) 277(498, 491) 32(316, 253) 153(182, 101) 229(192, 411) 126(214, 373) 167(252, 423) 283(468, 409) 131(176, 65) 214(304, 313) 272(48, 411) 185(296, 85) 268(10, 221) 244(428, 231) 147(88, 213) 259(80, 217) 297(390, 137) 139(266, 235) 278(340, 327) 178(124, 211) 217(260, 369)  } , COG: ( 230.621, 241.966), avg_dist: 167.871, std_deviation: 65.4085
,  numNodesWithinArea: 2
level: 4, index = 0 { 18(300, 315) 164(438, 47) 258(438, 453) 233(154, 419) 20(322, 283) 5(362, 201) 30(238, 451) 282(212, 465) 219(56, 413) 144(36, 411) 187(292, 33) 98(210, 477) 293(54, 481) 72(330, 161) 43(356, 497) 34(402, 69) 48(106, 289) 146(432, 91) 84(426, 7) 156(208, 145)  } , COG: ( 268.6, 285.4), avg_dist: 202.684, std_deviation: 73.8332
,  numNodesWithinArea: 2
level: 4, index = 1 { 232(42, 113) 186(242, 153) 90(318, 305) 231(476, 323) 149(182, 9) 260(406, 47) 53(266, 97) 19(456, 21) 199(96, 213) 216(318, 299) 63(474, 419) 166(306, 217) 94(4, 73) 196(12, 327) 223(390, 81) 100(104, 191) 87(396, 495) 176(22, 423) 0(448, 217) 120(330, 481)  } , COG: ( 264.4, 225.2), avg_dist: 204.949, std_deviation: 81.1116
,  numNodesWithinArea: 1
level: 4, index = 2 { 7(86, 129) 9(266, 159) 252(226, 347) 207(286, 241) 228(316, 279) 40(106, 399) 256(404, 411) 28(446, 249) 181(290, 279) 284(238, 223) 6(330, 445) 96(336, 269) 212(410, 139) 86(312, 45) 36(36, 15) 270(6, 481) 11(98, 19) 21(394, 447) 128(438, 337) 255(482, 131)  } , COG: ( 275.3, 252.2), avg_dist: 172.599, std_deviation: 97.219
,  numNodesWithinArea: 5
level: 4, index = 3 { 201(94, 479) 1(388, 315) 280(24, 21) 81(452, 475) 14(348, 405) 225(52, 395) 121(58, 179) 47(160, 493) 35(480, 15) 263(262, 321) 23(494, 343) 33(80, 181) 41(178, 425) 257(392, 449) 60(446, 431) 222(208, 373) 50(432, 181) 45(266, 397) 114(6, 183) 75(278, 143)  } , COG: ( 254.9, 310.2), avg_dist: 201.222, std_deviation: 86.5876
,  numNodesWithinArea: 1
level: 4, index = 4 { 31(182, 389) 42(208, 457) 107(366, 453) 245(470, 273) 51(86, 33) 17(268, 459) 163(260, 113) 226(244, 477) 239(262, 39) 10(106, 337) 213(194, 431) 130(108, 103) 218(12, 73) 211(250, 323) 80(316, 253) 106(328, 333) 299(468, 47) 208(416, 23) 134(340, 11) 191(64, 321)  } , COG: ( 247.4, 247.4), avg_dist: 201.485, std_deviation: 64.1629
,  numNodesWithinArea: 1
level: 4, index = 5 { 220(304, 383) 165(188, 331) 168(318, 395) 44(120, 485) 99(254, 441) 240(14, 413) 157(296, 159) 279(288, 441) 230(42, 455) 152(318, 391) 54(220, 377) 62(114, 437) 210(436, 491) 138(120, 249) 190(0, 355) 221(62, 191) 71(298, 307) 237(86, 393) 206(444, 163) 251(482, 211)  } , COG: ( 220.2, 353.4), avg_dist: 158.317, std_deviation: 77.0243
,  numNodesWithinArea: 2
level: 4, index = 6 { 104(108, 465) 290(144, 241) 13(264, 493) 200(218, 25) 110(226, 181) 117(180, 429) 253(176, 125) 264(34, 117) 135(490, 21) 93(84, 455) 70(18, 175) 158(332, 113) 289(76, 53) 127(458, 329) 25(188, 201) 294(420, 175) 103(188, 195) 151(162, 495) 179(484, 7) 12(38, 443)  } , COG: ( 214.4, 236.9), avg_dist: 202.574, std_deviation: 89.8282
,  numNodesWithinArea: 4
level: 4, index = 7 { 112(236, 321) 16(306, 81) 136(30, 331) 119(394, 255) 2(432, 197) 148(32, 427) 177(150, 117) 57(480, 455) 29(292, 255) 49(494, 385) 141(294, 389)  } , COG: ( 285.455, 292.091), avg_dist: 176.606, std_deviation: 82.2746
,  numNodesWithinArea: 2
level: 4, index = 8 { 271(98, 117) 92(32, 415) 276(30, 139) 295(156, 83) 183(62, 111) 265(80, 189) 261(198, 23) 101(60, 161) 184(130, 151) 39(96, 147) 55(284, 39) 140(400, 341) 292(108, 187) 118(148, 21) 173(258, 487) 58(110, 233) 73(268, 91) 88(30, 123) 132(320, 381) 175(260, 205)  } , COG: ( 156.4, 182.2), avg_dist: 144.161, std_deviation: 80.0408
,  numNodesWithinArea: 4
level: 4, index = 9 { 95(170, 461) 123(254, 101) 46(230, 491) 189(184, 141) 116(20, 333) 113(494, 187) 194(342, 5) 250(304, 143) 274(230, 393) 298(136, 419) 67(56, 409) 56(314, 489) 161(180, 1) 38(324, 39) 155(58, 321) 143(356, 287) 109(360, 131) 4(108, 185) 124(218, 335) 69(492, 95)  } , COG: ( 241.5, 248.3), avg_dist: 197.914, std_deviation: 58.5397
,  numNodesWithinArea: 0
level: 4, index = 10 { 122(248, 159) 105(98, 265) 188(222, 27) 246(232, 299) 203(86, 303) 275(150, 79) 241(66, 185) 182(206, 295) 77(472, 161) 193(470, 51) 197(380, 105) 162(136, 49) 97(456, 161) 76(226, 123) 145(92, 99) 111(474, 417) 247(76, 49) 79(376, 461) 129(98, 91) 27(174, 455)  } , COG: ( 236.9, 191.7), avg_dist: 183.741, std_deviation: 72.7648
,  numNodesWithinArea: 2
level: 4, index = 11 { 91(354, 471) 150(420, 387) 22(442, 475) 192(300, 163) 215(176, 281) 24(402, 429) 202(34, 57) 174(330, 241) 159(58, 345) 286(318, 17) 266(230, 255) 125(376, 449) 3(286, 321) 61(84, 275) 249(254, 169) 133(454, 289) 288(314, 185) 236(424, 241) 65(172, 13) 137(174, 313)  } , COG: ( 280.1, 268.8), avg_dist: 167.914, std_deviation: 78.5413
,  numNodesWithinArea: 3
level: 4, index = 12 { 287(356, 155) 254(404, 285) 291(490, 201) 26(208, 65) 115(290, 19) 238(232, 473) 262(306, 145) 242(400, 253) 102(328, 445) 172(118, 79) 74(330, 103) 248(412, 327) 85(372, 37) 37(276, 75) 205(260, 455) 8(416, 45) 59(252, 7) 224(312, 165) 267(496, 409) 243(482, 107)  } , COG: ( 337, 192.5), avg_dist: 163.406, std_deviation: 76.0761
,  numNodesWithinArea: 3
level: 4, index = 13 { 198(222, 265) 82(408, 363) 160(304, 99) 227(366, 195) 66(26, 159) 204(440, 141) 64(318, 61) 142(444, 451) 78(324, 235) 235(456, 141) 170(114, 107) 209(292, 79) 195(64, 345) 273(52, 167) 180(406, 315) 269(50, 83) 234(32, 157) 281(78, 471) 52(442, 1) 15(494, 123)  } , COG: ( 266.6, 197.9), avg_dist: 195.877, std_deviation: 72.0637
,  numNodesWithinArea: 1
level: 4, index = 14 { 171(394, 179) 108(6, 125) 154(132, 147) 68(110, 263) 89(292, 159) 285(54, 283) 83(296, 135) 296(116, 185) 169(356, 45) 277(498, 491) 32(316, 253) 153(182, 101) 229(192, 411) 126(214, 373) 167(252, 423) 283(468, 409) 131(176, 65) 214(304, 313) 272(48, 411) 185(296, 85)  } , COG: ( 235.1, 242.8), avg_dist: 177.237, std_deviation: 68.4522
,  numNodesWithinArea: 0
level: 4, index = 15 { 268(10, 221) 244(428, 231) 147(88, 213) 259(80, 217) 297(390, 137) 139(266, 235) 278(340, 327) 178(124, 211) 217(260, 369)  } , COG: ( 220.667, 240.111), avg_dist: 147.137, std_deviation: 50.7259
,  numNodesWithinArea: 1
level: 5, index = 0 { 18(300, 315) 164(438, 47) 258(438, 453) 233(154, 419) 20(322, 283)  } , COG: ( 330.4, 303.4), avg_dist: 145.568, std_deviation: 101.342
,  numNodesWithinArea: 2
level: 5, index = 1 { 5(362, 201) 30(238, 451) 282(212, 465) 219(56, 413) 144(36, 411)  } , COG: ( 180.8, 388.2), avg_dist: 140.44, std_deviation: 64.8464
,  numNodesWithinArea: 0
level: 5, index = 2 { 187(292, 33) 98(210, 477) 293(54, 481) 72(330, 161) 43(356, 497)  } , COG: ( 248.4, 329.8), avg_dist: 216.942, std_deviation: 51.2901
,  numNodesWithinArea: 0
level: 5, index = 3 { 34(402, 69) 48(106, 289) 146(432, 91) 84(426, 7) 156(208, 145)  } , COG: ( 314.8, 120.2), avg_dist: 151.745, std_deviation: 61.6011
,  numNodesWithinArea: 0
level: 5, index = 4 { 232(42, 113) 186(242, 153) 90(318, 305) 231(476, 323) 149(182, 9)  } , COG: ( 252, 180.6), avg_dist: 168.31, std_deviation: 80.6492
,  numNodesWithinArea: 1
level: 5, index = 5 { 260(406, 47) 53(266, 97) 19(456, 21) 199(96, 213) 216(318, 299)  } , COG: ( 308.4, 135.4), avg_dist: 153.129, std_deviation: 56.985
,  numNodesWithinArea: 0
level: 5, index = 6 { 63(474, 419) 166(306, 217) 94(4, 73) 196(12, 327) 223(390, 81)  } , COG: ( 237.2, 223.4), avg_dist: 222.096, std_deviation: 83.1262
,  numNodesWithinArea: 0
level: 5, index = 7 { 100(104, 191) 87(396, 495) 176(22, 423) 0(448, 217) 120(330, 481)  } , COG: ( 260, 361.4), avg_dist: 208.629, std_deviation: 39.8119
,  numNodesWithinArea: 0
level: 5, index = 8 { 7(86, 129) 9(266, 159) 252(226, 347) 207(286, 241) 228(316, 279)  } , COG: ( 236, 231), avg_dist: 104.022, std_deviation: 44.1476
,  numNodesWithinArea: 0
level: 5, index = 9 { 40(106, 399) 256(404, 411) 28(446, 249) 181(290, 279) 284(238, 223)  } , COG: ( 296.8, 312.2), avg_dist: 131.632, std_deviation: 58.9483
,  numNodesWithinArea: 1
level: 5, index = 10 { 6(330, 445) 96(336, 269) 212(410, 139) 86(312, 45) 36(36, 15)  } , COG: ( 284.8, 182.6), avg_dist: 187.904, std_deviation: 79.6055
,  numNodesWithinArea: 0
level: 5, index = 11 { 270(6, 481) 11(98, 19) 21(394, 447) 128(438, 337) 255(482, 131)  } , COG: ( 283.6, 283), avg_dist: 254.978, std_deviation: 68.7688
,  numNodesWithinArea: 0
level: 5, index = 12 { 201(94, 479) 1(388, 315) 280(24, 21) 81(452, 475) 14(348, 405)  } , COG: ( 261.2, 339), avg_dist: 217.439, std_deviation: 101.97
,  numNodesWithinArea: 0
level: 5, index = 13 { 225(52, 395) 121(58, 179) 47(160, 493) 35(480, 15) 263(262, 321)  } , COG: ( 202.4, 280.6), avg_dist: 207.663, std_deviation: 100.959
,  numNodesWithinArea: 0
level: 5, index = 14 { 23(494, 343) 33(80, 181) 41(178, 425) 257(392, 449) 60(446, 431)  } , COG: ( 318, 365.8), avg_dist: 177.158, std_deviation: 65.5798
,  numNodesWithinArea: 0
level: 5, index = 15 { 222(208, 373) 50(432, 181) 45(266, 397) 114(6, 183) 75(278, 143)  } , COG: ( 238, 255.4), avg_dist: 167.165, std_deviation: 49.6276
,  numNodesWithinArea: 0
level: 5, index = 16 { 31(182, 389) 42(208, 457) 107(366, 453) 245(470, 273) 51(86, 33)  } , COG: ( 262.4, 321), avg_dist: 194.077, std_deviation: 79.7929
,  numNodesWithinArea: 0
level: 5, index = 17 { 17(268, 459) 163(260, 113) 226(244, 477) 239(262, 39) 10(106, 337)  } , COG: ( 228, 285), avg_dist: 185.423, std_deviation: 37.2989
,  numNodesWithinArea: 0
level: 5, index = 18 { 213(194, 431) 130(108, 103) 218(12, 73) 211(250, 323) 80(316, 253)  } , COG: ( 176, 236.6), avg_dist: 166.301, std_deviation: 41.9022
,  numNodesWithinArea: 0
level: 5, index = 19 { 106(328, 333) 299(468, 47) 208(416, 23) 134(340, 11) 191(64, 321)  } , COG: ( 323.2, 147), avg_dist: 193.227, std_deviation: 61.8524
,  numNodesWithinArea: 0
level: 5, index = 20 { 220(304, 383) 165(188, 331) 168(318, 395) 44(120, 485) 99(254, 441)  } , COG: ( 236.8, 407), avg_dist: 84.4621, std_deviation: 33.1528
,  numNodesWithinArea: 0
level: 5, index = 21 { 240(14, 413) 157(296, 159) 279(288, 441) 230(42, 455) 152(318, 391)  } , COG: ( 191.6, 371.8), avg_dist: 167.408, std_deviation: 42.4837
,  numNodesWithinArea: 0
level: 5, index = 22 { 54(220, 377) 62(114, 437) 210(436, 491) 138(120, 249) 190(0, 355)  } , COG: ( 178, 381.8), avg_dist: 146.374, std_deviation: 82.0911
,  numNodesWithinArea: 0
level: 5, index = 23 { 221(62, 191) 71(298, 307) 237(86, 393) 206(444, 163) 251(482, 211)  } , COG: ( 274.4, 253), avg_dist: 183.745, std_deviation: 63.9379
,  numNodesWithinArea: 0
level: 5, index = 24 { 104(108, 465) 290(144, 241) 13(264, 493) 200(218, 25) 110(226, 181)  } , COG: ( 192, 281), avg_dist: 170.316, std_deviation: 73.8566
,  numNodesWithinArea: 0
level: 5, index = 25 { 117(180, 429) 253(176, 125) 264(34, 117) 135(490, 21) 93(84, 455)  } , COG: ( 192.8, 229.4), avg_dist: 222.751, std_deviation: 84.1865
,  numNodesWithinArea: 0
level: 5, index = 26 { 70(18, 175) 158(332, 113) 289(76, 53) 127(458, 329) 25(188, 201)  } , COG: ( 214.4, 174.2), avg_dist: 167.837, std_deviation: 82.2995
,  numNodesWithinArea: 0
level: 5, index = 27 { 294(420, 175) 103(188, 195) 151(162, 495) 179(484, 7) 12(38, 443)  } , COG: ( 258.4, 263), avg_dist: 231.78, std_deviation: 84.0875
,  numNodesWithinArea: 0
level: 5, index = 28 { 112(236, 321) 16(306, 81) 136(30, 331) 119(394, 255) 2(432, 197)  } , COG: ( 279.6, 237), avg_dist: 158.588, std_deviation: 59.3493
,  numNodesWithinArea: 0
level: 5, index = 29 { 148(32, 427) 177(150, 117) 57(480, 455) 29(292, 255) 49(494, 385)  } , COG: ( 289.6, 327.8), avg_dist: 208.589, std_deviation: 71.2242
,  numNodesWithinArea: 0
level: 5, index = 30 { 141(294, 389)  } , COG: ( 294, 389), avg_dist: 0, std_deviation: 0
,  numNodesWithinArea: 1
level: 5, index = 31 {  } 
level: 5, index = 32 { 271(98, 117) 92(32, 415) 276(30, 139) 295(156, 83) 183(62, 111)  } , COG: ( 75.6, 173), avg_dist: 109.449, std_deviation: 72.1602
,  numNodesWithinArea: 0
level: 5, index = 33 { 265(80, 189) 261(198, 23) 101(60, 161) 184(130, 151) 39(96, 147)  } , COG: ( 112.8, 134.2), avg_dist: 61.6659, std_deviation: 42.9422
,  numNodesWithinArea: 2
level: 5, index = 34 { 55(284, 39) 140(400, 341) 292(108, 187) 118(148, 21) 173(258, 487)  } , COG: ( 239.6, 215), avg_dist: 201.438, std_deviation: 44.9815
,  numNodesWithinArea: 0
level: 5, index = 35 { 58(110, 233) 73(268, 91) 88(30, 123) 132(320, 381) 175(260, 205)  } , COG: ( 197.6, 206.6), avg_dist: 137.924, std_deviation: 56.4748
,  numNodesWithinArea: 0
level: 5, index = 36 { 95(170, 461) 123(254, 101) 46(230, 491) 189(184, 141) 116(20, 333)  } , COG: ( 171.6, 305.4), avg_dist: 177.904, std_deviation: 25.7543
,  numNodesWithinArea: 0
level: 5, index = 37 { 113(494, 187) 194(342, 5) 250(304, 143) 274(230, 393) 298(136, 419)  } , COG: ( 301.2, 229.4), avg_dist: 188.366, std_deviation: 56.7947
,  numNodesWithinArea: 0
level: 5, index = 38 { 67(56, 409) 56(314, 489) 161(180, 1) 38(324, 39) 155(58, 321)  } , COG: ( 186.4, 251.8), avg_dist: 224.748, std_deviation: 45.0266
,  numNodesWithinArea: 0
level: 5, index = 39 { 143(356, 287) 109(360, 131) 4(108, 185) 124(218, 335) 69(492, 95)  } , COG: ( 306.8, 206.6), avg_dist: 151.803, std_deviation: 51.6215
,  numNodesWithinArea: 0
level: 5, index = 40 { 122(248, 159) 105(98, 265) 188(222, 27) 246(232, 299) 203(86, 303)  } , COG: ( 177.2, 210.6), avg_dist: 121.303, std_deviation: 36.6722
,  numNodesWithinArea: 0
level: 5, index = 41 { 275(150, 79) 241(66, 185) 182(206, 295) 77(472, 161) 193(470, 51)  } , COG: ( 272.8, 154.2), avg_dist: 186.161, std_deviation: 30.7285
,  numNodesWithinArea: 0
level: 5, index = 42 { 197(380, 105) 162(136, 49) 97(456, 161) 76(226, 123) 145(92, 99)  } , COG: ( 258, 107.4), avg_dist: 132.844, std_deviation: 56.4226
,  numNodesWithinArea: 0
level: 5, index = 43 { 111(474, 417) 247(76, 49) 79(376, 461) 129(98, 91) 27(174, 455)  } , COG: ( 239.6, 294.6), avg_dist: 239.198, std_deviation: 41.8575
,  numNodesWithinArea: 0
level: 5, index = 44 { 91(354, 471) 150(420, 387) 22(442, 475) 192(300, 163) 215(176, 281)  } , COG: ( 338.4, 355.4), avg_dist: 147.442, std_deviation: 40.0168
,  numNodesWithinArea: 0
level: 5, index = 45 { 24(402, 429) 202(34, 57) 174(330, 241) 159(58, 345) 286(318, 17)  } , COG: ( 228.4, 217.8), avg_dist: 212.483, std_deviation: 58.4306
,  numNodesWithinArea: 0
level: 5, index = 46 { 266(230, 255) 125(376, 449) 3(286, 321) 61(84, 275) 249(254, 169)  } , COG: ( 246, 293.8), avg_dist: 116.187, std_deviation: 62.9717
,  numNodesWithinArea: 0
level: 5, index = 47 { 133(454, 289) 288(314, 185) 236(424, 241) 65(172, 13) 137(174, 313)  } , COG: ( 307.6, 208.2), avg_dist: 143.939, std_deviation: 70.5637
,  numNodesWithinArea: 1
level: 5, index = 48 { 287(356, 155) 254(404, 285) 291(490, 201) 26(208, 65) 115(290, 19)  } , COG: ( 349.6, 145), avg_dist: 123.05, std_deviation: 56.0736
,  numNodesWithinArea: 1
level: 5, index = 49 { 238(232, 473) 262(306, 145) 242(400, 253) 102(328, 445) 172(118, 79)  } , COG: ( 276.8, 279), avg_dist: 178.251, std_deviation: 46.5464
,  numNodesWithinArea: 0
level: 5, index = 50 { 74(330, 103) 248(412, 327) 85(372, 37) 37(276, 75) 205(260, 455)  } , COG: ( 330, 199.4), avg_dist: 163.289, std_deviation: 56.1111
,  numNodesWithinArea: 0
level: 5, index = 51 { 8(416, 45) 59(252, 7) 224(312, 165) 267(496, 409) 243(482, 107)  } , COG: ( 391.6, 146.6), avg_dist: 152.942, std_deviation: 76.2965
,  numNodesWithinArea: 0
level: 5, index = 52 { 198(222, 265) 82(408, 363) 160(304, 99) 227(366, 195) 66(26, 159)  } , COG: ( 265.2, 216.2), avg_dist: 148.475, std_deviation: 66.7906
,  numNodesWithinArea: 0
level: 5, index = 53 { 204(440, 141) 64(318, 61) 142(444, 451) 78(324, 235) 235(456, 141)  } , COG: ( 396.4, 205.8), avg_dist: 131.73, std_deviation: 67.356
,  numNodesWithinArea: 0
level: 5, index = 54 { 170(114, 107) 209(292, 79) 195(64, 345) 273(52, 167) 180(406, 315)  } , COG: ( 185.6, 202.6), avg_dist: 171.09, std_deviation: 44.4858
,  numNodesWithinArea: 0
level: 5, index = 55 { 269(50, 83) 234(32, 157) 281(78, 471) 52(442, 1) 15(494, 123)  } , COG: ( 219.2, 167), avg_dist: 253.541, std_deviation: 57.2959
,  numNodesWithinArea: 0
level: 5, index = 56 { 171(394, 179) 108(6, 125) 154(132, 147) 68(110, 263) 89(292, 159)  } , COG: ( 186.8, 174.6), avg_dist: 135.907, std_deviation: 53.9146
,  numNodesWithinArea: 0
level: 5, index = 57 { 285(54, 283) 83(296, 135) 296(116, 185) 169(356, 45) 277(498, 491)  } , COG: ( 264, 227.8), avg_dist: 205.237, std_deviation: 84.6375
,  numNodesWithinArea: 0
level: 5, index = 58 { 32(316, 253) 153(182, 101) 229(192, 411) 126(214, 373) 167(252, 423)  } , COG: ( 231.2, 312.2), avg_dist: 120.498, std_deviation: 51.2309
,  numNodesWithinArea: 0
level: 5, index = 59 { 283(468, 409) 131(176, 65) 214(304, 313) 272(48, 411) 185(296, 85)  } , COG: ( 258.4, 256.6), avg_dist: 195.378, std_deviation: 69.3166
,  numNodesWithinArea: 0
level: 5, index = 60 { 268(10, 221) 244(428, 231) 147(88, 213) 259(80, 217) 297(390, 137)  } , COG: ( 199.2, 203.8), avg_dist: 170.811, std_deviation: 46.903
,  numNodesWithinArea: 0
level: 5, index = 61 { 139(266, 235) 278(340, 327) 178(124, 211) 217(260, 369)  } , COG: ( 247.5, 285.5), avg_dist: 95.9565, std_deviation: 32.6779
,  numNodesWithinArea: 0
level: 5, index = 62 {  } 
level: 5, index = 63 {  } 
