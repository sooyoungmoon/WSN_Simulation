level: 1, index = 0 { 281(134, 375) 85(452, 83) 376(274, 483) 308(444, 373) 76(388, 55) 100(250, 149) 32(398, 5) 315(2, 417) 119(470, 131) 163(416, 153) 374(230, 467) 334(278, 425) 202(380, 245) 222(294, 263) 254(256, 331) 262(392, 305) 286(190, 391) 314(482, 397) 125(58, 153) 353(14, 495) 197(388, 201) 93(132, 139) 97(204, 139) 297(328, 375) 228(302, 269) 131(160, 163) 247(200, 317) 287(158, 387) 199(392, 217) 170(10, 247) 146(280, 193) 142(248, 167) 14(154, 35) 294(294, 391) 77(360, 93) 44(82, 81) 116(468, 135) 383(314, 475) 299(336, 393) 211(82, 297) 51(110, 61) 47(110, 59) 235(412, 271) 270(466, 345) 50(120, 73) 118(468, 129) 397(464, 473) 349(476, 407) 73(338, 51) 345(430, 431) 245(152, 319) 101(272, 123) 249(222, 313) 117(456, 147) 289(188, 387) 341(354, 413) 196(378, 245) 248(204, 331) 4(76, 23) 340(382, 413) 104(254, 133) 112(446, 109) 359(30, 465) 351(474, 421) 147(262, 165) 347(486, 419) 87(474, 77) 298(306, 381) 110(372, 115) 174(68, 241) 322(80, 431) 393(424, 469) 385(388, 497) 25(326, 15) 221(258, 253) 392(412, 489) 380(342, 459) 316(42, 429) 171(22, 233) 355(36, 467) 115(430, 105) 335(274, 441) 186(156, 245) 54(126, 53) 194(336, 221) 382(344, 481) 70(252, 73) 358(2, 495) 242(88, 323) 189(280, 211) 64(238, 63) 59(174, 69) 251(200, 335) 31(394, 1) 227(348, 265) 277(52, 397) 361(74, 461) 133(156, 189) 40(36, 83) 360(20, 459) 320(86, 411) 176(82, 227) 348(466, 435) 212(98, 251) 220(202, 273) 291(234, 357) 191(292, 201) 67(286, 69) 258(318, 319) 134(168, 175) 198(382, 207) 370(216, 495) 157(354, 199) 129(134, 189) 269(494, 339) 57(162, 77) 124(94, 177) 260(370, 349) 172(32, 209) 132(184, 173) 175(80, 231) 139(236, 179) 187(180, 203) 255(254, 301) 226(302, 267) 390(404, 451) 49(146, 53) 141(226, 161) 69(280, 91) 329(230, 401) 205(408, 229) 68(276, 81) 328(156, 437) 48(118, 91) 200(390, 227) 399(460, 483) 379(338, 481) 307(426, 373) 143(292, 171) 7(140, 5) 75(362, 63) 79(442, 91) 271(458, 345) 362(92, 475) 342(362, 423) 86(468, 75) 274(12, 395) 282(132, 351) 66(246, 95) 17(196, 15) 21(234, 5) 173(92, 247) 9(110, 13) 193(308, 221) 140(228, 193) 156(350, 163) 192(338, 241) 160(354, 161) 168(46, 235) 28(346, 13) 256(292, 313) 267(442, 349) 19(202, 15) 107(306, 109) 386(446, 485) 114(400, 133) 213(74, 285) 321(86, 415) 137(248, 183) 164(452, 153) 83(470, 77) 27(306, 5) 127(144, 189) 295(286, 399) 123(32, 181) 71(312, 87) 239(14, 343) 63(246, 53) 95(248, 141) 106(314, 121) 38(18, 97) 126(144, 185) 306(428, 355) 58(158, 85)  } , COG: ( 258.12, 246.13), avg_dist: 188.065, std_deviation: 73.9711
,  numNodesWithinArea: 97
level: 1, index = 1 { 89(34, 141) 37(26, 65) 45(98, 71) 301(366, 353) 185(180, 205) 365(196, 481) 373(246, 497) 377(250, 465) 149(318, 159) 388(408, 479) 152(316, 159) 120(10, 155) 148(276, 159) 304(404, 391) 324(118, 409) 275(44, 393) 223(264, 287) 331(206, 445) 111(370, 145) 207(472, 227) 363(70, 473) 266(436, 315) 182(124, 217) 74(312, 91) 109(390, 111) 72(348, 89) 180(140, 231) 52(104, 69) 279(102, 375) 155(358, 195) 3(56, 35) 103(260, 139) 102(286, 109) 30(382, 41) 234(406, 263) 354(6, 499) 278(112, 351) 62(234, 91) 6(66, 3) 113(448, 141) 201(364, 237) 121(16, 185) 224(326, 275) 188(210, 231) 92(132, 111) 108(388, 103) 42(6, 91) 154(350, 191) 346(448, 437) 78(444, 79) 246(162, 339) 261(398, 309) 20(230, 5) 16(168, 17) 344(416, 435) 12(184, 7) 167(32, 227) 130(110, 155) 206(462, 215) 302(366, 373) 253(280, 323) 265(402, 345) 357(30, 493) 105(340, 101) 369(240, 471) 216(172, 283) 364(126, 485) 372(230, 479) 268(404, 333) 332(210, 419) 219(188, 293) 263(350, 305) 82(492, 53) 326(158, 427) 338(334, 439) 13(158, 23) 181(116, 219) 24(266, 29) 284(116, 397) 26(326, 49) 378(270, 487) 34(422, 11) 366(176, 497) 177(62, 217) 293(238, 379) 65(202, 75) 333(264, 413) 305(408, 395) 29(364, 7) 88(450, 53) 352(6, 497) 300(384, 363) 232(360, 271) 184(100, 213) 375(264, 451) 215(148, 273) 138(206, 187) 122(42, 183) 230(372, 253) 190(256, 215) 229(368, 299) 225(330, 289) 325(180, 441) 145(262, 195) 285(164, 385) 396(474, 489) 8(144, 5) 368(198, 461) 56(162, 77) 323(112, 411) 151(308, 187) 23(240, 37) 91(102, 107) 350(478, 431) 5(54, 41) 81(436, 93) 337(336, 403) 61(186, 71) 153(320, 151) 1(22, 37) 53(130, 79) 288(198, 367) 204(444, 229) 292(232, 357) 0(28, 21) 128(142, 195) 384(324, 463) 179(100, 229) 243(158, 315) 391(448, 457) 290(184, 395) 162(406, 171) 310(468, 355) 41(10, 93) 381(326, 475) 237(472, 255) 356(32, 457) 80(440, 69) 208(482, 215) 11(170, 7) 99(250, 127) 159(396, 199) 367(180, 489) 231(368, 269) 15(156, 45) 210(58, 257) 90(68, 111) 94(116, 145) 166(16, 247) 250(240, 301) 2(72, 11) 273(46, 395) 209(456, 225) 389(406, 483) 317(26, 407) 264(442, 311) 144(274, 187) 36(470, 33) 136(232, 169) 183(136, 241) 283(138, 365) 46(114, 79) 318(44, 433) 98(256, 149) 10(170, 45) 161(446, 159) 233(386, 271) 169(14, 209) 217(156, 281) 240(40, 329) 312(456, 367) 236(458, 263) 336(282, 443) 203(444, 237) 55(114, 53) 238(470, 277) 158(368, 195) 214(82, 299) 218(184, 273) 257(280, 301) 241(52, 329) 33(370, 25) 309(486, 391) 96(224, 149) 296(256, 399) 84(492, 55) 244(176, 301) 280(134, 365) 43(56, 81) 195(338, 245) 319(84, 417) 343(442, 449) 311(454, 373) 387(424, 455) 339(382, 423) 35(470, 35) 303(448, 369) 178(76, 241) 22(206, 11) 394(420, 461) 313(454, 393) 60(158, 65) 252(242, 305) 276(4, 371) 272(464, 339) 135(248, 163) 395(478, 483) 371(204, 499) 327(160, 427) 39(0, 73) 259(326, 331) 398(498, 485) 330(204, 419) 18(226, 49) 150(344, 197) 165(456, 183)  } , COG: ( 251.028, 253.713), avg_dist: 197.567, std_deviation: 71.0167
,  numNodesWithinArea: 102
level: 2, index = 0 { 281(134, 375) 85(452, 83) 376(274, 483) 308(444, 373) 76(388, 55) 100(250, 149) 32(398, 5) 315(2, 417) 119(470, 131) 163(416, 153) 374(230, 467) 334(278, 425) 202(380, 245) 222(294, 263) 254(256, 331) 262(392, 305) 286(190, 391) 314(482, 397) 125(58, 153) 353(14, 495) 197(388, 201) 93(132, 139) 97(204, 139) 297(328, 375) 228(302, 269) 131(160, 163) 247(200, 317) 287(158, 387) 199(392, 217) 170(10, 247) 146(280, 193) 142(248, 167) 14(154, 35) 294(294, 391) 77(360, 93) 44(82, 81) 116(468, 135) 383(314, 475) 299(336, 393) 211(82, 297) 51(110, 61) 47(110, 59) 235(412, 271) 270(466, 345) 50(120, 73) 118(468, 129) 397(464, 473) 349(476, 407) 73(338, 51) 345(430, 431) 245(152, 319) 101(272, 123) 249(222, 313) 117(456, 147) 289(188, 387) 341(354, 413) 196(378, 245) 248(204, 331) 4(76, 23) 340(382, 413) 104(254, 133) 112(446, 109) 359(30, 465) 351(474, 421) 147(262, 165) 347(486, 419) 87(474, 77) 298(306, 381) 110(372, 115) 174(68, 241) 322(80, 431) 393(424, 469) 385(388, 497) 25(326, 15) 221(258, 253) 392(412, 489) 380(342, 459) 316(42, 429) 171(22, 233) 355(36, 467) 115(430, 105) 335(274, 441) 186(156, 245) 54(126, 53) 194(336, 221) 382(344, 481) 70(252, 73) 358(2, 495) 242(88, 323) 189(280, 211) 64(238, 63) 59(174, 69) 251(200, 335) 31(394, 1) 227(348, 265) 277(52, 397) 361(74, 461) 133(156, 189) 40(36, 83) 360(20, 459) 320(86, 411) 176(82, 227) 348(466, 435) 212(98, 251) 220(202, 273) 291(234, 357) 191(292, 201) 67(286, 69)  } , COG: ( 259.259, 267.463), avg_dist: 192.872, std_deviation: 75.5724
,  numNodesWithinArea: 30
level: 2, index = 1 { 258(318, 319) 134(168, 175) 198(382, 207) 370(216, 495) 157(354, 199) 129(134, 189) 269(494, 339) 57(162, 77) 124(94, 177) 260(370, 349) 172(32, 209) 132(184, 173) 175(80, 231) 139(236, 179) 187(180, 203) 255(254, 301) 226(302, 267) 390(404, 451) 49(146, 53) 141(226, 161) 69(280, 91) 329(230, 401) 205(408, 229) 68(276, 81) 328(156, 437) 48(118, 91) 200(390, 227) 399(460, 483) 379(338, 481) 307(426, 373) 143(292, 171) 7(140, 5) 75(362, 63) 79(442, 91) 271(458, 345) 362(92, 475) 342(362, 423) 86(468, 75) 274(12, 395) 282(132, 351) 66(246, 95) 17(196, 15) 21(234, 5) 173(92, 247) 9(110, 13) 193(308, 221) 140(228, 193) 156(350, 163) 192(338, 241) 160(354, 161) 168(46, 235) 28(346, 13) 256(292, 313) 267(442, 349) 19(202, 15) 107(306, 109) 386(446, 485) 114(400, 133) 213(74, 285) 321(86, 415) 137(248, 183) 164(452, 153) 83(470, 77) 27(306, 5) 127(144, 189) 295(286, 399) 123(32, 181) 71(312, 87) 239(14, 343) 63(246, 53) 95(248, 141) 106(314, 121) 38(18, 97) 126(144, 185) 306(428, 355) 58(158, 85)  } , COG: ( 256.5, 215.816), avg_dist: 175.362, std_deviation: 74.6682
,  numNodesWithinArea: 29
level: 2, index = 2 { 89(34, 141) 37(26, 65) 45(98, 71) 301(366, 353) 185(180, 205) 365(196, 481) 373(246, 497) 377(250, 465) 149(318, 159) 388(408, 479) 152(316, 159) 120(10, 155) 148(276, 159) 304(404, 391) 324(118, 409) 275(44, 393) 223(264, 287) 331(206, 445) 111(370, 145) 207(472, 227) 363(70, 473) 266(436, 315) 182(124, 217) 74(312, 91) 109(390, 111) 72(348, 89) 180(140, 231) 52(104, 69) 279(102, 375) 155(358, 195) 3(56, 35) 103(260, 139) 102(286, 109) 30(382, 41) 234(406, 263) 354(6, 499) 278(112, 351) 62(234, 91) 6(66, 3) 113(448, 141) 201(364, 237) 121(16, 185) 224(326, 275) 188(210, 231) 92(132, 111) 108(388, 103) 42(6, 91) 154(350, 191) 346(448, 437) 78(444, 79) 246(162, 339) 261(398, 309) 20(230, 5) 16(168, 17) 344(416, 435) 12(184, 7) 167(32, 227) 130(110, 155) 206(462, 215) 302(366, 373) 253(280, 323) 265(402, 345) 357(30, 493) 105(340, 101) 369(240, 471) 216(172, 283) 364(126, 485) 372(230, 479) 268(404, 333) 332(210, 419) 219(188, 293) 263(350, 305) 82(492, 53) 326(158, 427) 338(334, 439) 13(158, 23) 181(116, 219) 24(266, 29) 284(116, 397) 26(326, 49) 378(270, 487) 34(422, 11) 366(176, 497) 177(62, 217) 293(238, 379) 65(202, 75) 333(264, 413) 305(408, 395) 29(364, 7) 88(450, 53) 352(6, 497) 300(384, 363) 232(360, 271) 184(100, 213) 375(264, 451) 215(148, 273) 138(206, 187) 122(42, 183) 230(372, 253) 190(256, 215) 229(368, 299) 225(330, 289) 325(180, 441) 145(262, 195) 285(164, 385) 396(474, 489) 8(144, 5) 368(198, 461)  } , COG: ( 245.426, 254.778), avg_dist: 192.187, std_deviation: 70.666
,  numNodesWithinArea: 28
level: 2, index = 3 { 56(162, 77) 323(112, 411) 151(308, 187) 23(240, 37) 91(102, 107) 350(478, 431) 5(54, 41) 81(436, 93) 337(336, 403) 61(186, 71) 153(320, 151) 1(22, 37) 53(130, 79) 288(198, 367) 204(444, 229) 292(232, 357) 0(28, 21) 128(142, 195) 384(324, 463) 179(100, 229) 243(158, 315) 391(448, 457) 290(184, 395) 162(406, 171) 310(468, 355) 41(10, 93) 381(326, 475) 237(472, 255) 356(32, 457) 80(440, 69) 208(482, 215) 11(170, 7) 99(250, 127) 159(396, 199) 367(180, 489) 231(368, 269) 15(156, 45) 210(58, 257) 90(68, 111) 94(116, 145) 166(16, 247) 250(240, 301) 2(72, 11) 273(46, 395) 209(456, 225) 389(406, 483) 317(26, 407) 264(442, 311) 144(274, 187) 36(470, 33) 136(232, 169) 183(136, 241) 283(138, 365) 46(114, 79) 318(44, 433) 98(256, 149) 10(170, 45) 161(446, 159) 233(386, 271) 169(14, 209) 217(156, 281) 240(40, 329) 312(456, 367) 236(458, 263) 336(282, 443) 203(444, 237) 55(114, 53) 238(470, 277) 158(368, 195) 214(82, 299) 218(184, 273) 257(280, 301) 241(52, 329) 33(370, 25) 309(486, 391) 96(224, 149) 296(256, 399) 84(492, 55) 244(176, 301) 280(134, 365) 43(56, 81) 195(338, 245) 319(84, 417) 343(442, 449) 311(454, 373) 387(424, 455) 339(382, 423) 35(470, 35) 303(448, 369) 178(76, 241) 22(206, 11) 394(420, 461) 313(454, 393) 60(158, 65) 252(242, 305) 276(4, 371) 272(464, 339) 135(248, 163) 395(478, 483) 371(204, 499) 327(160, 427) 39(0, 73) 259(326, 331) 398(498, 485) 330(204, 419) 18(226, 49) 150(344, 197) 165(456, 183)  } , COG: ( 256.63, 252.648), avg_dist: 203.004, std_deviation: 70.3361
,  numNodesWithinArea: 25
level: 3, index = 0 { 281(134, 375) 85(452, 83) 376(274, 483) 308(444, 373) 76(388, 55) 100(250, 149) 32(398, 5) 315(2, 417) 119(470, 131) 163(416, 153) 374(230, 467) 334(278, 425) 202(380, 245) 222(294, 263) 254(256, 331) 262(392, 305) 286(190, 391) 314(482, 397) 125(58, 153) 353(14, 495) 197(388, 201) 93(132, 139) 97(204, 139) 297(328, 375) 228(302, 269) 131(160, 163) 247(200, 317) 287(158, 387) 199(392, 217) 170(10, 247) 146(280, 193) 142(248, 167) 14(154, 35) 294(294, 391) 77(360, 93) 44(82, 81) 116(468, 135) 383(314, 475) 299(336, 393) 211(82, 297) 51(110, 61) 47(110, 59) 235(412, 271) 270(466, 345) 50(120, 73) 118(468, 129) 397(464, 473) 349(476, 407) 73(338, 51) 345(430, 431) 245(152, 319) 101(272, 123) 249(222, 313) 117(456, 147)  } , COG: ( 281.296, 252.074), avg_dist: 184.978, std_deviation: 71.9105
,  numNodesWithinArea: 7
level: 3, index = 1 { 289(188, 387) 341(354, 413) 196(378, 245) 248(204, 331) 4(76, 23) 340(382, 413) 104(254, 133) 112(446, 109) 359(30, 465) 351(474, 421) 147(262, 165) 347(486, 419) 87(474, 77) 298(306, 381) 110(372, 115) 174(68, 241) 322(80, 431) 393(424, 469) 385(388, 497) 25(326, 15) 221(258, 253) 392(412, 489) 380(342, 459) 316(42, 429) 171(22, 233) 355(36, 467) 115(430, 105) 335(274, 441) 186(156, 245) 54(126, 53) 194(336, 221) 382(344, 481) 70(252, 73) 358(2, 495) 242(88, 323) 189(280, 211) 64(238, 63) 59(174, 69) 251(200, 335) 31(394, 1) 227(348, 265) 277(52, 397) 361(74, 461) 133(156, 189) 40(36, 83) 360(20, 459) 320(86, 411) 176(82, 227) 348(466, 435) 212(98, 251) 220(202, 273) 291(234, 357) 191(292, 201) 67(286, 69)  } , COG: ( 237.222, 282.852), avg_dist: 197.067, std_deviation: 78.4422
,  numNodesWithinArea: 8
level: 3, index = 2 { 258(318, 319) 134(168, 175) 198(382, 207) 370(216, 495) 157(354, 199) 129(134, 189) 269(494, 339) 57(162, 77) 124(94, 177) 260(370, 349) 172(32, 209) 132(184, 173) 175(80, 231) 139(236, 179) 187(180, 203) 255(254, 301) 226(302, 267) 390(404, 451) 49(146, 53) 141(226, 161) 69(280, 91) 329(230, 401) 205(408, 229) 68(276, 81) 328(156, 437) 48(118, 91) 200(390, 227) 399(460, 483) 379(338, 481) 307(426, 373) 143(292, 171) 7(140, 5) 75(362, 63) 79(442, 91) 271(458, 345) 362(92, 475) 342(362, 423) 86(468, 75) 274(12, 395) 282(132, 351) 66(246, 95) 17(196, 15) 21(234, 5) 173(92, 247) 9(110, 13) 193(308, 221) 140(228, 193) 156(350, 163) 192(338, 241) 160(354, 161) 168(46, 235) 28(346, 13) 256(292, 313) 267(442, 349)  } , COG: ( 262.222, 227.889), avg_dist: 172.295, std_deviation: 73.8472
,  numNodesWithinArea: 12
level: 3, index = 3 { 19(202, 15) 107(306, 109) 386(446, 485) 114(400, 133) 213(74, 285) 321(86, 415) 137(248, 183) 164(452, 153) 83(470, 77) 27(306, 5) 127(144, 189) 295(286, 399) 123(32, 181) 71(312, 87) 239(14, 343) 63(246, 53) 95(248, 141) 106(314, 121) 38(18, 97) 126(144, 185) 306(428, 355) 58(158, 85)  } , COG: ( 242.455, 186.182), avg_dist: 175.535, std_deviation: 83.1751
,  numNodesWithinArea: 5
level: 3, index = 4 { 89(34, 141) 37(26, 65) 45(98, 71) 301(366, 353) 185(180, 205) 365(196, 481) 373(246, 497) 377(250, 465) 149(318, 159) 388(408, 479) 152(316, 159) 120(10, 155) 148(276, 159) 304(404, 391) 324(118, 409) 275(44, 393) 223(264, 287) 331(206, 445) 111(370, 145) 207(472, 227) 363(70, 473) 266(436, 315) 182(124, 217) 74(312, 91) 109(390, 111) 72(348, 89) 180(140, 231) 52(104, 69) 279(102, 375) 155(358, 195) 3(56, 35) 103(260, 139) 102(286, 109) 30(382, 41) 234(406, 263) 354(6, 499) 278(112, 351) 62(234, 91) 6(66, 3) 113(448, 141) 201(364, 237) 121(16, 185) 224(326, 275) 188(210, 231) 92(132, 111) 108(388, 103) 42(6, 91) 154(350, 191) 346(448, 437) 78(444, 79) 246(162, 339) 261(398, 309) 20(230, 5) 16(168, 17)  } , COG: ( 238.593, 224.704), avg_dist: 190.489, std_deviation: 71.7354
,  numNodesWithinArea: 6
level: 3, index = 5 { 344(416, 435) 12(184, 7) 167(32, 227) 130(110, 155) 206(462, 215) 302(366, 373) 253(280, 323) 265(402, 345) 357(30, 493) 105(340, 101) 369(240, 471) 216(172, 283) 364(126, 485) 372(230, 479) 268(404, 333) 332(210, 419) 219(188, 293) 263(350, 305) 82(492, 53) 326(158, 427) 338(334, 439) 13(158, 23) 181(116, 219) 24(266, 29) 284(116, 397) 26(326, 49) 378(270, 487) 34(422, 11) 366(176, 497) 177(62, 217) 293(238, 379) 65(202, 75) 333(264, 413) 305(408, 395) 29(364, 7) 88(450, 53) 352(6, 497) 300(384, 363) 232(360, 271) 184(100, 213) 375(264, 451) 215(148, 273) 138(206, 187) 122(42, 183) 230(372, 253) 190(256, 215) 229(368, 299) 225(330, 289) 325(180, 441) 145(262, 195) 285(164, 385) 396(474, 489) 8(144, 5) 368(198, 461)  } , COG: ( 252.259, 284.852), avg_dist: 186.804, std_deviation: 75.0248
,  numNodesWithinArea: 7
level: 3, index = 6 { 56(162, 77) 323(112, 411) 151(308, 187) 23(240, 37) 91(102, 107) 350(478, 431) 5(54, 41) 81(436, 93) 337(336, 403) 61(186, 71) 153(320, 151) 1(22, 37) 53(130, 79) 288(198, 367) 204(444, 229) 292(232, 357) 0(28, 21) 128(142, 195) 384(324, 463) 179(100, 229) 243(158, 315) 391(448, 457) 290(184, 395) 162(406, 171) 310(468, 355) 41(10, 93) 381(326, 475) 237(472, 255) 356(32, 457) 80(440, 69) 208(482, 215) 11(170, 7) 99(250, 127) 159(396, 199) 367(180, 489) 231(368, 269) 15(156, 45) 210(58, 257) 90(68, 111) 94(116, 145) 166(16, 247) 250(240, 301) 2(72, 11) 273(46, 395) 209(456, 225) 389(406, 483) 317(26, 407) 264(442, 311) 144(274, 187) 36(470, 33) 136(232, 169) 183(136, 241) 283(138, 365) 46(114, 79)  } , COG: ( 233.519, 228.63), avg_dist: 200.92, std_deviation: 70.0157
,  numNodesWithinArea: 6
level: 3, index = 7 { 318(44, 433) 98(256, 149) 10(170, 45) 161(446, 159) 233(386, 271) 169(14, 209) 217(156, 281) 240(40, 329) 312(456, 367) 236(458, 263) 336(282, 443) 203(444, 237) 55(114, 53) 238(470, 277) 158(368, 195) 214(82, 299) 218(184, 273) 257(280, 301) 241(52, 329) 33(370, 25) 309(486, 391) 96(224, 149) 296(256, 399) 84(492, 55) 244(176, 301) 280(134, 365) 43(56, 81) 195(338, 245) 319(84, 417) 343(442, 449) 311(454, 373) 387(424, 455) 339(382, 423) 35(470, 35) 303(448, 369) 178(76, 241) 22(206, 11) 394(420, 461) 313(454, 393) 60(158, 65) 252(242, 305) 276(4, 371) 272(464, 339) 135(248, 163) 395(478, 483) 371(204, 499) 327(160, 427) 39(0, 73) 259(326, 331) 398(498, 485) 330(204, 419) 18(226, 49) 150(344, 197) 165(456, 183)  } , COG: ( 279.741, 276.667), avg_dist: 198.584, std_deviation: 73.3984
,  numNodesWithinArea: 5
level: 4, index = 0 { 281(134, 375) 85(452, 83) 376(274, 483) 308(444, 373) 76(388, 55) 100(250, 149) 32(398, 5) 315(2, 417) 119(470, 131) 163(416, 153) 374(230, 467) 334(278, 425) 202(380, 245) 222(294, 263) 254(256, 331) 262(392, 305) 286(190, 391) 314(482, 397)  } , COG: ( 318.333, 280.444), avg_dist: 176.872, std_deviation: 76.8522
,  numNodesWithinArea: 1
level: 4, index = 1 { 125(58, 153) 353(14, 495) 197(388, 201) 93(132, 139) 97(204, 139) 297(328, 375) 228(302, 269) 131(160, 163) 247(200, 317) 287(158, 387) 199(392, 217) 170(10, 247) 146(280, 193) 142(248, 167) 14(154, 35) 294(294, 391) 77(360, 93) 44(82, 81)  } , COG: ( 209.111, 225.667), avg_dist: 157.071, std_deviation: 64.3971
,  numNodesWithinArea: 0
level: 4, index = 2 { 116(468, 135) 383(314, 475) 299(336, 393) 211(82, 297) 51(110, 61) 47(110, 59) 235(412, 271) 270(466, 345) 50(120, 73) 118(468, 129) 397(464, 473) 349(476, 407) 73(338, 51) 345(430, 431) 245(152, 319) 101(272, 123) 249(222, 313) 117(456, 147)  } , COG: ( 316.444, 250.111), avg_dist: 199.895, std_deviation: 53.6101
,  numNodesWithinArea: 0
level: 4, index = 3 { 289(188, 387) 341(354, 413) 196(378, 245) 248(204, 331) 4(76, 23) 340(382, 413) 104(254, 133) 112(446, 109) 359(30, 465) 351(474, 421) 147(262, 165) 347(486, 419) 87(474, 77) 298(306, 381) 110(372, 115) 174(68, 241) 322(80, 431) 393(424, 469)  } , COG: ( 292.111, 291), avg_dist: 196.659, std_deviation: 73.3486
,  numNodesWithinArea: 0
level: 4, index = 4 { 385(388, 497) 25(326, 15) 221(258, 253) 392(412, 489) 380(342, 459) 316(42, 429) 171(22, 233) 355(36, 467) 115(430, 105) 335(274, 441) 186(156, 245) 54(126, 53) 194(336, 221) 382(344, 481) 70(252, 73) 358(2, 495) 242(88, 323) 189(280, 211)  } , COG: ( 228.556, 305), avg_dist: 204.379, std_deviation: 72.0026
,  numNodesWithinArea: 0
level: 4, index = 5 { 64(238, 63) 59(174, 69) 251(200, 335) 31(394, 1) 227(348, 265) 277(52, 397) 361(74, 461) 133(156, 189) 40(36, 83) 360(20, 459) 320(86, 411) 176(82, 227) 348(466, 435) 212(98, 251) 220(202, 273) 291(234, 357) 191(292, 201) 67(286, 69)  } , COG: ( 191, 252.556), avg_dist: 174.137, std_deviation: 83.2624
,  numNodesWithinArea: 1
level: 4, index = 6 { 258(318, 319) 134(168, 175) 198(382, 207) 370(216, 495) 157(354, 199) 129(134, 189) 269(494, 339) 57(162, 77) 124(94, 177) 260(370, 349) 172(32, 209) 132(184, 173) 175(80, 231) 139(236, 179) 187(180, 203) 255(254, 301) 226(302, 267) 390(404, 451)  } , COG: ( 242.444, 252.222), avg_dist: 146.186, std_deviation: 65.3283
,  numNodesWithinArea: 1
level: 4, index = 7 { 49(146, 53) 141(226, 161) 69(280, 91) 329(230, 401) 205(408, 229) 68(276, 81) 328(156, 437) 48(118, 91) 200(390, 227) 399(460, 483) 379(338, 481) 307(426, 373) 143(292, 171) 7(140, 5) 75(362, 63) 79(442, 91) 271(458, 345) 362(92, 475)  } , COG: ( 291.111, 236.556), avg_dist: 193.567, std_deviation: 68.2924
,  numNodesWithinArea: 0
level: 4, index = 8 { 342(362, 423) 86(468, 75) 274(12, 395) 282(132, 351) 66(246, 95) 17(196, 15) 21(234, 5) 173(92, 247) 9(110, 13) 193(308, 221) 140(228, 193) 156(350, 163) 192(338, 241) 160(354, 161) 168(46, 235) 28(346, 13) 256(292, 313) 267(442, 349)  } , COG: ( 253.111, 194.889), avg_dist: 170.254, std_deviation: 74.8009
,  numNodesWithinArea: 1
level: 4, index = 9 { 19(202, 15) 107(306, 109) 386(446, 485) 114(400, 133) 213(74, 285) 321(86, 415) 137(248, 183) 164(452, 153) 83(470, 77) 27(306, 5) 127(144, 189) 295(286, 399) 123(32, 181) 71(312, 87) 239(14, 343) 63(246, 53) 95(248, 141) 106(314, 121)  } , COG: ( 254.778, 187.444), avg_dist: 173.984, std_deviation: 86.3205
,  numNodesWithinArea: 2
level: 4, index = 10 { 38(18, 97) 126(144, 185) 306(428, 355) 58(158, 85)  } , COG: ( 187, 180.5), avg_dist: 157.271, std_deviation: 96.1221
,  numNodesWithinArea: 1
level: 4, index = 11 {  } 
level: 4, index = 12 { 89(34, 141) 37(26, 65) 45(98, 71) 301(366, 353) 185(180, 205) 365(196, 481) 373(246, 497) 377(250, 465) 149(318, 159) 388(408, 479) 152(316, 159) 120(10, 155) 148(276, 159) 304(404, 391) 324(118, 409) 275(44, 393) 223(264, 287) 331(206, 445)  } , COG: ( 208.889, 295.222), avg_dist: 187.763, std_deviation: 57.7439
,  numNodesWithinArea: 1
level: 4, index = 13 { 111(370, 145) 207(472, 227) 363(70, 473) 266(436, 315) 182(124, 217) 74(312, 91) 109(390, 111) 72(348, 89) 180(140, 231) 52(104, 69) 279(102, 375) 155(358, 195) 3(56, 35) 103(260, 139) 102(286, 109) 30(382, 41) 234(406, 263) 354(6, 499)  } , COG: ( 256.778, 201.333), avg_dist: 182.147, std_deviation: 81.457
,  numNodesWithinArea: 0
level: 4, index = 14 { 278(112, 351) 62(234, 91) 6(66, 3) 113(448, 141) 201(364, 237) 121(16, 185) 224(326, 275) 188(210, 231) 92(132, 111) 108(388, 103) 42(6, 91) 154(350, 191) 346(448, 437) 78(444, 79) 246(162, 339) 261(398, 309) 20(230, 5) 16(168, 17)  } , COG: ( 250.111, 177.556), avg_dist: 180.527, std_deviation: 64.9295
,  numNodesWithinArea: 0
level: 4, index = 15 { 344(416, 435) 12(184, 7) 167(32, 227) 130(110, 155) 206(462, 215) 302(366, 373) 253(280, 323) 265(402, 345) 357(30, 493) 105(340, 101) 369(240, 471) 216(172, 283) 364(126, 485) 372(230, 479) 268(404, 333) 332(210, 419) 219(188, 293) 263(350, 305)  } , COG: ( 252.333, 319), avg_dist: 170.7, std_deviation: 75.0834
,  numNodesWithinArea: 1
level: 4, index = 16 { 82(492, 53) 326(158, 427) 338(334, 439) 13(158, 23) 181(116, 219) 24(266, 29) 284(116, 397) 26(326, 49) 378(270, 487) 34(422, 11) 366(176, 497) 177(62, 217) 293(238, 379) 65(202, 75) 333(264, 413) 305(408, 395) 29(364, 7) 88(450, 53)  } , COG: ( 267.889, 231.667), avg_dist: 220.196, std_deviation: 39.8921
,  numNodesWithinArea: 0
level: 4, index = 17 { 352(6, 497) 300(384, 363) 232(360, 271) 184(100, 213) 375(264, 451) 215(148, 273) 138(206, 187) 122(42, 183) 230(372, 253) 190(256, 215) 229(368, 299) 225(330, 289) 325(180, 441) 145(262, 195) 285(164, 385) 396(474, 489) 8(144, 5) 368(198, 461)  } , COG: ( 236.556, 303.889), avg_dist: 163.958, std_deviation: 70.6393
,  numNodesWithinArea: 0
level: 4, index = 18 { 56(162, 77) 323(112, 411) 151(308, 187) 23(240, 37) 91(102, 107) 350(478, 431) 5(54, 41) 81(436, 93) 337(336, 403) 61(186, 71) 153(320, 151) 1(22, 37) 53(130, 79) 288(198, 367) 204(444, 229) 292(232, 357) 0(28, 21) 128(142, 195)  } , COG: ( 218.333, 183), avg_dist: 185.037, std_deviation: 72.2748
,  numNodesWithinArea: 0
level: 4, index = 19 { 384(324, 463) 179(100, 229) 243(158, 315) 391(448, 457) 290(184, 395) 162(406, 171) 310(468, 355) 41(10, 93) 381(326, 475) 237(472, 255) 356(32, 457) 80(440, 69) 208(482, 215) 11(170, 7) 99(250, 127) 159(396, 199) 367(180, 489) 231(368, 269)  } , COG: ( 289.667, 280), avg_dist: 203.546, std_deviation: 64.8922
,  numNodesWithinArea: 0
level: 4, index = 20 { 15(156, 45) 210(58, 257) 90(68, 111) 94(116, 145) 166(16, 247) 250(240, 301) 2(72, 11) 273(46, 395) 209(456, 225) 389(406, 483) 317(26, 407) 264(442, 311) 144(274, 187) 36(470, 33) 136(232, 169) 183(136, 241) 283(138, 365) 46(114, 79)  } , COG: ( 192.556, 222.889), avg_dist: 184.265, std_deviation: 83.3065
,  numNodesWithinArea: 0
level: 4, index = 21 { 318(44, 433) 98(256, 149) 10(170, 45) 161(446, 159) 233(386, 271) 169(14, 209) 217(156, 281) 240(40, 329) 312(456, 367) 236(458, 263) 336(282, 443) 203(444, 237) 55(114, 53) 238(470, 277) 158(368, 195) 214(82, 299) 218(184, 273) 257(280, 301)  } , COG: ( 258.333, 254.667), avg_dist: 179.721, std_deviation: 63.5648
,  numNodesWithinArea: 1
level: 4, index = 22 { 241(52, 329) 33(370, 25) 309(486, 391) 96(224, 149) 296(256, 399) 84(492, 55) 244(176, 301) 280(134, 365) 43(56, 81) 195(338, 245) 319(84, 417) 343(442, 449) 311(454, 373) 387(424, 455) 339(382, 423) 35(470, 35) 303(448, 369) 178(76, 241)  } , COG: ( 298, 283.444), avg_dist: 206.487, std_deviation: 67.5206
,  numNodesWithinArea: 1
level: 4, index = 23 { 22(206, 11) 394(420, 461) 313(454, 393) 60(158, 65) 252(242, 305) 276(4, 371) 272(464, 339) 135(248, 163) 395(478, 483) 371(204, 499) 327(160, 427) 39(0, 73) 259(326, 331) 398(498, 485) 330(204, 419) 18(226, 49) 150(344, 197) 165(456, 183)  } , COG: ( 282.889, 291.889), avg_dist: 206.609, std_deviation: 81.7452
,  numNodesWithinArea: 1
level: 5, index = 0 { 281(134, 375) 85(452, 83) 376(274, 483) 308(444, 373) 76(388, 55) 100(250, 149)  } , COG: ( 323.667, 253), avg_dist: 196.566, std_deviation: 37.0361
CH ID = 100
,  numNodesWithinArea: 0
level: 5, index = 1 { 32(398, 5) 315(2, 417) 119(470, 131) 163(416, 153) 374(230, 467) 334(278, 425)  } , COG: ( 299, 266.333), avg_dist: 227.617, std_deviation: 61.7562
CH ID = 334
,  numNodesWithinArea: 0
level: 5, index = 2 { 202(380, 245) 222(294, 263) 254(256, 331) 262(392, 305) 286(190, 391) 314(482, 397)  } , COG: ( 332.333, 322), avg_dist: 104.234, std_deviation: 42.3567
CH ID = 262
,  numNodesWithinArea: 0
level: 5, index = 3 { 125(58, 153) 353(14, 495) 197(388, 201) 93(132, 139) 97(204, 139) 297(328, 375)  } , COG: ( 187.333, 250.333), avg_dist: 182.202, std_deviation: 62.0232
CH ID = 97
,  numNodesWithinArea: 0
level: 5, index = 4 { 228(302, 269) 131(160, 163) 247(200, 317) 287(158, 387) 199(392, 217) 170(10, 247)  } , COG: ( 203.667, 266.667), avg_dist: 129.91, std_deviation: 51.6584
CH ID = 247
,  numNodesWithinArea: 0
level: 5, index = 5 { 146(280, 193) 142(248, 167) 14(154, 35) 294(294, 391) 77(360, 93) 44(82, 81)  } , COG: ( 236.333, 160), avg_dist: 128.356, std_deviation: 74.4558
CH ID = 142
,  numNodesWithinArea: 1
level: 5, index = 6 { 116(468, 135) 383(314, 475) 299(336, 393) 211(82, 297) 51(110, 61) 47(110, 59)  } , COG: ( 236.667, 236.667), avg_dist: 214.877, std_deviation: 31.5803
CH ID = 211
,  numNodesWithinArea: 0
level: 5, index = 7 { 235(412, 271) 270(466, 345) 50(120, 73) 118(468, 129) 397(464, 473) 349(476, 407)  } , COG: ( 401, 283), avg_dist: 161.657, std_deviation: 103.177
CH ID = 235
,  numNodesWithinArea: 1
level: 5, index = 8 { 73(338, 51) 345(430, 431) 245(152, 319) 101(272, 123) 249(222, 313) 117(456, 147)  } , COG: ( 311.667, 230.667), avg_dist: 166.672, std_deviation: 39.8841
CH ID = 101
,  numNodesWithinArea: 0
level: 5, index = 9 { 289(188, 387) 341(354, 413) 196(378, 245) 248(204, 331) 4(76, 23) 340(382, 413)  } , COG: ( 263.667, 302), avg_dist: 158.249, std_deviation: 84.9313
CH ID = 248
,  numNodesWithinArea: 0
level: 5, index = 10 { 104(254, 133) 112(446, 109) 359(30, 465) 351(474, 421) 147(262, 165) 347(486, 419)  } , COG: ( 325.333, 285.333), avg_dist: 212.302, std_deviation: 65.4422
CH ID = 147
,  numNodesWithinArea: 0
level: 5, index = 11 { 87(474, 77) 298(306, 381) 110(372, 115) 174(68, 241) 322(80, 431) 393(424, 469)  } , COG: ( 287.333, 285.667), avg_dist: 212.222, std_deviation: 58.2939
CH ID = 298
,  numNodesWithinArea: 0
level: 5, index = 12 { 385(388, 497) 25(326, 15) 221(258, 253) 392(412, 489) 380(342, 459) 316(42, 429)  } , COG: ( 294.667, 357), avg_dist: 195.625, std_deviation: 83.3298
CH ID = 221
,  numNodesWithinArea: 0
level: 5, index = 13 { 171(22, 233) 355(36, 467) 115(430, 105) 335(274, 441) 186(156, 245) 54(126, 53)  } , COG: ( 174, 257.333), avg_dist: 190.613, std_deviation: 87.2808
CH ID = 186
,  numNodesWithinArea: 1
level: 5, index = 14 { 194(336, 221) 382(344, 481) 70(252, 73) 358(2, 495) 242(88, 323) 189(280, 211)  } , COG: ( 217, 300.667), avg_dist: 187.405, std_deviation: 64.0705
CH ID = 189
,  numNodesWithinArea: 0
level: 5, index = 15 { 64(238, 63) 59(174, 69) 251(200, 335) 31(394, 1) 227(348, 265) 277(52, 397)  } , COG: ( 234.333, 188.333), avg_dist: 178.349, std_deviation: 60.0211
CH ID = 64
,  numNodesWithinArea: 0
level: 5, index = 16 { 361(74, 461) 133(156, 189) 40(36, 83) 360(20, 459) 320(86, 411) 176(82, 227)  } , COG: ( 75.6667, 305), avg_dist: 145.19, std_deviation: 46.3813
CH ID = 176
,  numNodesWithinArea: 0
level: 5, index = 17 { 348(466, 435) 212(98, 251) 220(202, 273) 291(234, 357) 191(292, 201) 67(286, 69)  } , COG: ( 263, 264.333), avg_dist: 142.633, std_deviation: 73.5235
CH ID = 220
,  numNodesWithinArea: 0
level: 5, index = 18 { 258(318, 319) 134(168, 175) 198(382, 207) 370(216, 495) 157(354, 199) 129(134, 189)  } , COG: ( 262, 264), avg_dist: 139.554, std_deviation: 48.1138
CH ID = 258
,  numNodesWithinArea: 0
level: 5, index = 19 { 269(494, 339) 57(162, 77) 124(94, 177) 260(370, 349) 172(32, 209) 132(184, 173)  } , COG: ( 222.667, 220.667), avg_dist: 172.605, std_deviation: 70.8122
CH ID = 132
,  numNodesWithinArea: 0
level: 5, index = 20 { 175(80, 231) 139(236, 179) 187(180, 203) 255(254, 301) 226(302, 267) 390(404, 451)  } , COG: ( 242.667, 272), avg_dist: 114.31, std_deviation: 70.3646
CH ID = 255
,  numNodesWithinArea: 1
level: 5, index = 21 { 49(146, 53) 141(226, 161) 69(280, 91) 329(230, 401) 205(408, 229) 68(276, 81)  } , COG: ( 261, 169.333), avg_dist: 127.023, std_deviation: 65.2785
CH ID = 141
,  numNodesWithinArea: 0
level: 5, index = 22 { 328(156, 437) 48(118, 91) 200(390, 227) 399(460, 483) 379(338, 481) 307(426, 373)  } , COG: ( 314.667, 348.667), avg_dist: 182.515, std_deviation: 69.3629
CH ID = 307
,  numNodesWithinArea: 0
level: 5, index = 23 { 143(292, 171) 7(140, 5) 75(362, 63) 79(442, 91) 271(458, 345) 362(92, 475)  } , COG: ( 297.667, 191.667), avg_dist: 192.926, std_deviation: 100.244
CH ID = 143
,  numNodesWithinArea: 1
level: 5, index = 24 { 342(362, 423) 86(468, 75) 274(12, 395) 282(132, 351) 66(246, 95) 17(196, 15)  } , COG: ( 236, 225.667), avg_dist: 216.651, std_deviation: 55.1425
CH ID = 66
,  numNodesWithinArea: 0
level: 5, index = 25 { 21(234, 5) 173(92, 247) 9(110, 13) 193(308, 221) 140(228, 193) 156(350, 163)  } , COG: ( 220.333, 140.333), avg_dist: 129.228, std_deviation: 38.4907
CH ID = 140
,  numNodesWithinArea: 0
level: 5, index = 26 { 192(338, 241) 160(354, 161) 168(46, 235) 28(346, 13) 256(292, 313) 267(442, 349)  } , COG: ( 303, 218.667), avg_dist: 145.275, std_deviation: 78.328
CH ID = 192
,  numNodesWithinArea: 0
level: 5, index = 27 { 19(202, 15) 107(306, 109) 386(446, 485) 114(400, 133) 213(74, 285) 321(86, 415)  } , COG: ( 252.333, 240.333), avg_dist: 215.399, std_deviation: 54.3524
CH ID = 107
,  numNodesWithinArea: 0
level: 5, index = 28 { 137(248, 183) 164(452, 153) 83(470, 77) 27(306, 5) 127(144, 189) 295(286, 399)  } , COG: ( 317.667, 167.667), avg_dist: 159.214, std_deviation: 49.0056
CH ID = 137
,  numNodesWithinArea: 0
level: 5, index = 29 { 123(32, 181) 71(312, 87) 239(14, 343) 63(246, 53) 95(248, 141) 106(314, 121)  } , COG: ( 194.333, 154.333), avg_dist: 142.389, std_deviation: 62.3659
CH ID = 95
,  numNodesWithinArea: 0
level: 5, index = 30 { 38(18, 97) 126(144, 185) 306(428, 355) 58(158, 85)  } , COG: ( 187, 180.5), avg_dist: 157.271, std_deviation: 96.1221
CH ID = 126
,  numNodesWithinArea: 0
level: 5, index = 31 {  } 
level: 5, index = 32 {  } 
level: 5, index = 33 {  } 
level: 5, index = 34 {  } 
level: 5, index = 35 {  } 
level: 5, index = 36 { 89(34, 141) 37(26, 65) 45(98, 71) 301(366, 353) 185(180, 205) 365(196, 481)  } , COG: ( 150, 219.333), avg_dist: 174.679, std_deviation: 78.1357
CH ID = 185
,  numNodesWithinArea: 1
level: 5, index = 37 { 373(246, 497) 377(250, 465) 149(318, 159) 388(408, 479) 152(316, 159) 120(10, 155)  } , COG: ( 258, 319), avg_dist: 197.055, std_deviation: 49.8131
CH ID = 377
,  numNodesWithinArea: 0
level: 5, index = 38 { 148(276, 159) 304(404, 391) 324(118, 409) 275(44, 393) 223(264, 287) 331(206, 445)  } , COG: ( 218.667, 347.333), avg_dist: 143.303, std_deviation: 47.8233
CH ID = 223
,  numNodesWithinArea: 0
level: 5, index = 39 { 111(370, 145) 207(472, 227) 363(70, 473) 266(436, 315) 182(124, 217) 74(312, 91)  } , COG: ( 297.333, 244.667), avg_dist: 184.414, std_deviation: 64.0486
CH ID = 111
,  numNodesWithinArea: 0
level: 5, index = 40 { 109(390, 111) 72(348, 89) 180(140, 231) 52(104, 69) 279(102, 375) 155(358, 195)  } , COG: ( 240.333, 178.333), avg_dist: 158.563, std_deviation: 42.7613
CH ID = 180
,  numNodesWithinArea: 0
level: 5, index = 41 { 3(56, 35) 103(260, 139) 102(286, 109) 30(382, 41) 234(406, 263) 354(6, 499)  } , COG: ( 232.667, 181), avg_dist: 192.644, std_deviation: 109.215
CH ID = 103
,  numNodesWithinArea: 0
level: 5, index = 42 { 278(112, 351) 62(234, 91) 6(66, 3) 113(448, 141) 201(364, 237) 121(16, 185)  } , COG: ( 206.667, 168), avg_dist: 185.104, std_deviation: 51.1295
CH ID = 62
,  numNodesWithinArea: 0
level: 5, index = 43 { 224(326, 275) 188(210, 231) 92(132, 111) 108(388, 103) 42(6, 91) 154(350, 191)  } , COG: ( 235.333, 167), avg_dist: 141.944, std_deviation: 53.2989
CH ID = 188
,  numNodesWithinArea: 0
level: 5, index = 44 { 346(448, 437) 78(444, 79) 246(162, 339) 261(398, 309) 20(230, 5) 16(168, 17)  } , COG: ( 308.333, 197.667), avg_dist: 206.748, std_deviation: 41.2712
CH ID = 261
,  numNodesWithinArea: 0
level: 5, index = 45 { 344(416, 435) 12(184, 7) 167(32, 227) 130(110, 155) 206(462, 215) 302(366, 373)  } , COG: ( 261.667, 235.333), avg_dist: 211.514, std_deviation: 31.8362
CH ID = 130
,  numNodesWithinArea: 0
level: 5, index = 46 { 253(280, 323) 265(402, 345) 357(30, 493) 105(340, 101) 369(240, 471) 216(172, 283)  } , COG: ( 244, 336), avg_dist: 156.71, std_deviation: 81.9364
CH ID = 253
,  numNodesWithinArea: 0
level: 5, index = 47 { 364(126, 485) 372(230, 479) 268(404, 333) 332(210, 419) 219(188, 293) 263(350, 305)  } , COG: ( 251.333, 385.667), avg_dist: 118.324, std_deviation: 37.5916
CH ID = 332
,  numNodesWithinArea: 0
level: 5, index = 48 { 82(492, 53) 326(158, 427) 338(334, 439) 13(158, 23) 181(116, 219) 24(266, 29)  } , COG: ( 254, 198.333), avg_dist: 214.945, std_deviation: 49.3766
CH ID = 181
,  numNodesWithinArea: 0
level: 5, index = 49 { 284(116, 397) 26(326, 49) 378(270, 487) 34(422, 11) 366(176, 497) 177(62, 217)  } , COG: ( 228.667, 276.333), avg_dist: 226.524, std_deviation: 53.4871
CH ID = 284
,  numNodesWithinArea: 0
level: 5, index = 50 { 293(238, 379) 65(202, 75) 333(264, 413) 305(408, 395) 29(364, 7) 88(450, 53)  } , COG: ( 321, 220.333), avg_dist: 198.644, std_deviation: 13.1509
CH ID = 293
,  numNodesWithinArea: 0
level: 5, index = 51 { 352(6, 497) 300(384, 363) 232(360, 271) 184(100, 213) 375(264, 451) 215(148, 273)  } , COG: ( 210.333, 344.667), avg_dist: 163.698, std_deviation: 50.3598
CH ID = 215
,  numNodesWithinArea: 0
level: 5, index = 52 { 138(206, 187) 122(42, 183) 230(372, 253) 190(256, 215) 229(368, 299) 225(330, 289)  } , COG: ( 262.333, 237.667), avg_dist: 107.36, std_deviation: 62.0156
CH ID = 190
,  numNodesWithinArea: 1
level: 5, index = 53 { 325(180, 441) 145(262, 195) 285(164, 385) 396(474, 489) 8(144, 5) 368(198, 461)  } , COG: ( 237, 329.333), avg_dist: 185.718, std_deviation: 91.4974
CH ID = 285
,  numNodesWithinArea: 0
level: 5, index = 54 { 56(162, 77) 323(112, 411) 151(308, 187) 23(240, 37) 91(102, 107) 350(478, 431)  } , COG: ( 233.667, 208.333), avg_dist: 188.584, std_deviation: 78.6745
CH ID = 151
,  numNodesWithinArea: 0
level: 5, index = 55 { 5(54, 41) 81(436, 93) 337(336, 403) 61(186, 71) 153(320, 151) 1(22, 37)  } , COG: ( 225.667, 132.667), avg_dist: 182.511, std_deviation: 75.631
CH ID = 61
,  numNodesWithinArea: 0
level: 5, index = 56 { 53(130, 79) 288(198, 367) 204(444, 229) 292(232, 357) 0(28, 21) 128(142, 195)  } , COG: ( 195.667, 208), avg_dist: 168.789, std_deviation: 67.1607
CH ID = 128
,  numNodesWithinArea: 0
level: 5, index = 57 { 384(324, 463) 179(100, 229) 243(158, 315) 391(448, 457) 290(184, 395) 162(406, 171)  } , COG: ( 270, 338.333), avg_dist: 164.156, std_deviation: 47.5843
CH ID = 290
,  numNodesWithinArea: 0
level: 5, index = 58 { 310(468, 355) 41(10, 93) 381(326, 475) 237(472, 255) 356(32, 457) 80(440, 69)  } , COG: ( 291.333, 284), avg_dist: 246.78, std_deviation: 62.1207
CH ID = 237
,  numNodesWithinArea: 0
level: 5, index = 59 { 208(482, 215) 11(170, 7) 99(250, 127) 159(396, 199) 367(180, 489) 231(368, 269)  } , COG: ( 307.667, 217.667), avg_dist: 167.139, std_deviation: 83.6782
CH ID = 231
,  numNodesWithinArea: 0
level: 5, index = 60 { 15(156, 45) 210(58, 257) 90(68, 111) 94(116, 145) 166(16, 247) 250(240, 301)  } , COG: ( 109, 184.333), avg_dist: 107.893, std_deviation: 44.088
CH ID = 94
,  numNodesWithinArea: 0
level: 5, index = 61 { 2(72, 11) 273(46, 395) 209(456, 225) 389(406, 483) 317(26, 407) 264(442, 311)  } , COG: ( 241.333, 305.333), avg_dist: 244.136, std_deviation: 44.9172
CH ID = 264
,  numNodesWithinArea: 0
level: 5, index = 62 { 144(274, 187) 36(470, 33) 136(232, 169) 183(136, 241) 283(138, 365) 46(114, 79)  } , COG: ( 227.333, 179), avg_dist: 134.91, std_deviation: 92.168
CH ID = 136
,  numNodesWithinArea: 1
level: 5, index = 63 { 318(44, 433) 98(256, 149) 10(170, 45) 161(446, 159) 233(386, 271) 169(14, 209)  } , COG: ( 219.333, 211), avg_dist: 190.522, std_deviation: 64.5989
CH ID = 98
,  numNodesWithinArea: 0
level: 5, index = 64 { 217(156, 281) 240(40, 329) 312(456, 367) 236(458, 263) 336(282, 443) 203(444, 237)  } , COG: ( 306, 320), avg_dist: 171.171, std_deviation: 44.2754
CH ID = 336
,  numNodesWithinArea: 0
level: 5, index = 65 { 55(114, 53) 238(470, 277) 158(368, 195) 214(82, 299) 218(184, 273) 257(280, 301)  } , COG: ( 249.667, 233), avg_dist: 150.985, std_deviation: 63.0889
CH ID = 257
,  numNodesWithinArea: 0
level: 5, index = 66 { 241(52, 329) 33(370, 25) 309(486, 391) 96(224, 149) 296(256, 399) 84(492, 55)  } , COG: ( 313.333, 224.667), avg_dist: 212.613, std_deviation: 52.6116
CH ID = 96
,  numNodesWithinArea: 0
level: 5, index = 67 { 244(176, 301) 280(134, 365) 43(56, 81) 195(338, 245) 319(84, 417) 343(442, 449)  } , COG: ( 205, 309.667), avg_dist: 162.961, std_deviation: 89.2427
CH ID = 244
,  numNodesWithinArea: 1
level: 5, index = 68 { 311(454, 373) 387(424, 455) 339(382, 423) 35(470, 35) 303(448, 369) 178(76, 241)  } , COG: ( 375.667, 316), avg_dist: 174.37, std_deviation: 92.5812
CH ID = 303
,  numNodesWithinArea: 0
level: 5, index = 69 { 22(206, 11) 394(420, 461) 313(454, 393) 60(158, 65) 252(242, 305) 276(4, 371)  } , COG: ( 247.333, 267.667), avg_dist: 214.075, std_deviation: 80.203
CH ID = 252
,  numNodesWithinArea: 0
level: 5, index = 70 { 272(464, 339) 135(248, 163) 395(478, 483) 371(204, 499) 327(160, 427) 39(0, 73)  } , COG: ( 259, 330.667), avg_dist: 220.089, std_deviation: 76.1308
CH ID = 327
,  numNodesWithinArea: 0
level: 5, index = 71 { 259(326, 331) 398(498, 485) 330(204, 419) 18(226, 49) 150(344, 197) 165(456, 183)  } , COG: ( 342.333, 277.333), avg_dist: 166.326, std_deviation: 79.2338
CH ID = 259
,  numNodesWithinArea: 0
