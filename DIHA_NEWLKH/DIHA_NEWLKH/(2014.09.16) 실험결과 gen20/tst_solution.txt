level: 1, index = 0 { 113(80, 167) 128(302, 197) 336(194, 497) 288(36, 415) 251(562, 337) 187(180, 255) 75(22, 103) 155(200, 227) 258(54, 399) 2(90, 31) 322(476, 449) 66(504, 99) 274(468, 351) 338(238, 497) 197(362, 255) 341(258, 479) 117(120, 173) 388(442, 501) 244(478, 305) 4(56, 5) 175(32, 293) 6(120, 45) 166(424, 241) 102(422, 133) 425(392, 591) 19(324, 17) 275(466, 353) 227(144, 301) 355(372, 483) 42(68, 59) 170(532, 223) 266(318, 367) 106(590, 137) 378(180, 501) 138(566, 197) 237(332, 331) 381(214, 541) 77(62, 143) 221(32, 315) 301(224, 421) 61(430, 81) 413(184, 555) 141(588, 181) 285(508, 363) 428(496, 559) 412(166, 597) 300(206, 449) 28(496, 45) 92(316, 127) 327(48, 467) 119(218, 185) 126(302, 183) 254(34, 367) 158(348, 209) 142(598, 173) 334(172, 487) 81(126, 131) 305(218, 441) 144(554, 181) 96(354, 139) 304(218, 445) 299(160, 419) 91(252, 125) 306(234, 423) 50(226, 57) 178(92, 283) 421(352, 567) 101(404, 125) 196(328, 295) 228(120, 307) 335(190, 479) 367(560, 459) 319(462, 421) 47(120, 95) 63(416, 85) 22(364, 29) 214(552, 289) 54(282, 81) 393(462, 539) 41(12, 65) 201(492, 291) 424(352, 595) 344(254, 469) 307(282, 407) 291(74, 417) 371(96, 547) 387(370, 523) 154(156, 245) 74(22, 127) 333(108, 453) 125(344, 163) 55(276, 65) 423(352, 569) 286(24, 419) 78(82, 107) 17(250, 23) 257(90, 351) 401(558, 515) 209(556, 281) 256(98, 383) 176(14, 285) 427(474, 555) 107(576, 135) 43(56, 63) 59(388, 51) 139(574, 151) 123(288, 191) 11(230, 11) 162(376, 225) 114(56, 159) 34(598, 41) 146(4, 241) 82(114, 137) 340(220, 483) 212(582, 277) 36(18, 61) 372(96, 513) 420(330, 591) 111(86, 171) 31(508, 27) 265(298, 381) 137(542, 155) 89(250, 113) 249(504, 313) 57(312, 95) 233(212, 317) 217(8, 349) 40(6, 81) 280(498, 369) 376(188, 515) 392(498, 517) 168(468, 219) 152(106, 245) 328(6, 481) 243(486, 343) 99(386, 115) 218(16, 339) 282(506, 383) 202(508, 257) 205(528, 283) 13(230, 1) 44(136, 91) 220(46, 349) 140(594, 181) 391(472, 509) 215(594, 289) 263(176, 399) 359(452, 495) 183(102, 273) 247(474, 319) 174(38, 287) 366(596, 459) 33(514, 1) 320(484, 441) 0(30, 39) 16(284, 7) 80(114, 137) 32(538, 1) 235(254, 321) 386(392, 511) 130(384, 165) 85(236, 121) 181(138, 253) 21(364, 9) 309(312, 423) 164(438, 243) 132(406, 189) 116(136, 169) 127(304, 173) 143(560, 197) 79(76, 123) 415(194, 583) 326(0, 499) 230(150, 335) 390(408, 537) 150(94, 223) 70(10, 121) 182(132, 297) 118(170, 167) 105(582, 101) 281(536, 399) 9(140, 27) 377(152, 515) 312(360, 405) 232(236, 319) 323(530, 441) 339(220, 481) 35(598, 39) 51(232, 77) 362(542, 471) 234(268, 347) 26(436, 9) 58(340, 61) 157(218, 249) 349(318, 475) 167(406, 225) 343(276, 461) 71(44, 139) 39(4, 99) 199(450, 279) 270(384, 375) 222(80, 329) 65(490, 69) 1(96, 3) 353(378, 471) 161(384, 241) 192(208, 285) 240(360, 311) 400(584, 539) 315(404, 433) 411(160, 581) 98(362, 101) 242(416, 329) 238(324, 311) 289(18, 419) 193(260, 255)  } , COG: ( 290.194, 281.194), avg_dist: 232.959, std_deviation: 80.9748
,  numNodesWithinArea: 107
level: 1, index = 1 { 229(152, 325) 245(456, 349) 52(206, 65) 356(428, 475) 292(82, 439) 431(582, 559) 271(392, 379) 239(360, 341) 399(596, 535) 303(212, 413) 95(392, 145) 198(456, 271) 342(256, 487) 185(130, 293) 329(16, 453) 409(104, 593) 345(322, 455) 8(124, 39) 200(466, 295) 56(306, 99) 131(356, 161) 419(312, 589) 403(16, 595) 250(520, 327) 173(594, 237) 109(12, 177) 45(144, 91) 93(300, 115) 29(488, 45) 317(488, 429) 172(570, 201) 332(102, 453) 135(482, 169) 430(544, 577) 46(142, 67) 273(422, 373) 177(82, 261) 369(86, 517) 225(104, 335) 417(236, 571) 321(462, 411) 27(462, 45) 267(324, 385) 331(56, 491) 226(132, 313) 149(86, 241) 276(456, 397) 351(348, 471) 223(94, 305) 191(228, 281) 287(10, 439) 422(350, 567) 374(108, 523) 358(496, 495) 38(30, 71) 278(466, 385) 73(10, 143) 72(38, 123) 136(502, 193) 184(126, 259) 24(438, 5) 88(286, 103) 179(78, 293) 211(562, 291) 83(194, 135) 410(158, 587) 90(266, 145) 365(510, 483) 397(522, 515) 60(374, 99) 380(214, 513) 252(578, 325) 348(320, 487) 151(132, 249) 87(216, 123) 103(536, 101) 414(192, 555) 318(476, 431) 30(538, 19) 398(524, 537) 129(366, 185) 385(300, 503) 64(488, 63) 272(404, 361) 416(218, 579) 160(324, 233) 352(398, 465) 224(114, 323) 283(502, 369) 219(4, 301) 210(572, 261) 290(22, 449) 354(366, 459) 370(98, 507) 389(434, 513) 37(48, 61) 84(192, 149) 148(58, 245) 180(58, 271) 324(512, 439) 255(34, 373) 383(282, 523) 310(312, 415) 86(208, 145) 134(494, 179) 25(426, 47) 361(486, 483) 120(226, 173) 408(74, 577) 296(154, 419) 147(6, 235) 115(106, 187) 426(364, 575) 346(342, 455) 314(420, 435) 156(234, 217) 268(368, 359) 396(470, 511) 284(532, 391) 316(400, 441) 188(164, 253) 364(508, 465) 295(192, 409) 407(94, 579) 311(334, 407) 231(236, 311) 302(222, 411) 110(60, 163) 62(446, 75) 49(176, 75) 145(10, 213) 112(64, 195) 368(52, 523) 208(586, 293) 203(514, 257) 363(532, 457) 395(470, 509) 347(308, 453) 402(596, 503) 18(296, 35) 277(452, 357) 69(8, 145) 133(434, 195) 357(442, 463) 5(138, 23) 325(580, 431) 260(132, 397) 404(18, 575) 20(318, 5) 406(76, 565) 294(174, 413) 153(158, 229) 297(180, 405) 313(364, 443) 104(520, 125) 248(542, 325) 163(350, 233) 3(64, 21) 195(306, 267) 259(80, 393) 67(548, 51) 10(168, 41) 298(154, 419) 394(498, 513) 429(466, 569) 124(300, 155) 76(56, 133) 7(124, 27) 23(446, 31) 279(454, 351) 190(242, 297) 206(526, 251) 382(290, 505) 94(398, 141) 350(306, 495) 241(412, 327) 337(198, 487) 97(352, 117) 48(176, 57) 384(310, 527) 171(576, 203) 379(200, 513) 418(290, 571) 194(330, 295) 53(226, 91) 405(14, 589) 213(584, 275) 165(440, 241) 261(130, 353) 373(106, 531) 293(180, 439) 68(546, 65) 100(406, 147) 308(254, 441) 159(342, 203) 207(520, 299) 15(230, 23) 246(460, 343) 262(190, 351) 121(286, 179) 169(548, 205) 360(480, 465) 264(284, 389) 216(554, 283) 122(294, 193) 186(120, 277) 330(16, 453) 189(180, 279) 253(594, 329) 269(392, 399) 12(230, 31) 204(530, 255) 236(348, 335) 108(8, 165) 375(172, 513) 14(202, 29)  } , COG: ( 297.38, 317.37), avg_dist: 229.981, std_deviation: 80.0012
,  numNodesWithinArea: 114
level: 2, index = 0 { 113(80, 167) 128(302, 197) 336(194, 497) 288(36, 415) 251(562, 337) 187(180, 255) 75(22, 103) 155(200, 227) 258(54, 399) 2(90, 31) 322(476, 449) 66(504, 99) 274(468, 351) 338(238, 497) 197(362, 255) 341(258, 479) 117(120, 173) 388(442, 501) 244(478, 305) 4(56, 5) 175(32, 293) 6(120, 45) 166(424, 241) 102(422, 133) 425(392, 591) 19(324, 17) 275(466, 353) 227(144, 301) 355(372, 483) 42(68, 59) 170(532, 223) 266(318, 367) 106(590, 137) 378(180, 501) 138(566, 197) 237(332, 331) 381(214, 541) 77(62, 143) 221(32, 315) 301(224, 421) 61(430, 81) 413(184, 555) 141(588, 181) 285(508, 363) 428(496, 559) 412(166, 597) 300(206, 449) 28(496, 45) 92(316, 127) 327(48, 467) 119(218, 185) 126(302, 183) 254(34, 367) 158(348, 209) 142(598, 173) 334(172, 487) 81(126, 131) 305(218, 441) 144(554, 181) 96(354, 139) 304(218, 445) 299(160, 419) 91(252, 125) 306(234, 423) 50(226, 57) 178(92, 283) 421(352, 567) 101(404, 125) 196(328, 295) 228(120, 307) 335(190, 479) 367(560, 459) 319(462, 421) 47(120, 95) 63(416, 85) 22(364, 29) 214(552, 289) 54(282, 81) 393(462, 539) 41(12, 65) 201(492, 291) 424(352, 595) 344(254, 469) 307(282, 407) 291(74, 417) 371(96, 547) 387(370, 523) 154(156, 245) 74(22, 127) 333(108, 453) 125(344, 163) 55(276, 65) 423(352, 569) 286(24, 419) 78(82, 107) 17(250, 23) 257(90, 351) 401(558, 515) 209(556, 281) 256(98, 383) 176(14, 285) 427(474, 555) 107(576, 135) 43(56, 63) 59(388, 51) 139(574, 151) 123(288, 191) 11(230, 11)  } , COG: ( 282.778, 290.13), avg_dist: 234.098, std_deviation: 74.1988
,  numNodesWithinArea: 24
level: 2, index = 1 { 162(376, 225) 114(56, 159) 34(598, 41) 146(4, 241) 82(114, 137) 340(220, 483) 212(582, 277) 36(18, 61) 372(96, 513) 420(330, 591) 111(86, 171) 31(508, 27) 265(298, 381) 137(542, 155) 89(250, 113) 249(504, 313) 57(312, 95) 233(212, 317) 217(8, 349) 40(6, 81) 280(498, 369) 376(188, 515) 392(498, 517) 168(468, 219) 152(106, 245) 328(6, 481) 243(486, 343) 99(386, 115) 218(16, 339) 282(506, 383) 202(508, 257) 205(528, 283) 13(230, 1) 44(136, 91) 220(46, 349) 140(594, 181) 391(472, 509) 215(594, 289) 263(176, 399) 359(452, 495) 183(102, 273) 247(474, 319) 174(38, 287) 366(596, 459) 33(514, 1) 320(484, 441) 0(30, 39) 16(284, 7) 80(114, 137) 32(538, 1) 235(254, 321) 386(392, 511) 130(384, 165) 85(236, 121) 181(138, 253) 21(364, 9) 309(312, 423) 164(438, 243) 132(406, 189) 116(136, 169) 127(304, 173) 143(560, 197) 79(76, 123) 415(194, 583) 326(0, 499) 230(150, 335) 390(408, 537) 150(94, 223) 70(10, 121) 182(132, 297) 118(170, 167) 105(582, 101) 281(536, 399) 9(140, 27) 377(152, 515) 312(360, 405) 232(236, 319) 323(530, 441) 339(220, 481) 35(598, 39) 51(232, 77) 362(542, 471) 234(268, 347) 26(436, 9) 58(340, 61) 157(218, 249) 349(318, 475) 167(406, 225) 343(276, 461) 71(44, 139) 39(4, 99) 199(450, 279) 270(384, 375) 222(80, 329) 65(490, 69) 1(96, 3) 353(378, 471) 161(384, 241) 192(208, 285) 240(360, 311) 400(584, 539) 315(404, 433) 411(160, 581) 98(362, 101) 242(416, 329) 238(324, 311) 289(18, 419) 193(260, 255)  } , COG: ( 297.611, 272.259), avg_dist: 231.568, std_deviation: 86.3303
,  numNodesWithinArea: 28
level: 2, index = 2 { 229(152, 325) 245(456, 349) 52(206, 65) 356(428, 475) 292(82, 439) 431(582, 559) 271(392, 379) 239(360, 341) 399(596, 535) 303(212, 413) 95(392, 145) 198(456, 271) 342(256, 487) 185(130, 293) 329(16, 453) 409(104, 593) 345(322, 455) 8(124, 39) 200(466, 295) 56(306, 99) 131(356, 161) 419(312, 589) 403(16, 595) 250(520, 327) 173(594, 237) 109(12, 177) 45(144, 91) 93(300, 115) 29(488, 45) 317(488, 429) 172(570, 201) 332(102, 453) 135(482, 169) 430(544, 577) 46(142, 67) 273(422, 373) 177(82, 261) 369(86, 517) 225(104, 335) 417(236, 571) 321(462, 411) 27(462, 45) 267(324, 385) 331(56, 491) 226(132, 313) 149(86, 241) 276(456, 397) 351(348, 471) 223(94, 305) 191(228, 281) 287(10, 439) 422(350, 567) 374(108, 523) 358(496, 495) 38(30, 71) 278(466, 385) 73(10, 143) 72(38, 123) 136(502, 193) 184(126, 259) 24(438, 5) 88(286, 103) 179(78, 293) 211(562, 291) 83(194, 135) 410(158, 587) 90(266, 145) 365(510, 483) 397(522, 515) 60(374, 99) 380(214, 513) 252(578, 325) 348(320, 487) 151(132, 249) 87(216, 123) 103(536, 101) 414(192, 555) 318(476, 431) 30(538, 19) 398(524, 537) 129(366, 185) 385(300, 503) 64(488, 63) 272(404, 361) 416(218, 579) 160(324, 233) 352(398, 465) 224(114, 323) 283(502, 369) 219(4, 301) 210(572, 261) 290(22, 449) 354(366, 459) 370(98, 507) 389(434, 513) 37(48, 61) 84(192, 149) 148(58, 245) 180(58, 271) 324(512, 439) 255(34, 373) 383(282, 523) 310(312, 415) 86(208, 145) 134(494, 179) 25(426, 47) 361(486, 483) 120(226, 173)  } , COG: ( 295.204, 323.222), avg_dist: 236.004, std_deviation: 73.9042
,  numNodesWithinArea: 21
level: 2, index = 3 { 408(74, 577) 296(154, 419) 147(6, 235) 115(106, 187) 426(364, 575) 346(342, 455) 314(420, 435) 156(234, 217) 268(368, 359) 396(470, 511) 284(532, 391) 316(400, 441) 188(164, 253) 364(508, 465) 295(192, 409) 407(94, 579) 311(334, 407) 231(236, 311) 302(222, 411) 110(60, 163) 62(446, 75) 49(176, 75) 145(10, 213) 112(64, 195) 368(52, 523) 208(586, 293) 203(514, 257) 363(532, 457) 395(470, 509) 347(308, 453) 402(596, 503) 18(296, 35) 277(452, 357) 69(8, 145) 133(434, 195) 357(442, 463) 5(138, 23) 325(580, 431) 260(132, 397) 404(18, 575) 20(318, 5) 406(76, 565) 294(174, 413) 153(158, 229) 297(180, 405) 313(364, 443) 104(520, 125) 248(542, 325) 163(350, 233) 3(64, 21) 195(306, 267) 259(80, 393) 67(548, 51) 10(168, 41) 298(154, 419) 394(498, 513) 429(466, 569) 124(300, 155) 76(56, 133) 7(124, 27) 23(446, 31) 279(454, 351) 190(242, 297) 206(526, 251) 382(290, 505) 94(398, 141) 350(306, 495) 241(412, 327) 337(198, 487) 97(352, 117) 48(176, 57) 384(310, 527) 171(576, 203) 379(200, 513) 418(290, 571) 194(330, 295) 53(226, 91) 405(14, 589) 213(584, 275) 165(440, 241) 261(130, 353) 373(106, 531) 293(180, 439) 68(546, 65) 100(406, 147) 308(254, 441) 159(342, 203) 207(520, 299) 15(230, 23) 246(460, 343) 262(190, 351) 121(286, 179) 169(548, 205) 360(480, 465) 264(284, 389) 216(554, 283) 122(294, 193) 186(120, 277) 330(16, 453) 189(180, 279) 253(594, 329) 269(392, 399) 12(230, 31) 204(530, 255) 236(348, 335) 108(8, 165) 375(172, 513) 14(202, 29)  } , COG: ( 299.556, 311.519), avg_dist: 223.844, std_deviation: 85.083
,  numNodesWithinArea: 33
level: 3, index = 0 { 113(80, 167) 128(302, 197) 336(194, 497) 288(36, 415) 251(562, 337) 187(180, 255) 75(22, 103) 155(200, 227) 258(54, 399) 2(90, 31) 322(476, 449) 66(504, 99) 274(468, 351) 338(238, 497) 197(362, 255) 341(258, 479) 117(120, 173) 388(442, 501) 244(478, 305) 4(56, 5) 175(32, 293) 6(120, 45) 166(424, 241) 102(422, 133) 425(392, 591) 19(324, 17) 275(466, 353) 227(144, 301) 355(372, 483) 42(68, 59) 170(532, 223) 266(318, 367) 106(590, 137) 378(180, 501) 138(566, 197) 237(332, 331) 381(214, 541) 77(62, 143) 221(32, 315) 301(224, 421) 61(430, 81) 413(184, 555) 141(588, 181) 285(508, 363) 428(496, 559) 412(166, 597) 300(206, 449) 28(496, 45) 92(316, 127) 327(48, 467) 119(218, 185) 126(302, 183) 254(34, 367) 158(348, 209)  } , COG: ( 282.889, 292.63), avg_dist: 229.124, std_deviation: 78.6342
,  numNodesWithinArea: 8
level: 3, index = 1 { 142(598, 173) 334(172, 487) 81(126, 131) 305(218, 441) 144(554, 181) 96(354, 139) 304(218, 445) 299(160, 419) 91(252, 125) 306(234, 423) 50(226, 57) 178(92, 283) 421(352, 567) 101(404, 125) 196(328, 295) 228(120, 307) 335(190, 479) 367(560, 459) 319(462, 421) 47(120, 95) 63(416, 85) 22(364, 29) 214(552, 289) 54(282, 81) 393(462, 539) 41(12, 65) 201(492, 291) 424(352, 595) 344(254, 469) 307(282, 407) 291(74, 417) 371(96, 547) 387(370, 523) 154(156, 245) 74(22, 127) 333(108, 453) 125(344, 163) 55(276, 65) 423(352, 569) 286(24, 419) 78(82, 107) 17(250, 23) 257(90, 351) 401(558, 515) 209(556, 281) 256(98, 383) 176(14, 285) 427(474, 555) 107(576, 135) 43(56, 63) 59(388, 51) 139(574, 151) 123(288, 191) 11(230, 11)  } , COG: ( 282.667, 287.63), avg_dist: 239.049, std_deviation: 69.1097
,  numNodesWithinArea: 3
level: 3, index = 2 { 162(376, 225) 114(56, 159) 34(598, 41) 146(4, 241) 82(114, 137) 340(220, 483) 212(582, 277) 36(18, 61) 372(96, 513) 420(330, 591) 111(86, 171) 31(508, 27) 265(298, 381) 137(542, 155) 89(250, 113) 249(504, 313) 57(312, 95) 233(212, 317) 217(8, 349) 40(6, 81) 280(498, 369) 376(188, 515) 392(498, 517) 168(468, 219) 152(106, 245) 328(6, 481) 243(486, 343) 99(386, 115) 218(16, 339) 282(506, 383) 202(508, 257) 205(528, 283) 13(230, 1) 44(136, 91) 220(46, 349) 140(594, 181) 391(472, 509) 215(594, 289) 263(176, 399) 359(452, 495) 183(102, 273) 247(474, 319) 174(38, 287) 366(596, 459) 33(514, 1) 320(484, 441) 0(30, 39) 16(284, 7) 80(114, 137) 32(538, 1) 235(254, 321) 386(392, 511) 130(384, 165) 85(236, 121)  } , COG: ( 304.704, 262.815), avg_dist: 248.453, std_deviation: 74.3431
,  numNodesWithinArea: 4
level: 3, index = 3 { 181(138, 253) 21(364, 9) 309(312, 423) 164(438, 243) 132(406, 189) 116(136, 169) 127(304, 173) 143(560, 197) 79(76, 123) 415(194, 583) 326(0, 499) 230(150, 335) 390(408, 537) 150(94, 223) 70(10, 121) 182(132, 297) 118(170, 167) 105(582, 101) 281(536, 399) 9(140, 27) 377(152, 515) 312(360, 405) 232(236, 319) 323(530, 441) 339(220, 481) 35(598, 39) 51(232, 77) 362(542, 471) 234(268, 347) 26(436, 9) 58(340, 61) 157(218, 249) 349(318, 475) 167(406, 225) 343(276, 461) 71(44, 139) 39(4, 99) 199(450, 279) 270(384, 375) 222(80, 329) 65(490, 69) 1(96, 3) 353(378, 471) 161(384, 241) 192(208, 285) 240(360, 311) 400(584, 539) 315(404, 433) 411(160, 581) 98(362, 101) 242(416, 329) 238(324, 311) 289(18, 419) 193(260, 255)  } , COG: ( 290.519, 281.704), avg_dist: 213.854, std_deviation: 94.2592
,  numNodesWithinArea: 9
level: 3, index = 4 { 229(152, 325) 245(456, 349) 52(206, 65) 356(428, 475) 292(82, 439) 431(582, 559) 271(392, 379) 239(360, 341) 399(596, 535) 303(212, 413) 95(392, 145) 198(456, 271) 342(256, 487) 185(130, 293) 329(16, 453) 409(104, 593) 345(322, 455) 8(124, 39) 200(466, 295) 56(306, 99) 131(356, 161) 419(312, 589) 403(16, 595) 250(520, 327) 173(594, 237) 109(12, 177) 45(144, 91) 93(300, 115) 29(488, 45) 317(488, 429) 172(570, 201) 332(102, 453) 135(482, 169) 430(544, 577) 46(142, 67) 273(422, 373) 177(82, 261) 369(86, 517) 225(104, 335) 417(236, 571) 321(462, 411) 27(462, 45) 267(324, 385) 331(56, 491) 226(132, 313) 149(86, 241) 276(456, 397) 351(348, 471) 223(94, 305) 191(228, 281) 287(10, 439) 422(350, 567) 374(108, 523) 358(496, 495)  } , COG: ( 289.815, 345.63), avg_dist: 229.685, std_deviation: 81.0898
,  numNodesWithinArea: 6
level: 3, index = 5 { 38(30, 71) 278(466, 385) 73(10, 143) 72(38, 123) 136(502, 193) 184(126, 259) 24(438, 5) 88(286, 103) 179(78, 293) 211(562, 291) 83(194, 135) 410(158, 587) 90(266, 145) 365(510, 483) 397(522, 515) 60(374, 99) 380(214, 513) 252(578, 325) 348(320, 487) 151(132, 249) 87(216, 123) 103(536, 101) 414(192, 555) 318(476, 431) 30(538, 19) 398(524, 537) 129(366, 185) 385(300, 503) 64(488, 63) 272(404, 361) 416(218, 579) 160(324, 233) 352(398, 465) 224(114, 323) 283(502, 369) 219(4, 301) 210(572, 261) 290(22, 449) 354(366, 459) 370(98, 507) 389(434, 513) 37(48, 61) 84(192, 149) 148(58, 245) 180(58, 271) 324(512, 439) 255(34, 373) 383(282, 523) 310(312, 415) 86(208, 145) 134(494, 179) 25(426, 47) 361(486, 483) 120(226, 173)  } , COG: ( 300.593, 300.815), avg_dist: 239.84, std_deviation: 66.3534
,  numNodesWithinArea: 3
level: 3, index = 6 { 408(74, 577) 296(154, 419) 147(6, 235) 115(106, 187) 426(364, 575) 346(342, 455) 314(420, 435) 156(234, 217) 268(368, 359) 396(470, 511) 284(532, 391) 316(400, 441) 188(164, 253) 364(508, 465) 295(192, 409) 407(94, 579) 311(334, 407) 231(236, 311) 302(222, 411) 110(60, 163) 62(446, 75) 49(176, 75) 145(10, 213) 112(64, 195) 368(52, 523) 208(586, 293) 203(514, 257) 363(532, 457) 395(470, 509) 347(308, 453) 402(596, 503) 18(296, 35) 277(452, 357) 69(8, 145) 133(434, 195) 357(442, 463) 5(138, 23) 325(580, 431) 260(132, 397) 404(18, 575) 20(318, 5) 406(76, 565) 294(174, 413) 153(158, 229) 297(180, 405) 313(364, 443) 104(520, 125) 248(542, 325) 163(350, 233) 3(64, 21) 195(306, 267) 259(80, 393) 67(548, 51) 10(168, 41)  } , COG: ( 284.852, 323.889), avg_dist: 230.99, std_deviation: 88.109
,  numNodesWithinArea: 7
level: 3, index = 7 { 298(154, 419) 394(498, 513) 429(466, 569) 124(300, 155) 76(56, 133) 7(124, 27) 23(446, 31) 279(454, 351) 190(242, 297) 206(526, 251) 382(290, 505) 94(398, 141) 350(306, 495) 241(412, 327) 337(198, 487) 97(352, 117) 48(176, 57) 384(310, 527) 171(576, 203) 379(200, 513) 418(290, 571) 194(330, 295) 53(226, 91) 405(14, 589) 213(584, 275) 165(440, 241) 261(130, 353) 373(106, 531) 293(180, 439) 68(546, 65) 100(406, 147) 308(254, 441) 159(342, 203) 207(520, 299) 15(230, 23) 246(460, 343) 262(190, 351) 121(286, 179) 169(548, 205) 360(480, 465) 264(284, 389) 216(554, 283) 122(294, 193) 186(120, 277) 330(16, 453) 189(180, 279) 253(594, 329) 269(392, 399) 12(230, 31) 204(530, 255) 236(348, 335) 108(8, 165) 375(172, 513) 14(202, 29)  } , COG: ( 314.259, 299.148), avg_dist: 214.368, std_deviation: 82.9396
,  numNodesWithinArea: 7
level: 4, index = 0 { 113(80, 167) 128(302, 197) 336(194, 497) 288(36, 415) 251(562, 337) 187(180, 255) 75(22, 103) 155(200, 227) 258(54, 399) 2(90, 31) 322(476, 449) 66(504, 99) 274(468, 351) 338(238, 497) 197(362, 255) 341(258, 479) 117(120, 173) 388(442, 501)  } , COG: ( 254.889, 301.778), avg_dist: 215.48, std_deviation: 74.2692
,  numNodesWithinArea: 0
level: 4, index = 1 { 244(478, 305) 4(56, 5) 175(32, 293) 6(120, 45) 166(424, 241) 102(422, 133) 425(392, 591) 19(324, 17) 275(466, 353) 227(144, 301) 355(372, 483) 42(68, 59) 170(532, 223) 266(318, 367) 106(590, 137) 378(180, 501) 138(566, 197) 237(332, 331)  } , COG: ( 323.111, 254.556), avg_dist: 227.445, std_deviation: 82.9061
,  numNodesWithinArea: 0
level: 4, index = 2 { 381(214, 541) 77(62, 143) 221(32, 315) 301(224, 421) 61(430, 81) 413(184, 555) 141(588, 181) 285(508, 363) 428(496, 559) 412(166, 597) 300(206, 449) 28(496, 45) 92(316, 127) 327(48, 467) 119(218, 185) 126(302, 183) 254(34, 367) 158(348, 209)  } , COG: ( 270.667, 321.556), avg_dist: 234.932, std_deviation: 73.3266
,  numNodesWithinArea: 0
level: 4, index = 3 { 142(598, 173) 334(172, 487) 81(126, 131) 305(218, 441) 144(554, 181) 96(354, 139) 304(218, 445) 299(160, 419) 91(252, 125) 306(234, 423) 50(226, 57) 178(92, 283) 421(352, 567) 101(404, 125) 196(328, 295) 228(120, 307) 335(190, 479) 367(560, 459)  } , COG: ( 286.556, 307.556), avg_dist: 206.157, std_deviation: 69.7857
,  numNodesWithinArea: 1
level: 4, index = 4 { 319(462, 421) 47(120, 95) 63(416, 85) 22(364, 29) 214(552, 289) 54(282, 81) 393(462, 539) 41(12, 65) 201(492, 291) 424(352, 595) 344(254, 469) 307(282, 407) 291(74, 417) 371(96, 547) 387(370, 523) 154(156, 245) 74(22, 127) 333(108, 453)  } , COG: ( 270.889, 315.444), avg_dist: 244.027, std_deviation: 65.3757
,  numNodesWithinArea: 0
level: 4, index = 5 { 125(344, 163) 55(276, 65) 423(352, 569) 286(24, 419) 78(82, 107) 17(250, 23) 257(90, 351) 401(558, 515) 209(556, 281) 256(98, 383) 176(14, 285) 427(474, 555) 107(576, 135) 43(56, 63) 59(388, 51) 139(574, 151) 123(288, 191) 11(230, 11)  } , COG: ( 290.556, 239.889), avg_dist: 252.918, std_deviation: 83.2739
,  numNodesWithinArea: 1
level: 4, index = 6 { 162(376, 225) 114(56, 159) 34(598, 41) 146(4, 241) 82(114, 137) 340(220, 483) 212(582, 277) 36(18, 61) 372(96, 513) 420(330, 591) 111(86, 171) 31(508, 27) 265(298, 381) 137(542, 155) 89(250, 113) 249(504, 313) 57(312, 95) 233(212, 317)  } , COG: ( 283.667, 238.889), avg_dist: 238.402, std_deviation: 84.6219
,  numNodesWithinArea: 0
level: 4, index = 7 { 217(8, 349) 40(6, 81) 280(498, 369) 376(188, 515) 392(498, 517) 168(468, 219) 152(106, 245) 328(6, 481) 243(486, 343) 99(386, 115) 218(16, 339) 282(506, 383) 202(508, 257) 205(528, 283) 13(230, 1) 44(136, 91) 220(46, 349) 140(594, 181)  } , COG: ( 289.667, 284.333), avg_dist: 257.509, std_deviation: 50.0784
,  numNodesWithinArea: 0
level: 4, index = 8 { 391(472, 509) 215(594, 289) 263(176, 399) 359(452, 495) 183(102, 273) 247(474, 319) 174(38, 287) 366(596, 459) 33(514, 1) 320(484, 441) 0(30, 39) 16(284, 7) 80(114, 137) 32(538, 1) 235(254, 321) 386(392, 511) 130(384, 165) 85(236, 121)  } , COG: ( 340.778, 265.222), avg_dist: 246.034, std_deviation: 73.5393
,  numNodesWithinArea: 0
level: 4, index = 9 { 181(138, 253) 21(364, 9) 309(312, 423) 164(438, 243) 132(406, 189) 116(136, 169) 127(304, 173) 143(560, 197) 79(76, 123) 415(194, 583) 326(0, 499) 230(150, 335) 390(408, 537) 150(94, 223) 70(10, 121) 182(132, 297) 118(170, 167) 105(582, 101)  } , COG: ( 248.556, 257.889), avg_dist: 215.142, std_deviation: 89.5973
,  numNodesWithinArea: 0
level: 4, index = 10 { 281(536, 399) 9(140, 27) 377(152, 515) 312(360, 405) 232(236, 319) 323(530, 441) 339(220, 481) 35(598, 39) 51(232, 77) 362(542, 471) 234(268, 347) 26(436, 9) 58(340, 61) 157(218, 249) 349(318, 475) 167(406, 225) 343(276, 461) 71(44, 139)  } , COG: ( 325.111, 285.556), avg_dist: 218.613, std_deviation: 84.5674
,  numNodesWithinArea: 0
level: 4, index = 11 { 39(4, 99) 199(450, 279) 270(384, 375) 222(80, 329) 65(490, 69) 1(96, 3) 353(378, 471) 161(384, 241) 192(208, 285) 240(360, 311) 400(584, 539) 315(404, 433) 411(160, 581) 98(362, 101) 242(416, 329) 238(324, 311) 289(18, 419) 193(260, 255)  } , COG: ( 297.889, 301.667), avg_dist: 195.996, std_deviation: 110.414
,  numNodesWithinArea: 3
level: 4, index = 12 { 229(152, 325) 245(456, 349) 52(206, 65) 356(428, 475) 292(82, 439) 431(582, 559) 271(392, 379) 239(360, 341) 399(596, 535) 303(212, 413) 95(392, 145) 198(456, 271) 342(256, 487) 185(130, 293) 329(16, 453) 409(104, 593) 345(322, 455) 8(124, 39)  } , COG: ( 292.556, 367.556), avg_dist: 209.011, std_deviation: 95.1886
,  numNodesWithinArea: 0
level: 4, index = 13 { 200(466, 295) 56(306, 99) 131(356, 161) 419(312, 589) 403(16, 595) 250(520, 327) 173(594, 237) 109(12, 177) 45(144, 91) 93(300, 115) 29(488, 45) 317(488, 429) 172(570, 201) 332(102, 453) 135(482, 169) 430(544, 577) 46(142, 67) 273(422, 373)  } , COG: ( 348, 277.778), avg_dist: 243.224, std_deviation: 91.3326
,  numNodesWithinArea: 0
level: 4, index = 14 { 177(82, 261) 369(86, 517) 225(104, 335) 417(236, 571) 321(462, 411) 27(462, 45) 267(324, 385) 331(56, 491) 226(132, 313) 149(86, 241) 276(456, 397) 351(348, 471) 223(94, 305) 191(228, 281) 287(10, 439) 422(350, 567) 374(108, 523) 358(496, 495)  } , COG: ( 228.889, 391.556), avg_dist: 195.854, std_deviation: 71.3376
,  numNodesWithinArea: 0
level: 4, index = 15 { 38(30, 71) 278(466, 385) 73(10, 143) 72(38, 123) 136(502, 193) 184(126, 259) 24(438, 5) 88(286, 103) 179(78, 293) 211(562, 291) 83(194, 135) 410(158, 587) 90(266, 145) 365(510, 483) 397(522, 515) 60(374, 99) 380(214, 513) 252(578, 325)  } , COG: ( 297.333, 259.333), avg_dist: 248.938, std_deviation: 69.3838
,  numNodesWithinArea: 0
level: 4, index = 16 { 348(320, 487) 151(132, 249) 87(216, 123) 103(536, 101) 414(192, 555) 318(476, 431) 30(538, 19) 398(524, 537) 129(366, 185) 385(300, 503) 64(488, 63) 272(404, 361) 416(218, 579) 160(324, 233) 352(398, 465) 224(114, 323) 283(502, 369) 219(4, 301)  } , COG: ( 336.222, 326.889), avg_dist: 220.437, std_deviation: 79.9165
,  numNodesWithinArea: 0
level: 4, index = 17 { 210(572, 261) 290(22, 449) 354(366, 459) 370(98, 507) 389(434, 513) 37(48, 61) 84(192, 149) 148(58, 245) 180(58, 271) 324(512, 439) 255(34, 373) 383(282, 523) 310(312, 415) 86(208, 145) 134(494, 179) 25(426, 47) 361(486, 483) 120(226, 173)  } , COG: ( 268.222, 316.222), avg_dist: 235.723, std_deviation: 59.0269
,  numNodesWithinArea: 0
level: 4, index = 18 { 408(74, 577) 296(154, 419) 147(6, 235) 115(106, 187) 426(364, 575) 346(342, 455) 314(420, 435) 156(234, 217) 268(368, 359) 396(470, 511) 284(532, 391) 316(400, 441) 188(164, 253) 364(508, 465) 295(192, 409) 407(94, 579) 311(334, 407) 231(236, 311)  } , COG: ( 277.667, 401.444), avg_dist: 179.347, std_deviation: 76.6989
,  numNodesWithinArea: 1
level: 4, index = 19 { 302(222, 411) 110(60, 163) 62(446, 75) 49(176, 75) 145(10, 213) 112(64, 195) 368(52, 523) 208(586, 293) 203(514, 257) 363(532, 457) 395(470, 509) 347(308, 453) 402(596, 503) 18(296, 35) 277(452, 357) 69(8, 145) 133(434, 195) 357(442, 463)  } , COG: ( 314.889, 295.667), avg_dist: 251.175, std_deviation: 65.3417
,  numNodesWithinArea: 0
level: 4, index = 20 { 5(138, 23) 325(580, 431) 260(132, 397) 404(18, 575) 20(318, 5) 406(76, 565) 294(174, 413) 153(158, 229) 297(180, 405) 313(364, 443) 104(520, 125) 248(542, 325) 163(350, 233) 3(64, 21) 195(306, 267) 259(80, 393) 67(548, 51) 10(168, 41)  } , COG: ( 262, 274.556), avg_dist: 240.421, std_deviation: 97.1033
,  numNodesWithinArea: 1
level: 4, index = 21 { 298(154, 419) 394(498, 513) 429(466, 569) 124(300, 155) 76(56, 133) 7(124, 27) 23(446, 31) 279(454, 351) 190(242, 297) 206(526, 251) 382(290, 505) 94(398, 141) 350(306, 495) 241(412, 327) 337(198, 487) 97(352, 117) 48(176, 57) 384(310, 527)  } , COG: ( 317.111, 300.111), avg_dist: 217.138, std_deviation: 71.7954
,  numNodesWithinArea: 0
level: 4, index = 22 { 171(576, 203) 379(200, 513) 418(290, 571) 194(330, 295) 53(226, 91) 405(14, 589) 213(584, 275) 165(440, 241) 261(130, 353) 373(106, 531) 293(180, 439) 68(546, 65) 100(406, 147) 308(254, 441) 159(342, 203) 207(520, 299) 15(230, 23) 246(460, 343)  } , COG: ( 324.111, 312.333), avg_dist: 219.951, std_deviation: 90.5851
,  numNodesWithinArea: 1
level: 4, index = 23 { 262(190, 351) 121(286, 179) 169(548, 205) 360(480, 465) 264(284, 389) 216(554, 283) 122(294, 193) 186(120, 277) 330(16, 453) 189(180, 279) 253(594, 329) 269(392, 399) 12(230, 31) 204(530, 255) 236(348, 335) 108(8, 165) 375(172, 513) 14(202, 29)  } , COG: ( 301.556, 285), avg_dist: 205.119, std_deviation: 83.0388
,  numNodesWithinArea: 1
level: 5, index = 0 { 113(80, 167) 128(302, 197) 336(194, 497) 288(36, 415) 251(562, 337) 187(180, 255)  } , COG: ( 225.667, 311.333), avg_dist: 192.81, std_deviation: 80.7544
CH ID = 187
,  numNodesWithinArea: 0
level: 5, index = 1 { 75(22, 103) 155(200, 227) 258(54, 399) 2(90, 31) 322(476, 449) 66(504, 99)  } , COG: ( 224.333, 218), avg_dist: 230.502, std_deviation: 99.926
CH ID = 155
,  numNodesWithinArea: 1
level: 5, index = 2 { 274(468, 351) 338(238, 497) 197(362, 255) 341(258, 479) 117(120, 173) 388(442, 501)  } , COG: ( 314.667, 376), avg_dist: 167.63, std_deviation: 54.3155
CH ID = 341
,  numNodesWithinArea: 0
level: 5, index = 3 { 244(478, 305) 4(56, 5) 175(32, 293) 6(120, 45) 166(424, 241) 102(422, 133)  } , COG: ( 255.333, 170.333), avg_dist: 218.688, std_deviation: 39.5829
CH ID = 102
,  numNodesWithinArea: 0
level: 5, index = 4 { 425(392, 591) 19(324, 17) 275(466, 353) 227(144, 301) 355(372, 483) 42(68, 59)  } , COG: ( 294.333, 300.667), avg_dist: 241.771, std_deviation: 68.528
CH ID = 227
,  numNodesWithinArea: 0
level: 5, index = 5 { 170(532, 223) 266(318, 367) 106(590, 137) 378(180, 501) 138(566, 197) 237(332, 331)  } , COG: ( 419.667, 292.667), avg_dist: 179.491, std_deviation: 75.1013
CH ID = 237
,  numNodesWithinArea: 0
level: 5, index = 6 { 381(214, 541) 77(62, 143) 221(32, 315) 301(224, 421) 61(430, 81) 413(184, 555)  } , COG: ( 191, 342.667), avg_dist: 208.434, std_deviation: 81.3447
CH ID = 301
,  numNodesWithinArea: 0
level: 5, index = 7 { 141(588, 181) 285(508, 363) 428(496, 559) 412(166, 597) 300(206, 449) 28(496, 45)  } , COG: ( 410, 365.667), avg_dist: 242.453, std_deviation: 80.938
CH ID = 285
,  numNodesWithinArea: 0
level: 5, index = 8 { 92(316, 127) 327(48, 467) 119(218, 185) 126(302, 183) 254(34, 367) 158(348, 209)  } , COG: ( 211, 256.333), avg_dist: 162.533, std_deviation: 62.693
CH ID = 119
,  numNodesWithinArea: 0
level: 5, index = 9 { 142(598, 173) 334(172, 487) 81(126, 131) 305(218, 441) 144(554, 181) 96(354, 139)  } , COG: ( 337, 258.667), avg_dist: 228.684, std_deviation: 53.2265
CH ID = 96
,  numNodesWithinArea: 0
level: 5, index = 10 { 304(218, 445) 299(160, 419) 91(252, 125) 306(234, 423) 50(226, 57) 178(92, 283)  } , COG: ( 197, 292), avg_dist: 156.805, std_deviation: 41.7071
CH ID = 178
,  numNodesWithinArea: 0
level: 5, index = 11 { 421(352, 567) 101(404, 125) 196(328, 295) 228(120, 307) 335(190, 479) 367(560, 459)  } , COG: ( 325.667, 372), avg_dist: 195.228, std_deviation: 60.5158
CH ID = 196
,  numNodesWithinArea: 0
level: 5, index = 12 { 319(462, 421) 47(120, 95) 63(416, 85) 22(364, 29) 214(552, 289) 54(282, 81)  } , COG: ( 366, 166.667), avg_dist: 184.019, std_deviation: 68.868
CH ID = 63
,  numNodesWithinArea: 0
level: 5, index = 13 { 393(462, 539) 41(12, 65) 201(492, 291) 424(352, 595) 344(254, 469) 307(282, 407)  } , COG: ( 309, 394.333), avg_dist: 198.663, std_deviation: 129.084
CH ID = 307
,  numNodesWithinArea: 1
level: 5, index = 14 { 291(74, 417) 371(96, 547) 387(370, 523) 154(156, 245) 74(22, 127) 333(108, 453)  } , COG: ( 137.667, 385.333), avg_dist: 167.762, std_deviation: 84.2603
CH ID = 291
,  numNodesWithinArea: 0
level: 5, index = 15 { 125(344, 163) 55(276, 65) 423(352, 569) 286(24, 419) 78(82, 107) 17(250, 23)  } , COG: ( 221.333, 224.333), avg_dist: 222.819, std_deviation: 78.0358
CH ID = 125
,  numNodesWithinArea: 0
level: 5, index = 16 { 257(90, 351) 401(558, 515) 209(556, 281) 256(98, 383) 176(14, 285) 427(474, 555)  } , COG: ( 298.333, 395), avg_dist: 253.986, std_deviation: 39.1213
CH ID = 256
,  numNodesWithinArea: 0
level: 5, index = 17 { 107(576, 135) 43(56, 63) 59(388, 51) 139(574, 151) 123(288, 191) 11(230, 11)  } , COG: ( 352, 100.333), avg_dist: 179.33, std_deviation: 79.7844
CH ID = 59
,  numNodesWithinArea: 0
level: 5, index = 18 { 162(376, 225) 114(56, 159) 34(598, 41) 146(4, 241) 82(114, 137) 340(220, 483)  } , COG: ( 228, 214.333), avg_dist: 228.296, std_deviation: 92.1981
CH ID = 82
,  numNodesWithinArea: 0
level: 5, index = 19 { 212(582, 277) 36(18, 61) 372(96, 513) 420(330, 591) 111(86, 171) 31(508, 27)  } , COG: ( 270, 273.333), avg_dist: 302.345, std_deviation: 43.496
CH ID = 111
,  numNodesWithinArea: 0
level: 5, index = 20 { 265(298, 381) 137(542, 155) 89(250, 113) 249(504, 313) 57(312, 95) 233(212, 317)  } , COG: ( 353, 229), avg_dist: 166.479, std_deviation: 19.2263
CH ID = 57
,  numNodesWithinArea: 0
level: 5, index = 21 { 217(8, 349) 40(6, 81) 280(498, 369) 376(188, 515) 392(498, 517) 168(468, 219)  } , COG: ( 277.667, 341.667), avg_dist: 261.91, std_deviation: 58.9982
CH ID = 376
,  numNodesWithinArea: 0
level: 5, index = 22 { 152(106, 245) 328(6, 481) 243(486, 343) 99(386, 115) 218(16, 339) 282(506, 383)  } , COG: ( 251, 317.667), avg_dist: 239.287, std_deviation: 39.9966
CH ID = 152
,  numNodesWithinArea: 0
level: 5, index = 23 { 202(508, 257) 205(528, 283) 13(230, 1) 44(136, 91) 220(46, 349) 140(594, 181)  } , COG: ( 340.333, 193.667), avg_dist: 237.427, std_deviation: 48.2138
CH ID = 202
,  numNodesWithinArea: 0
level: 5, index = 24 { 391(472, 509) 215(594, 289) 263(176, 399) 359(452, 495) 183(102, 273) 247(474, 319)  } , COG: ( 378.333, 380.667), avg_dist: 190.463, std_deviation: 62.1575
CH ID = 247
,  numNodesWithinArea: 0
level: 5, index = 25 { 174(38, 287) 366(596, 459) 33(514, 1) 320(484, 441) 0(30, 39) 16(284, 7)  } , COG: ( 324.333, 205.667), avg_dist: 295.584, std_deviation: 52.6055
CH ID = 16
,  numNodesWithinArea: 0
level: 5, index = 26 { 80(114, 137) 32(538, 1) 235(254, 321) 386(392, 511) 130(384, 165) 85(236, 121)  } , COG: ( 319.667, 209.333), avg_dist: 193.226, std_deviation: 89.9159
CH ID = 130
,  numNodesWithinArea: 0
level: 5, index = 27 { 181(138, 253) 21(364, 9) 309(312, 423) 164(438, 243) 132(406, 189) 116(136, 169)  } , COG: ( 299, 214.333), avg_dist: 168.516, std_deviation: 36.4823
CH ID = 132
,  numNodesWithinArea: 0
level: 5, index = 28 { 127(304, 173) 143(560, 197) 79(76, 123) 415(194, 583) 326(0, 499) 230(150, 335)  } , COG: ( 214, 318.333), avg_dist: 231.398, std_deviation: 93.8512
CH ID = 230
,  numNodesWithinArea: 0
level: 5, index = 29 { 390(408, 537) 150(94, 223) 70(10, 121) 182(132, 297) 118(170, 167) 105(582, 101)  } , COG: ( 232.667, 241), avg_dist: 220.885, std_deviation: 110.646
CH ID = 118
,  numNodesWithinArea: 0
level: 5, index = 30 { 281(536, 399) 9(140, 27) 377(152, 515) 312(360, 405) 232(236, 319) 323(530, 441)  } , COG: ( 325.667, 351), avg_dist: 201.751, std_deviation: 101.521
CH ID = 312
,  numNodesWithinArea: 0
level: 5, index = 31 { 339(220, 481) 35(598, 39) 51(232, 77) 362(542, 471) 234(268, 347) 26(436, 9)  } , COG: ( 382.667, 237.333), avg_dist: 246.952, std_deviation: 48.6101
CH ID = 234
,  numNodesWithinArea: 0
level: 5, index = 32 { 58(340, 61) 157(218, 249) 349(318, 475) 167(406, 225) 343(276, 461) 71(44, 139)  } , COG: ( 267, 268.333), avg_dist: 180.27, std_deviation: 66.1773
CH ID = 157
,  numNodesWithinArea: 0
level: 5, index = 33 { 39(4, 99) 199(450, 279) 270(384, 375) 222(80, 329) 65(490, 69) 1(96, 3)  } , COG: ( 250.667, 192.333), avg_dist: 239.935, std_deviation: 20.8124
CH ID = 199
,  numNodesWithinArea: 0
level: 5, index = 34 { 353(378, 471) 161(384, 241) 192(208, 285) 240(360, 311) 400(584, 539) 315(404, 433)  } , COG: ( 386.333, 380), avg_dist: 135.977, std_deviation: 71.2923
CH ID = 315
,  numNodesWithinArea: 0
level: 5, index = 35 { 411(160, 581) 98(362, 101) 242(416, 329) 238(324, 311) 289(18, 419) 193(260, 255)  } , COG: ( 256.667, 332.667), avg_dist: 180.437, std_deviation: 82.9615
CH ID = 238
,  numNodesWithinArea: 0
level: 5, index = 36 { 229(152, 325) 245(456, 349) 52(206, 65) 356(428, 475) 292(82, 439) 431(582, 559)  } , COG: ( 317.667, 368.667), avg_dist: 226.583, std_deviation: 77.0115
CH ID = 245
,  numNodesWithinArea: 0
level: 5, index = 37 { 271(392, 379) 239(360, 341) 399(596, 535) 303(212, 413) 95(392, 145) 198(456, 271)  } , COG: ( 401.333, 347.333), avg_dist: 140.343, std_deviation: 89.2328
CH ID = 271
,  numNodesWithinArea: 1
level: 5, index = 38 { 342(256, 487) 185(130, 293) 329(16, 453) 409(104, 593) 345(322, 455) 8(124, 39)  } , COG: ( 158.667, 386.667), avg_dist: 189.162, std_deviation: 79.77
CH ID = 185
,  numNodesWithinArea: 0
level: 5, index = 39 { 200(466, 295) 56(306, 99) 131(356, 161) 419(312, 589) 403(16, 595) 250(520, 327)  } , COG: ( 329.333, 344.333), avg_dist: 235.833, std_deviation: 81.9473
CH ID = 200
,  numNodesWithinArea: 0
level: 5, index = 40 { 173(594, 237) 109(12, 177) 45(144, 91) 93(300, 115) 29(488, 45) 317(488, 429)  } , COG: ( 337.667, 182.333), avg_dist: 228.595, std_deviation: 79.5347
CH ID = 93
,  numNodesWithinArea: 0
level: 5, index = 41 { 172(570, 201) 332(102, 453) 135(482, 169) 430(544, 577) 46(142, 67) 273(422, 373)  } , COG: ( 377, 306.667), avg_dist: 239.709, std_deviation: 91.9495
CH ID = 273
,  numNodesWithinArea: 0
level: 5, index = 42 { 177(82, 261) 369(86, 517) 225(104, 335) 417(236, 571) 321(462, 411) 27(462, 45)  } , COG: ( 238.667, 356.667), avg_dist: 228.163, std_deviation: 76.1085
CH ID = 225
,  numNodesWithinArea: 0
level: 5, index = 43 { 267(324, 385) 331(56, 491) 226(132, 313) 149(86, 241) 276(456, 397) 351(348, 471)  } , COG: ( 233.667, 383), avg_dist: 165.604, std_deviation: 49.152
CH ID = 267
,  numNodesWithinArea: 0
level: 5, index = 44 { 223(94, 305) 191(228, 281) 287(10, 439) 422(350, 567) 374(108, 523) 358(496, 495)  } , COG: ( 214.333, 435), avg_dist: 191.903, std_deviation: 48.1424
CH ID = 374
,  numNodesWithinArea: 0
level: 5, index = 45 { 38(30, 71) 278(466, 385) 73(10, 143) 72(38, 123) 136(502, 193) 184(126, 259)  } , COG: ( 195.333, 195.667), avg_dist: 217.323, std_deviation: 80.2433
CH ID = 184
,  numNodesWithinArea: 0
level: 5, index = 46 { 24(438, 5) 88(286, 103) 179(78, 293) 211(562, 291) 83(194, 135) 410(158, 587)  } , COG: ( 286, 235.667), avg_dist: 236.076, std_deviation: 85.367
CH ID = 88
,  numNodesWithinArea: 0
level: 5, index = 47 { 90(266, 145) 365(510, 483) 397(522, 515) 60(374, 99) 380(214, 513) 252(578, 325)  } , COG: ( 410.667, 346.667), avg_dist: 215.894, std_deviation: 37.9033
CH ID = 365
,  numNodesWithinArea: 0
level: 5, index = 48 { 348(320, 487) 151(132, 249) 87(216, 123) 103(536, 101) 414(192, 555) 318(476, 431)  } , COG: ( 312, 324.333), avg_dist: 225.501, std_deviation: 50.302
CH ID = 348
,  numNodesWithinArea: 0
level: 5, index = 49 { 30(538, 19) 398(524, 537) 129(366, 185) 385(300, 503) 64(488, 63) 272(404, 361)  } , COG: ( 436.667, 278), avg_dist: 206.957, std_deviation: 76.1927
CH ID = 272
,  numNodesWithinArea: 0
level: 5, index = 50 { 416(218, 579) 160(324, 233) 352(398, 465) 224(114, 323) 283(502, 369) 219(4, 301)  } , COG: ( 260, 378.333), avg_dist: 198.752, std_deviation: 43.4644
CH ID = 224
,  numNodesWithinArea: 0
level: 5, index = 51 { 210(572, 261) 290(22, 449) 354(366, 459) 370(98, 507) 389(434, 513) 37(48, 61)  } , COG: ( 256.667, 375), avg_dist: 254.558, std_deviation: 80.0139
CH ID = 354
,  numNodesWithinArea: 0
level: 5, index = 52 { 84(192, 149) 148(58, 245) 180(58, 271) 324(512, 439) 255(34, 373) 383(282, 523)  } , COG: ( 189.333, 333.333), avg_dist: 199.824, std_deviation: 65.999
CH ID = 180
,  numNodesWithinArea: 0
level: 5, index = 53 { 310(312, 415) 86(208, 145) 134(494, 179) 25(426, 47) 361(486, 483) 120(226, 173)  } , COG: ( 358.667, 240.333), avg_dist: 189.202, std_deviation: 42.6481
CH ID = 134
,  numNodesWithinArea: 0
level: 5, index = 54 { 408(74, 577) 296(154, 419) 147(6, 235) 115(106, 187) 426(364, 575) 346(342, 455)  } , COG: ( 174.333, 408), avg_dist: 186.534, std_deviation: 77.8378
CH ID = 296
,  numNodesWithinArea: 1
level: 5, index = 55 { 314(420, 435) 156(234, 217) 268(368, 359) 396(470, 511) 284(532, 391) 316(400, 441)  } , COG: ( 404, 392.333), avg_dist: 108.578, std_deviation: 71.4116
CH ID = 314
,  numNodesWithinArea: 0
level: 5, index = 56 { 188(164, 253) 364(508, 465) 295(192, 409) 407(94, 579) 311(334, 407) 231(236, 311)  } , COG: ( 254.667, 404), avg_dist: 151.897, std_deviation: 77.6478
CH ID = 295
,  numNodesWithinArea: 0
level: 5, index = 57 { 302(222, 411) 110(60, 163) 62(446, 75) 49(176, 75) 145(10, 213) 112(64, 195)  } , COG: ( 163, 188.667), avg_dist: 168.281, std_deviation: 75.5101
CH ID = 112
,  numNodesWithinArea: 0
level: 5, index = 58 { 368(52, 523) 208(586, 293) 203(514, 257) 363(532, 457) 395(470, 509) 347(308, 453)  } , COG: ( 410.333, 415.333), avg_dist: 187.697, std_deviation: 92.2114
CH ID = 347
,  numNodesWithinArea: 0
level: 5, index = 59 { 402(596, 503) 18(296, 35) 277(452, 357) 69(8, 145) 133(434, 195) 357(442, 463)  } , COG: ( 371.333, 283), avg_dist: 228.861, std_deviation: 103.193
CH ID = 133
,  numNodesWithinArea: 0
level: 5, index = 60 { 5(138, 23) 325(580, 431) 260(132, 397) 404(18, 575) 20(318, 5) 406(76, 565)  } , COG: ( 210.333, 332.667), avg_dist: 287.425, std_deviation: 90.1345
CH ID = 260
,  numNodesWithinArea: 0
level: 5, index = 61 { 294(174, 413) 153(158, 229) 297(180, 405) 313(364, 443) 104(520, 125) 248(542, 325)  } , COG: ( 323, 323.333), avg_dist: 192.281, std_deviation: 47.8917
CH ID = 313
,  numNodesWithinArea: 0
level: 5, index = 62 { 163(350, 233) 3(64, 21) 195(306, 267) 259(80, 393) 67(548, 51) 10(168, 41)  } , COG: ( 252.667, 167.667), avg_dist: 203.787, std_deviation: 80.6425
CH ID = 195
,  numNodesWithinArea: 0
level: 5, index = 63 { 298(154, 419) 394(498, 513) 429(466, 569) 124(300, 155) 76(56, 133) 7(124, 27)  } , COG: ( 266.333, 302.667), avg_dist: 256.57, std_deviation: 73.1534
CH ID = 124
,  numNodesWithinArea: 0
level: 5, index = 64 { 23(446, 31) 279(454, 351) 190(242, 297) 206(526, 251) 382(290, 505) 94(398, 141)  } , COG: ( 392.667, 262.667), avg_dist: 169.767, std_deviation: 59.221
CH ID = 279
,  numNodesWithinArea: 0
level: 5, index = 65 { 350(306, 495) 241(412, 327) 337(198, 487) 97(352, 117) 48(176, 57) 384(310, 527)  } , COG: ( 292.333, 335), avg_dist: 196.6, std_deviation: 56.7785
CH ID = 241
,  numNodesWithinArea: 0
level: 5, index = 66 { 171(576, 203) 379(200, 513) 418(290, 571) 194(330, 295) 53(226, 91) 405(14, 589)  } , COG: ( 272.667, 377), avg_dist: 237.158, std_deviation: 93.4298
CH ID = 194
,  numNodesWithinArea: 0
level: 5, index = 67 { 213(584, 275) 165(440, 241) 261(130, 353) 373(106, 531) 293(180, 439) 68(546, 65)  } , COG: ( 331, 317.333), avg_dist: 238.24, std_deviation: 68.8134
CH ID = 165
,  numNodesWithinArea: 0
level: 5, index = 68 { 100(406, 147) 308(254, 441) 159(342, 203) 207(520, 299) 15(230, 23) 246(460, 343)  } , COG: ( 368.667, 242.667), avg_dist: 156.086, std_deviation: 72.0001
CH ID = 159
,  numNodesWithinArea: 0
level: 5, index = 69 { 262(190, 351) 121(286, 179) 169(548, 205) 360(480, 465) 264(284, 389) 216(554, 283)  } , COG: ( 390.333, 312), avg_dist: 173.087, std_deviation: 22.7132
CH ID = 264
,  numNodesWithinArea: 0
level: 5, index = 70 { 122(294, 193) 186(120, 277) 330(16, 453) 189(180, 279) 253(594, 329) 269(392, 399)  } , COG: ( 266, 321.667), avg_dist: 189.78, std_deviation: 84.667
CH ID = 189
,  numNodesWithinArea: 0
level: 5, index = 71 { 12(230, 31) 204(530, 255) 236(348, 335) 108(8, 165) 375(172, 513) 14(202, 29)  } , COG: ( 248.333, 221.333), avg_dist: 228.705, std_deviation: 53.2567
CH ID = 236
,  numNodesWithinArea: 0
