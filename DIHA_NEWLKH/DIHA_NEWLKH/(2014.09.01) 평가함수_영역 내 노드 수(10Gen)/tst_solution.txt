level: 1, index = 0 { 161(180, 1) 36(36, 15) 124(218, 335) 80(316, 253) 3(286, 321) 76(226, 123) 9(266, 159) 84(426, 7) 22(442, 475) 73(268, 91) 252(226, 347) 145(92, 99) 163(260, 113) 27(174, 455) 77(472, 161) 162(136, 49) 1(388, 315) 58(110, 233) 23(494, 343) 79(376, 461) 266(230, 255) 196(12, 327) 49(494, 385) 45(266, 397) 41(178, 425) 104(108, 465) 33(80, 181) 95(170, 461) 53(266, 97) 187(292, 33) 72(330, 161) 105(98, 265) 193(470, 51) 48(106, 289) 46(230, 491) 150(420, 387) 29(292, 255) 86(312, 45) 91(354, 471) 71(298, 307) 47(160, 493) 38(324, 39) 123(254, 101) 138(120, 249) 20(322, 283) 34(402, 69) 97(456, 161) 239(262, 39) 13(264, 493) 122(248, 159) 116(20, 333) 120(330, 481) 135(490, 21) 216(318, 299) 155(58, 321) 255(482, 131) 140(400, 341) 183(62, 111) 21(394, 447) 215(176, 281) 265(80, 189) 194(342, 5) 188(222, 27) 274(230, 393) 100(104, 191) 181(290, 279) 292(108, 187) 30(238, 451) 19(456, 21) 92(32, 415) 223(390, 81) 55(284, 39) 130(108, 103) 232(42, 113) 16(306, 81) 197(380, 105) 149(182, 9) 69(492, 95) 251(482, 211) 210(436, 491) 175(260, 205) 206(444, 163) 192(300, 163) 143(356, 287) 247(76, 49) 298(136, 419) 125(376, 449) 212(410, 139) 44(120, 485) 88(30, 123) 129(98, 91) 260(406, 47) 24(402, 429) 54(220, 377) 7(86, 129) 111(474, 417) 109(360, 131) 179(484, 7) 141(294, 389) 203(86, 303) 98(210, 477) 280(24, 21) 286(318, 17) 275(150, 79) 289(76, 53) 276(30, 139) 182(206, 295) 43(356, 497) 56(314, 489) 87(396, 495) 107(366, 453) 35(480, 15) 6(330, 445) 42(208, 457) 121(58, 179) 39(96, 147) 246(232, 299) 67(56, 409) 189(184, 141) 231(476, 323) 51(86, 33) 166(306, 217) 31(182, 389) 113(494, 187) 93(84, 455) 174(330, 241) 168(318, 395) 284(238, 223) 264(34, 117) 295(156, 83) 271(98, 117) 261(198, 23) 202(34, 57) 62(114, 437) 250(304, 143) 96(336, 269) 103(188, 195) 4(108, 185) 159(58, 345) 101(60, 161) 290(144, 241) 230(42, 455) 173(258, 487) 118(148, 21) 132(320, 381) 184(130, 151) 94(4, 73) 241(66, 185) 191(64, 321) 70(18, 175)  } , COG: ( 240.32, 236.24), avg_dist: 197.815, std_deviation: 72.4315
,  numNodesWithinArea: 68
level: 1, index = 1 { 256(404, 411) 63(474, 419) 40(106, 399) 2(432, 197) 50(432, 181) 297(390, 137) 5(362, 201) 209(292, 79) 64(318, 61) 185(296, 85) 294(420, 175) 242(400, 253) 146(432, 91) 32(316, 253) 17(268, 459) 178(124, 211) 283(468, 409) 78(324, 235) 139(266, 235) 14(348, 405) 235(456, 141) 0(448, 217) 279(288, 441) 8(416, 45) 126(214, 373) 12(38, 443) 245(470, 273) 142(444, 451) 26(208, 65) 52(442, 1) 102(328, 445) 198(222, 265) 127(458, 329) 233(154, 419) 170(114, 107) 236(424, 241) 177(150, 117) 244(428, 231) 154(132, 147) 134(340, 11) 207(286, 241) 208(416, 23) 89(292, 159) 74(330, 103) 137(174, 313) 299(468, 47) 287(356, 155) 217(260, 369) 11(98, 19) 18(300, 315) 164(438, 47) 81(452, 475) 114(6, 183) 65(172, 13) 257(392, 449) 10(106, 337) 190(0, 355) 248(412, 327) 85(372, 37) 169(356, 45) 66(26, 159) 147(88, 213) 281(78, 471) 131(176, 65) 285(54, 283) 15(494, 123) 288(314, 185) 110(226, 181) 243(482, 107) 117(180, 429) 153(182, 101) 151(162, 495) 119(394, 255) 90(318, 305) 37(276, 75) 201(94, 479) 133(454, 289) 83(296, 135) 258(438, 453) 254(404, 285) 186(242, 153) 157(296, 159) 218(12, 73) 267(496, 409) 176(22, 423) 213(194, 431) 160(304, 99) 249(254, 169) 263(262, 321) 60(446, 431) 28(446, 249) 282(212, 465) 211(250, 323) 220(304, 383) 237(86, 393) 259(80, 217) 195(64, 345) 200(218, 25) 108(6, 125) 136(30, 331) 225(52, 395) 253(176, 125) 268(10, 221) 158(332, 113) 204(440, 141) 25(188, 201) 148(32, 427) 57(480, 455) 82(408, 363) 165(188, 331) 112(236, 321) 156(208, 145) 221(62, 191) 270(6, 481) 171(394, 179) 219(56, 413) 167(252, 423) 229(192, 411) 228(316, 279) 99(254, 441) 238(232, 473) 240(14, 413) 226(244, 477) 205(260, 455) 180(406, 315) 273(52, 167) 68(110, 263) 172(118, 79) 128(438, 337) 61(84, 275) 152(318, 391) 277(498, 491) 269(50, 83) 75(278, 143) 106(328, 333) 144(36, 411) 227(366, 195) 214(304, 313) 59(252, 7) 278(340, 327) 222(208, 373) 291(490, 201) 296(116, 185) 293(54, 481) 262(306, 145) 199(96, 213) 272(48, 411) 115(290, 19) 224(312, 165) 234(32, 157)  } , COG: ( 260.36, 257.573), avg_dist: 191.473, std_deviation: 70.6025
,  numNodesWithinArea: 81
level: 2, index = 0 { 161(180, 1) 36(36, 15) 124(218, 335) 80(316, 253) 3(286, 321) 76(226, 123) 9(266, 159) 84(426, 7) 22(442, 475) 73(268, 91) 252(226, 347) 145(92, 99) 163(260, 113) 27(174, 455) 77(472, 161) 162(136, 49) 1(388, 315) 58(110, 233) 23(494, 343) 79(376, 461) 266(230, 255) 196(12, 327) 49(494, 385) 45(266, 397) 41(178, 425) 104(108, 465) 33(80, 181) 95(170, 461) 53(266, 97) 187(292, 33) 72(330, 161) 105(98, 265) 193(470, 51) 48(106, 289) 46(230, 491) 150(420, 387) 29(292, 255) 86(312, 45) 91(354, 471) 71(298, 307) 47(160, 493) 38(324, 39) 123(254, 101) 138(120, 249) 20(322, 283) 34(402, 69) 97(456, 161) 239(262, 39) 13(264, 493) 122(248, 159) 116(20, 333) 120(330, 481) 135(490, 21) 216(318, 299) 155(58, 321) 255(482, 131) 140(400, 341) 183(62, 111) 21(394, 447) 215(176, 281) 265(80, 189) 194(342, 5) 188(222, 27) 274(230, 393) 100(104, 191) 181(290, 279) 292(108, 187) 30(238, 451) 19(456, 21) 92(32, 415) 223(390, 81) 55(284, 39) 130(108, 103) 232(42, 113) 16(306, 81) 197(380, 105) 149(182, 9) 69(492, 95) 251(482, 211) 210(436, 491)  } , COG: ( 264.3, 230.525), avg_dist: 194.711, std_deviation: 71.1203
,  numNodesWithinArea: 19
level: 2, index = 1 { 175(260, 205) 206(444, 163) 192(300, 163) 143(356, 287) 247(76, 49) 298(136, 419) 125(376, 449) 212(410, 139) 44(120, 485) 88(30, 123) 129(98, 91) 260(406, 47) 24(402, 429) 54(220, 377) 7(86, 129) 111(474, 417) 109(360, 131) 179(484, 7) 141(294, 389) 203(86, 303) 98(210, 477) 280(24, 21) 286(318, 17) 275(150, 79) 289(76, 53) 276(30, 139) 182(206, 295) 43(356, 497) 56(314, 489) 87(396, 495) 107(366, 453) 35(480, 15) 6(330, 445) 42(208, 457) 121(58, 179) 39(96, 147) 246(232, 299) 67(56, 409) 189(184, 141) 231(476, 323) 51(86, 33) 166(306, 217) 31(182, 389) 113(494, 187) 93(84, 455) 174(330, 241) 168(318, 395) 284(238, 223) 264(34, 117) 295(156, 83) 271(98, 117) 261(198, 23) 202(34, 57) 62(114, 437) 250(304, 143) 96(336, 269) 103(188, 195) 4(108, 185) 159(58, 345) 101(60, 161) 290(144, 241) 230(42, 455) 173(258, 487) 118(148, 21) 132(320, 381) 184(130, 151) 94(4, 73) 241(66, 185) 191(64, 321) 70(18, 175)  } , COG: ( 212.914, 242.771), avg_dist: 197.998, std_deviation: 72.7564
,  numNodesWithinArea: 16
level: 2, index = 2 { 256(404, 411) 63(474, 419) 40(106, 399) 2(432, 197) 50(432, 181) 297(390, 137) 5(362, 201) 209(292, 79) 64(318, 61) 185(296, 85) 294(420, 175) 242(400, 253) 146(432, 91) 32(316, 253) 17(268, 459) 178(124, 211) 283(468, 409) 78(324, 235) 139(266, 235) 14(348, 405) 235(456, 141) 0(448, 217) 279(288, 441) 8(416, 45) 126(214, 373) 12(38, 443) 245(470, 273) 142(444, 451) 26(208, 65) 52(442, 1) 102(328, 445) 198(222, 265) 127(458, 329) 233(154, 419) 170(114, 107) 236(424, 241) 177(150, 117) 244(428, 231) 154(132, 147) 134(340, 11) 207(286, 241) 208(416, 23) 89(292, 159) 74(330, 103) 137(174, 313) 299(468, 47) 287(356, 155) 217(260, 369) 11(98, 19) 18(300, 315) 164(438, 47) 81(452, 475) 114(6, 183) 65(172, 13) 257(392, 449) 10(106, 337) 190(0, 355) 248(412, 327) 85(372, 37) 169(356, 45) 66(26, 159) 147(88, 213) 281(78, 471) 131(176, 65) 285(54, 283) 15(494, 123) 288(314, 185) 110(226, 181) 243(482, 107) 117(180, 429) 153(182, 101) 151(162, 495) 119(394, 255) 90(318, 305) 37(276, 75) 201(94, 479) 133(454, 289) 83(296, 135) 258(438, 453) 254(404, 285)  } , COG: ( 298.35, 234.475), avg_dist: 184.017, std_deviation: 75.5774
,  numNodesWithinArea: 23
level: 2, index = 3 { 186(242, 153) 157(296, 159) 218(12, 73) 267(496, 409) 176(22, 423) 213(194, 431) 160(304, 99) 249(254, 169) 263(262, 321) 60(446, 431) 28(446, 249) 282(212, 465) 211(250, 323) 220(304, 383) 237(86, 393) 259(80, 217) 195(64, 345) 200(218, 25) 108(6, 125) 136(30, 331) 225(52, 395) 253(176, 125) 268(10, 221) 158(332, 113) 204(440, 141) 25(188, 201) 148(32, 427) 57(480, 455) 82(408, 363) 165(188, 331) 112(236, 321) 156(208, 145) 221(62, 191) 270(6, 481) 171(394, 179) 219(56, 413) 167(252, 423) 229(192, 411) 228(316, 279) 99(254, 441) 238(232, 473) 240(14, 413) 226(244, 477) 205(260, 455) 180(406, 315) 273(52, 167) 68(110, 263) 172(118, 79) 128(438, 337) 61(84, 275) 152(318, 391) 277(498, 491) 269(50, 83) 75(278, 143) 106(328, 333) 144(36, 411) 227(366, 195) 214(304, 313) 59(252, 7) 278(340, 327) 222(208, 373) 291(490, 201) 296(116, 185) 293(54, 481) 262(306, 145) 199(96, 213) 272(48, 411) 115(290, 19) 224(312, 165) 234(32, 157)  } , COG: ( 216.943, 283.971), avg_dist: 186.124, std_deviation: 67.3187
,  numNodesWithinArea: 18
level: 3, index = 0 { 161(180, 1) 36(36, 15) 124(218, 335) 80(316, 253) 3(286, 321) 76(226, 123) 9(266, 159) 84(426, 7) 22(442, 475) 73(268, 91) 252(226, 347) 145(92, 99) 163(260, 113) 27(174, 455) 77(472, 161) 162(136, 49) 1(388, 315) 58(110, 233) 23(494, 343) 79(376, 461) 266(230, 255) 196(12, 327) 49(494, 385) 45(266, 397) 41(178, 425) 104(108, 465) 33(80, 181) 95(170, 461) 53(266, 97) 187(292, 33) 72(330, 161) 105(98, 265) 193(470, 51) 48(106, 289) 46(230, 491) 150(420, 387) 29(292, 255) 86(312, 45) 91(354, 471) 71(298, 307)  } , COG: ( 259.95, 252.6), avg_dist: 185.122, std_deviation: 76.779
,  numNodesWithinArea: 7
level: 3, index = 1 { 47(160, 493) 38(324, 39) 123(254, 101) 138(120, 249) 20(322, 283) 34(402, 69) 97(456, 161) 239(262, 39) 13(264, 493) 122(248, 159) 116(20, 333) 120(330, 481) 135(490, 21) 216(318, 299) 155(58, 321) 255(482, 131) 140(400, 341) 183(62, 111) 21(394, 447) 215(176, 281) 265(80, 189) 194(342, 5) 188(222, 27) 274(230, 393) 100(104, 191) 181(290, 279) 292(108, 187) 30(238, 451) 19(456, 21) 92(32, 415) 223(390, 81) 55(284, 39) 130(108, 103) 232(42, 113) 16(306, 81) 197(380, 105) 149(182, 9) 69(492, 95) 251(482, 211) 210(436, 491)  } , COG: ( 268.65, 208.45), avg_dist: 200.881, std_deviation: 66.4047
,  numNodesWithinArea: 3
level: 3, index = 2 { 175(260, 205) 206(444, 163) 192(300, 163) 143(356, 287) 247(76, 49) 298(136, 419) 125(376, 449) 212(410, 139) 44(120, 485) 88(30, 123) 129(98, 91) 260(406, 47) 24(402, 429) 54(220, 377) 7(86, 129) 111(474, 417) 109(360, 131) 179(484, 7) 141(294, 389) 203(86, 303) 98(210, 477) 280(24, 21) 286(318, 17) 275(150, 79) 289(76, 53) 276(30, 139) 182(206, 295) 43(356, 497) 56(314, 489) 87(396, 495) 107(366, 453) 35(480, 15) 6(330, 445) 42(208, 457) 121(58, 179) 39(96, 147) 246(232, 299) 67(56, 409) 189(184, 141) 231(476, 323)  } , COG: ( 249.6, 255.8), avg_dist: 210.909, std_deviation: 70.3718
,  numNodesWithinArea: 3
level: 3, index = 3 { 51(86, 33) 166(306, 217) 31(182, 389) 113(494, 187) 93(84, 455) 174(330, 241) 168(318, 395) 284(238, 223) 264(34, 117) 295(156, 83) 271(98, 117) 261(198, 23) 202(34, 57) 62(114, 437) 250(304, 143) 96(336, 269) 103(188, 195) 4(108, 185) 159(58, 345) 101(60, 161) 290(144, 241) 230(42, 455) 173(258, 487) 118(148, 21) 132(320, 381) 184(130, 151) 94(4, 73) 241(66, 185) 191(64, 321) 70(18, 175)  } , COG: ( 164, 225.4), avg_dist: 168.465, std_deviation: 69.4047
,  numNodesWithinArea: 5
level: 3, index = 4 { 256(404, 411) 63(474, 419) 40(106, 399) 2(432, 197) 50(432, 181) 297(390, 137) 5(362, 201) 209(292, 79) 64(318, 61) 185(296, 85) 294(420, 175) 242(400, 253) 146(432, 91) 32(316, 253) 17(268, 459) 178(124, 211) 283(468, 409) 78(324, 235) 139(266, 235) 14(348, 405) 235(456, 141) 0(448, 217) 279(288, 441) 8(416, 45) 126(214, 373) 12(38, 443) 245(470, 273) 142(444, 451) 26(208, 65) 52(442, 1) 102(328, 445) 198(222, 265) 127(458, 329) 233(154, 419) 170(114, 107) 236(424, 241) 177(150, 117) 244(428, 231) 154(132, 147) 134(340, 11)  } , COG: ( 326.15, 241.45), avg_dist: 170.171, std_deviation: 72.0239
,  numNodesWithinArea: 6
level: 3, index = 5 { 207(286, 241) 208(416, 23) 89(292, 159) 74(330, 103) 137(174, 313) 299(468, 47) 287(356, 155) 217(260, 369) 11(98, 19) 18(300, 315) 164(438, 47) 81(452, 475) 114(6, 183) 65(172, 13) 257(392, 449) 10(106, 337) 190(0, 355) 248(412, 327) 85(372, 37) 169(356, 45) 66(26, 159) 147(88, 213) 281(78, 471) 131(176, 65) 285(54, 283) 15(494, 123) 288(314, 185) 110(226, 181) 243(482, 107) 117(180, 429) 153(182, 101) 151(162, 495) 119(394, 255) 90(318, 305) 37(276, 75) 201(94, 479) 133(454, 289) 83(296, 135) 258(438, 453) 254(404, 285)  } , COG: ( 270.55, 227.5), avg_dist: 193.07, std_deviation: 77.9984
,  numNodesWithinArea: 7
level: 3, index = 6 { 186(242, 153) 157(296, 159) 218(12, 73) 267(496, 409) 176(22, 423) 213(194, 431) 160(304, 99) 249(254, 169) 263(262, 321) 60(446, 431) 28(446, 249) 282(212, 465) 211(250, 323) 220(304, 383) 237(86, 393) 259(80, 217) 195(64, 345) 200(218, 25) 108(6, 125) 136(30, 331) 225(52, 395) 253(176, 125) 268(10, 221) 158(332, 113) 204(440, 141) 25(188, 201) 148(32, 427) 57(480, 455) 82(408, 363) 165(188, 331) 112(236, 321) 156(208, 145) 221(62, 191) 270(6, 481) 171(394, 179) 219(56, 413) 167(252, 423) 229(192, 411) 228(316, 279) 99(254, 441)  } , COG: ( 212.65, 289.5), avg_dist: 181.391, std_deviation: 71.1652
,  numNodesWithinArea: 5
level: 3, index = 7 { 238(232, 473) 240(14, 413) 226(244, 477) 205(260, 455) 180(406, 315) 273(52, 167) 68(110, 263) 172(118, 79) 128(438, 337) 61(84, 275) 152(318, 391) 277(498, 491) 269(50, 83) 75(278, 143) 106(328, 333) 144(36, 411) 227(366, 195) 214(304, 313) 59(252, 7) 278(340, 327) 222(208, 373) 291(490, 201) 296(116, 185) 293(54, 481) 262(306, 145) 199(96, 213) 272(48, 411) 115(290, 19) 224(312, 165) 234(32, 157)  } , COG: ( 222.667, 276.6), avg_dist: 191.89, std_deviation: 61.7183
,  numNodesWithinArea: 2
level: 4, index = 0 { 161(180, 1) 36(36, 15) 124(218, 335) 80(316, 253) 3(286, 321) 76(226, 123) 9(266, 159) 84(426, 7) 22(442, 475) 73(268, 91) 252(226, 347) 145(92, 99) 163(260, 113) 27(174, 455) 77(472, 161) 162(136, 49) 1(388, 315) 58(110, 233) 23(494, 343) 79(376, 461)  } , COG: ( 269.6, 217.8), avg_dist: 183.467, std_deviation: 77.5799
,  numNodesWithinArea: 2
level: 4, index = 1 { 266(230, 255) 196(12, 327) 49(494, 385) 45(266, 397) 41(178, 425) 104(108, 465) 33(80, 181) 95(170, 461) 53(266, 97) 187(292, 33) 72(330, 161) 105(98, 265) 193(470, 51) 48(106, 289) 46(230, 491) 150(420, 387) 29(292, 255) 86(312, 45) 91(354, 471) 71(298, 307)  } , COG: ( 250.3, 287.4), avg_dist: 180.706, std_deviation: 73.4086
,  numNodesWithinArea: 3
level: 4, index = 2 { 47(160, 493) 38(324, 39) 123(254, 101) 138(120, 249) 20(322, 283) 34(402, 69) 97(456, 161) 239(262, 39) 13(264, 493) 122(248, 159) 116(20, 333) 120(330, 481) 135(490, 21) 216(318, 299) 155(58, 321) 255(482, 131) 140(400, 341) 183(62, 111) 21(394, 447) 215(176, 281)  } , COG: ( 277.1, 242.6), avg_dist: 195.666, std_deviation: 69.7862
,  numNodesWithinArea: 2
level: 4, index = 3 { 265(80, 189) 194(342, 5) 188(222, 27) 274(230, 393) 100(104, 191) 181(290, 279) 292(108, 187) 30(238, 451) 19(456, 21) 92(32, 415) 223(390, 81) 55(284, 39) 130(108, 103) 232(42, 113) 16(306, 81) 197(380, 105) 149(182, 9) 69(492, 95) 251(482, 211) 210(436, 491)  } , COG: ( 260.2, 174.3), avg_dist: 198.378, std_deviation: 67.3889
,  numNodesWithinArea: 0
level: 4, index = 4 { 175(260, 205) 206(444, 163) 192(300, 163) 143(356, 287) 247(76, 49) 298(136, 419) 125(376, 449) 212(410, 139) 44(120, 485) 88(30, 123) 129(98, 91) 260(406, 47) 24(402, 429) 54(220, 377) 7(86, 129) 111(474, 417) 109(360, 131) 179(484, 7) 141(294, 389) 203(86, 303)  } , COG: ( 270.9, 240.1), avg_dist: 199.593, std_deviation: 71.2679
,  numNodesWithinArea: 1
level: 4, index = 5 { 98(210, 477) 280(24, 21) 286(318, 17) 275(150, 79) 289(76, 53) 276(30, 139) 182(206, 295) 43(356, 497) 56(314, 489) 87(396, 495) 107(366, 453) 35(480, 15) 6(330, 445) 42(208, 457) 121(58, 179) 39(96, 147) 246(232, 299) 67(56, 409) 189(184, 141) 231(476, 323)  } , COG: ( 228.3, 271.5), avg_dist: 215.308, std_deviation: 78.7065
,  numNodesWithinArea: 2
level: 4, index = 6 { 51(86, 33) 166(306, 217) 31(182, 389) 113(494, 187) 93(84, 455) 174(330, 241) 168(318, 395) 284(238, 223) 264(34, 117) 295(156, 83) 271(98, 117) 261(198, 23) 202(34, 57) 62(114, 437) 250(304, 143) 96(336, 269) 103(188, 195) 4(108, 185) 159(58, 345) 101(60, 161)  } , COG: ( 186.3, 213.6), avg_dist: 165.235, std_deviation: 67.5628
,  numNodesWithinArea: 2
level: 4, index = 7 { 290(144, 241) 230(42, 455) 173(258, 487) 118(148, 21) 132(320, 381) 184(130, 151) 94(4, 73) 241(66, 185) 191(64, 321) 70(18, 175)  } , COG: ( 119.4, 249), avg_dist: 160.003, std_deviation: 80.2346
,  numNodesWithinArea: 1
level: 4, index = 8 { 256(404, 411) 63(474, 419) 40(106, 399) 2(432, 197) 50(432, 181) 297(390, 137) 5(362, 201) 209(292, 79) 64(318, 61) 185(296, 85) 294(420, 175) 242(400, 253) 146(432, 91) 32(316, 253) 17(268, 459) 178(124, 211) 283(468, 409) 78(324, 235) 139(266, 235) 14(348, 405)  } , COG: ( 343.6, 244.8), avg_dist: 143.021, std_deviation: 71.4478
,  numNodesWithinArea: 4
level: 4, index = 9 { 235(456, 141) 0(448, 217) 279(288, 441) 8(416, 45) 126(214, 373) 12(38, 443) 245(470, 273) 142(444, 451) 26(208, 65) 52(442, 1) 102(328, 445) 198(222, 265) 127(458, 329) 233(154, 419) 170(114, 107) 236(424, 241) 177(150, 117) 244(428, 231) 154(132, 147) 134(340, 11)  } , COG: ( 308.7, 238.1), avg_dist: 197.235, std_deviation: 56.554
,  numNodesWithinArea: 0
level: 4, index = 10 { 207(286, 241) 208(416, 23) 89(292, 159) 74(330, 103) 137(174, 313) 299(468, 47) 287(356, 155) 217(260, 369) 11(98, 19) 18(300, 315) 164(438, 47) 81(452, 475) 114(6, 183) 65(172, 13) 257(392, 449) 10(106, 337) 190(0, 355) 248(412, 327) 85(372, 37) 169(356, 45)  } , COG: ( 284.3, 200.6), avg_dist: 191.553, std_deviation: 80.6404
,  numNodesWithinArea: 2
level: 4, index = 11 { 66(26, 159) 147(88, 213) 281(78, 471) 131(176, 65) 285(54, 283) 15(494, 123) 288(314, 185) 110(226, 181) 243(482, 107) 117(180, 429) 153(182, 101) 151(162, 495) 119(394, 255) 90(318, 305) 37(276, 75) 201(94, 479) 133(454, 289) 83(296, 135) 258(438, 453) 254(404, 285)  } , COG: ( 256.8, 254.4), avg_dist: 193.225, std_deviation: 66.055
,  numNodesWithinArea: 0
level: 4, index = 12 { 186(242, 153) 157(296, 159) 218(12, 73) 267(496, 409) 176(22, 423) 213(194, 431) 160(304, 99) 249(254, 169) 263(262, 321) 60(446, 431) 28(446, 249) 282(212, 465) 211(250, 323) 220(304, 383) 237(86, 393) 259(80, 217) 195(64, 345) 200(218, 25) 108(6, 125) 136(30, 331)  } , COG: ( 211.2, 276.2), avg_dist: 186.534, std_deviation: 68.9623
,  numNodesWithinArea: 2
level: 4, index = 13 { 225(52, 395) 253(176, 125) 268(10, 221) 158(332, 113) 204(440, 141) 25(188, 201) 148(32, 427) 57(480, 455) 82(408, 363) 165(188, 331) 112(236, 321) 156(208, 145) 221(62, 191) 270(6, 481) 171(394, 179) 219(56, 413) 167(252, 423) 229(192, 411) 228(316, 279) 99(254, 441)  } , COG: ( 214.1, 302.8), avg_dist: 175.402, std_deviation: 72.5245
,  numNodesWithinArea: 2
level: 4, index = 14 { 238(232, 473) 240(14, 413) 226(244, 477) 205(260, 455) 180(406, 315) 273(52, 167) 68(110, 263) 172(118, 79) 128(438, 337) 61(84, 275) 152(318, 391) 277(498, 491) 269(50, 83) 75(278, 143) 106(328, 333) 144(36, 411) 227(366, 195) 214(304, 313) 59(252, 7) 278(340, 327)  } , COG: ( 236.4, 297.4), avg_dist: 187.804, std_deviation: 66.8961
,  numNodesWithinArea: 1
level: 4, index = 15 { 222(208, 373) 291(490, 201) 296(116, 185) 293(54, 481) 262(306, 145) 199(96, 213) 272(48, 411) 115(290, 19) 224(312, 165) 234(32, 157)  } , COG: ( 195.2, 235), avg_dist: 183.939, std_deviation: 69.5771
,  numNodesWithinArea: 0
level: 5, index = 0 { 161(180, 1) 36(36, 15) 124(218, 335) 80(316, 253) 3(286, 321)  } , COG: ( 207.2, 185), avg_dist: 172.627, std_deviation: 38.9565
,  numNodesWithinArea: 0
level: 5, index = 1 { 76(226, 123) 9(266, 159) 84(426, 7) 22(442, 475) 73(268, 91)  } , COG: ( 325.6, 171), avg_dist: 157.55, std_deviation: 94.3064
,  numNodesWithinArea: 0
level: 5, index = 2 { 252(226, 347) 145(92, 99) 163(260, 113) 27(174, 455) 77(472, 161)  } , COG: ( 244.8, 235), avg_dist: 182.225, std_deviation: 53.5432
,  numNodesWithinArea: 0
level: 5, index = 3 { 162(136, 49) 1(388, 315) 58(110, 233) 23(494, 343) 79(376, 461)  } , COG: ( 300.8, 280.2), avg_dist: 194.666, std_deviation: 60.3325
,  numNodesWithinArea: 0
level: 5, index = 4 { 266(230, 255) 196(12, 327) 49(494, 385) 45(266, 397) 41(178, 425)  } , COG: ( 236, 357.8), avg_dist: 145.329, std_deviation: 82.1544
,  numNodesWithinArea: 0
level: 5, index = 5 { 104(108, 465) 33(80, 181) 95(170, 461) 53(266, 97) 187(292, 33)  } , COG: ( 183.2, 247.4), avg_dist: 195.813, std_deviation: 43.4305
,  numNodesWithinArea: 0
level: 5, index = 6 { 72(330, 161) 105(98, 265) 193(470, 51) 48(106, 289) 46(230, 491)  } , COG: ( 246.8, 251.4), avg_dist: 191.633, std_deviation: 67.3969
,  numNodesWithinArea: 0
level: 5, index = 7 { 150(420, 387) 29(292, 255) 86(312, 45) 91(354, 471) 71(298, 307)  } , COG: ( 335.2, 293), avg_dist: 130.391, std_deviation: 77.4446
,  numNodesWithinArea: 0
level: 5, index = 8 { 47(160, 493) 38(324, 39) 123(254, 101) 138(120, 249) 20(322, 283)  } , COG: ( 236, 233), avg_dist: 166.741, std_deviation: 64.9606
,  numNodesWithinArea: 0
level: 5, index = 9 { 34(402, 69) 97(456, 161) 239(262, 39) 13(264, 493) 122(248, 159)  } , COG: ( 326.4, 184.2), avg_dist: 165.137, std_deviation: 79.0356
,  numNodesWithinArea: 0
level: 5, index = 10 { 116(20, 333) 120(330, 481) 135(490, 21) 216(318, 299) 155(58, 321)  } , COG: ( 243.2, 291), avg_dist: 212.929, std_deviation: 92.9411
,  numNodesWithinArea: 0
level: 5, index = 11 { 255(482, 131) 140(400, 341) 183(62, 111) 21(394, 447) 215(176, 281)  } , COG: ( 302.8, 262.2), avg_dist: 193.165, std_deviation: 60.2772
,  numNodesWithinArea: 0
level: 5, index = 12 { 265(80, 189) 194(342, 5) 188(222, 27) 274(230, 393) 100(104, 191)  } , COG: ( 195.6, 161), avg_dist: 160.076, std_deviation: 54.3061
,  numNodesWithinArea: 0
level: 5, index = 13 { 181(290, 279) 292(108, 187) 30(238, 451) 19(456, 21) 92(32, 415)  } , COG: ( 224.8, 270.6), avg_dist: 194.273, std_deviation: 92.4542
,  numNodesWithinArea: 0
level: 5, index = 14 { 223(390, 81) 55(284, 39) 130(108, 103) 232(42, 113) 16(306, 81)  } , COG: ( 226, 83.4), avg_dist: 124.616, std_deviation: 44.8053
,  numNodesWithinArea: 0
level: 5, index = 15 { 197(380, 105) 149(182, 9) 69(492, 95) 251(482, 211) 210(436, 491)  } , COG: ( 394.4, 182.2), avg_dist: 177.456, std_deviation: 96.4852
,  numNodesWithinArea: 0
level: 5, index = 16 { 175(260, 205) 206(444, 163) 192(300, 163) 143(356, 287) 247(76, 49)  } , COG: ( 287.2, 173.4), avg_dist: 118.651, std_deviation: 82.5031
,  numNodesWithinArea: 1
level: 5, index = 17 { 298(136, 419) 125(376, 449) 212(410, 139) 44(120, 485) 88(30, 123)  } , COG: ( 214.4, 323), avg_dist: 211.388, std_deviation: 55.1427
,  numNodesWithinArea: 0
level: 5, index = 18 { 129(98, 91) 260(406, 47) 24(402, 429) 54(220, 377) 7(86, 129)  } , COG: ( 242.4, 214.6), avg_dist: 206.759, std_deviation: 38.3118
,  numNodesWithinArea: 0
level: 5, index = 19 { 111(474, 417) 109(360, 131) 179(484, 7) 141(294, 389) 203(86, 303)  } , COG: ( 339.6, 249.4), avg_dist: 204.638, std_deviation: 62.5572
,  numNodesWithinArea: 0
level: 5, index = 20 { 98(210, 477) 280(24, 21) 286(318, 17) 275(150, 79) 289(76, 53)  } , COG: ( 155.6, 129.4), avg_dist: 176.175, std_deviation: 101.409
,  numNodesWithinArea: 0
level: 5, index = 21 { 276(30, 139) 182(206, 295) 43(356, 497) 56(314, 489) 87(396, 495)  } , COG: ( 260.4, 383), avg_dist: 176.496, std_deviation: 83.3606
,  numNodesWithinArea: 0
level: 5, index = 22 { 107(366, 453) 35(480, 15) 6(330, 445) 42(208, 457) 121(58, 179)  } , COG: ( 288.4, 309.8), avg_dist: 217.718, std_deviation: 79.3415
,  numNodesWithinArea: 0
level: 5, index = 23 { 39(96, 147) 246(232, 299) 67(56, 409) 189(184, 141) 231(476, 323)  } , COG: ( 208.8, 263.8), avg_dist: 162.856, std_deviation: 78.1786
,  numNodesWithinArea: 0
level: 5, index = 24 { 51(86, 33) 166(306, 217) 31(182, 389) 113(494, 187) 93(84, 455)  } , COG: ( 230.4, 256.2), avg_dist: 202.352, std_deviation: 75.3596
,  numNodesWithinArea: 0
level: 5, index = 25 { 174(330, 241) 168(318, 395) 284(238, 223) 264(34, 117) 295(156, 83)  } , COG: ( 215.2, 211.8), avg_dist: 140.037, std_deviation: 67.3353
,  numNodesWithinArea: 1
level: 5, index = 26 { 271(98, 117) 261(198, 23) 202(34, 57) 62(114, 437) 250(304, 143)  } , COG: ( 149.6, 155.4), avg_dist: 159.167, std_deviation: 70.6302
,  numNodesWithinArea: 0
level: 5, index = 27 { 96(336, 269) 103(188, 195) 4(108, 185) 159(58, 345) 101(60, 161)  } , COG: ( 150, 231), avg_dist: 112.997, std_deviation: 51.5326
,  numNodesWithinArea: 0
level: 5, index = 28 { 290(144, 241) 230(42, 455) 173(258, 487) 118(148, 21) 132(320, 381)  } , COG: ( 182.4, 317), avg_dist: 183.563, std_deviation: 69.2445
,  numNodesWithinArea: 0
level: 5, index = 29 { 184(130, 151) 94(4, 73) 241(66, 185) 191(64, 321) 70(18, 175)  } , COG: ( 56.4, 181), avg_dist: 77.7984, std_deviation: 48.4567
,  numNodesWithinArea: 1
level: 5, index = 30 {  } 
level: 5, index = 31 {  } 
level: 5, index = 32 { 256(404, 411) 63(474, 419) 40(106, 399) 2(432, 197) 50(432, 181)  } , COG: ( 369.6, 321.4), avg_dist: 161.299, std_deviation: 60.0536
,  numNodesWithinArea: 0
level: 5, index = 33 { 297(390, 137) 5(362, 201) 209(292, 79) 64(318, 61) 185(296, 85)  } , COG: ( 331.6, 112.6), avg_dist: 61.423, std_deviation: 17.0555
,  numNodesWithinArea: 0
level: 5, index = 34 { 294(420, 175) 242(400, 253) 146(432, 91) 32(316, 253) 17(268, 459)  } , COG: ( 367.2, 246.2), avg_dist: 115.352, std_deviation: 75.5346
,  numNodesWithinArea: 1
level: 5, index = 35 { 178(124, 211) 283(468, 409) 78(324, 235) 139(266, 235) 14(348, 405)  } , COG: ( 306, 299), avg_dist: 130.789, std_deviation: 57.9632
,  numNodesWithinArea: 0
level: 5, index = 36 { 235(456, 141) 0(448, 217) 279(288, 441) 8(416, 45) 126(214, 373)  } , COG: ( 364.4, 243.4), avg_dist: 168.09, std_deviation: 48.1967
,  numNodesWithinArea: 0
level: 5, index = 37 { 12(38, 443) 245(470, 273) 142(444, 451) 26(208, 65) 52(442, 1)  } , COG: ( 320.4, 246.6), avg_dist: 244.476, std_deviation: 63.7666
,  numNodesWithinArea: 0
level: 5, index = 38 { 102(328, 445) 198(222, 265) 127(458, 329) 233(154, 419) 170(114, 107)  } , COG: ( 255.2, 313), avg_dist: 161.767, std_deviation: 64.065
,  numNodesWithinArea: 0
level: 5, index = 39 { 236(424, 241) 177(150, 117) 244(428, 231) 154(132, 147) 134(340, 11)  } , COG: ( 294.8, 149.4), avg_dist: 154.275, std_deviation: 6.38187
,  numNodesWithinArea: 0
level: 5, index = 40 { 207(286, 241) 208(416, 23) 89(292, 159) 74(330, 103) 137(174, 313)  } , COG: ( 299.6, 167.8), avg_dist: 107.085, std_deviation: 70.4835
,  numNodesWithinArea: 1
level: 5, index = 41 { 299(468, 47) 287(356, 155) 217(260, 369) 11(98, 19) 18(300, 315)  } , COG: ( 296.4, 181), avg_dist: 172.885, std_deviation: 66.9772
,  numNodesWithinArea: 0
level: 5, index = 42 { 164(438, 47) 81(452, 475) 114(6, 183) 65(172, 13) 257(392, 449)  } , COG: ( 292, 233.4), avg_dist: 261.114, std_deviation: 24.1886
,  numNodesWithinArea: 0
level: 5, index = 43 { 10(106, 337) 190(0, 355) 248(412, 327) 85(372, 37) 169(356, 45)  } , COG: ( 249.2, 220.2), avg_dist: 217.711, std_deviation: 34.8789
,  numNodesWithinArea: 0
level: 5, index = 44 { 66(26, 159) 147(88, 213) 281(78, 471) 131(176, 65) 285(54, 283)  } , COG: ( 84.4, 238.2), avg_dist: 121.364, std_deviation: 80.3023
,  numNodesWithinArea: 1
level: 5, index = 45 { 15(494, 123) 288(314, 185) 110(226, 181) 243(482, 107) 117(180, 429)  } , COG: ( 339.2, 205), avg_dist: 154.214, std_deviation: 79.6485
,  numNodesWithinArea: 1
level: 5, index = 46 { 153(182, 101) 151(162, 495) 119(394, 255) 90(318, 305) 37(276, 75)  } , COG: ( 266.4, 246.2), avg_dist: 163.073, std_deviation: 63.1246
,  numNodesWithinArea: 0
level: 5, index = 47 { 201(94, 479) 133(454, 289) 83(296, 135) 258(438, 453) 254(404, 285)  } , COG: ( 337.2, 328.2), avg_dist: 169.376, std_deviation: 70.3025
,  numNodesWithinArea: 0
level: 5, index = 48 { 186(242, 153) 157(296, 159) 218(12, 73) 267(496, 409) 176(22, 423)  } , COG: ( 213.6, 243.4), avg_dist: 213.333, std_deviation: 90.7252
,  numNodesWithinArea: 0
level: 5, index = 49 { 213(194, 431) 160(304, 99) 249(254, 169) 263(262, 321) 60(446, 431)  } , COG: ( 292, 290.2), avg_dist: 148.36, std_deviation: 59.3279
,  numNodesWithinArea: 0
level: 5, index = 50 { 28(446, 249) 282(212, 465) 211(250, 323) 220(304, 383) 237(86, 393)  } , COG: ( 259.6, 362.6), avg_dist: 119.412, std_deviation: 69.5899
,  numNodesWithinArea: 0
level: 5, index = 51 { 259(80, 217) 195(64, 345) 200(218, 25) 108(6, 125) 136(30, 331)  } , COG: ( 79.6, 208.6), avg_dist: 123.814, std_deviation: 70.6839
,  numNodesWithinArea: 1
level: 5, index = 52 { 225(52, 395) 253(176, 125) 268(10, 221) 158(332, 113) 204(440, 141)  } , COG: ( 202, 199), avg_dist: 183.868, std_deviation: 62.7422
,  numNodesWithinArea: 0
level: 5, index = 53 { 25(188, 201) 148(32, 427) 57(480, 455) 82(408, 363) 165(188, 331)  } , COG: ( 259.2, 355.4), avg_dist: 174.945, std_deviation: 61.9087
,  numNodesWithinArea: 0
level: 5, index = 54 { 112(236, 321) 156(208, 145) 221(62, 191) 270(6, 481) 171(394, 179)  } , COG: ( 181.2, 263.4), avg_dist: 169.731, std_deviation: 73.3718
,  numNodesWithinArea: 0
level: 5, index = 55 { 219(56, 413) 167(252, 423) 229(192, 411) 228(316, 279) 99(254, 441)  } , COG: ( 214, 393.4), avg_dist: 90.1994, std_deviation: 55.0264
,  numNodesWithinArea: 1
level: 5, index = 56 { 238(232, 473) 240(14, 413) 226(244, 477) 205(260, 455) 180(406, 315)  } , COG: ( 231.2, 426.6), avg_dist: 112.773, std_deviation: 81.5779
,  numNodesWithinArea: 0
level: 5, index = 57 { 273(52, 167) 68(110, 263) 172(118, 79) 128(438, 337) 61(84, 275)  } , COG: ( 160.4, 224.2), avg_dist: 145.765, std_deviation: 82.3588
,  numNodesWithinArea: 0
level: 5, index = 58 { 152(318, 391) 277(498, 491) 269(50, 83) 75(278, 143) 106(328, 333)  } , COG: ( 294.4, 288.2), avg_dist: 182.817, std_deviation: 102.879
,  numNodesWithinArea: 0
level: 5, index = 59 { 144(36, 411) 227(366, 195) 214(304, 313) 59(252, 7) 278(340, 327)  } , COG: ( 259.6, 250.6), avg_dist: 165.289, std_deviation: 78.8666
,  numNodesWithinArea: 0
level: 5, index = 60 { 222(208, 373) 291(490, 201) 296(116, 185) 293(54, 481) 262(306, 145)  } , COG: ( 234.8, 277), avg_dist: 187.754, std_deviation: 69.2161
,  numNodesWithinArea: 0
level: 5, index = 61 { 199(96, 213) 272(48, 411) 115(290, 19) 224(312, 165) 234(32, 157)  } , COG: ( 155.6, 193), avg_dist: 162.692, std_deviation: 64.6033
,  numNodesWithinArea: 0
level: 5, index = 62 {  } 
level: 5, index = 63 {  } 
